// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    [Migration("20241231141641_AddCouponsToCart")]
    partial class AddCouponsToCart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "South Wayne",
                            Country = "Mali",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(6388),
                            IsDeleted = false,
                            State = "Maine",
                            Street = "05794 Collier Points",
                            ZipCode = "90637"
                        },
                        new
                        {
                            Id = 2,
                            City = "Boganstad",
                            Country = "Barbados",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(7482),
                            IsDeleted = false,
                            State = "Louisiana",
                            Street = "16005 Lang Viaduct",
                            ZipCode = "75442"
                        },
                        new
                        {
                            Id = 3,
                            City = "Jasminland",
                            Country = "Tuvalu",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(7667),
                            IsDeleted = false,
                            State = "Arkansas",
                            Street = "44885 Autumn Villages",
                            ZipCode = "53039"
                        },
                        new
                        {
                            Id = 4,
                            City = "North Karlee",
                            Country = "Thailand",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(7810),
                            IsDeleted = false,
                            State = "Utah",
                            Street = "8121 Zieme Prairie",
                            ZipCode = "16433-7525"
                        },
                        new
                        {
                            Id = 5,
                            City = "Ardithberg",
                            Country = "Kazakhstan",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8019),
                            IsDeleted = false,
                            State = "Tennessee",
                            Street = "4809 Jaida Park",
                            ZipCode = "14574-5488"
                        },
                        new
                        {
                            Id = 6,
                            City = "North Vernice",
                            Country = "Somalia",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8169),
                            IsDeleted = false,
                            State = "Idaho",
                            Street = "90145 Lois Road",
                            ZipCode = "00137-3022"
                        },
                        new
                        {
                            Id = 7,
                            City = "West Danielle",
                            Country = "Finland",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8273),
                            IsDeleted = false,
                            State = "Virginia",
                            Street = "11589 Evert Motorway",
                            ZipCode = "80084"
                        },
                        new
                        {
                            Id = 8,
                            City = "East Alec",
                            Country = "Cote d'Ivoire",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8407),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "7528 Wilhelm Vista",
                            ZipCode = "01049-3162"
                        },
                        new
                        {
                            Id = 9,
                            City = "Jarrodmouth",
                            Country = "Zimbabwe",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8541),
                            IsDeleted = false,
                            State = "Montana",
                            Street = "672 Quinten Alley",
                            ZipCode = "49449"
                        },
                        new
                        {
                            Id = 10,
                            City = "New Grace",
                            Country = "France",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8675),
                            IsDeleted = false,
                            State = "Vermont",
                            Street = "1133 Rohan Radial",
                            ZipCode = "58465"
                        },
                        new
                        {
                            Id = 11,
                            City = "West Jamar",
                            Country = "Estonia",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8806),
                            IsDeleted = false,
                            State = "Connecticut",
                            Street = "55093 McDermott Islands",
                            ZipCode = "86132"
                        },
                        new
                        {
                            Id = 12,
                            City = "East Theodoreshire",
                            Country = "Angola",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(8938),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "333 Runolfsdottir Ford",
                            ZipCode = "51070"
                        },
                        new
                        {
                            Id = 13,
                            City = "Randyfurt",
                            Country = "Central African Republic",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(9067),
                            IsDeleted = false,
                            State = "Indiana",
                            Street = "95586 Lempi Courts",
                            ZipCode = "30304-4562"
                        },
                        new
                        {
                            Id = 14,
                            City = "Konopelskiview",
                            Country = "Austria",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(9238),
                            IsDeleted = false,
                            State = "Massachusetts",
                            Street = "6152 Sasha Track",
                            ZipCode = "49557-3627"
                        },
                        new
                        {
                            Id = 15,
                            City = "South Tracyfurt",
                            Country = "Finland",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 155, DateTimeKind.Utc).AddTicks(9390),
                            IsDeleted = false,
                            State = "Kentucky",
                            Street = "091 Dickens Loaf",
                            ZipCode = "37591-1480"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Et laudantium omnis. Et suscipit culpa harum qui eos expedita sunt magni. Rerum ipsam sit. Totam ipsa possimus reprehenderit sint qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(6031),
                            IsDeleted = false,
                            Name = "Marlin Carroll"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Quaerat accusantium rerum sed. Voluptate voluptate sit ipsum illo. Quibusdam sint sed tempore. Veritatis omnis optio autem pariatur voluptates.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(6409),
                            IsDeleted = false,
                            Name = "Sarai Kozey"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Unde est omnis alias. Dignissimos qui qui accusantium ratione non. Delectus saepe enim voluptatem temporibus. Quis sit ratione tempora et delectus expedita aperiam quo repellendus.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(6509),
                            IsDeleted = false,
                            Name = "Nigel Ledner"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Aliquid sint aperiam explicabo odit. Rerum recusandae beatae expedita aspernatur modi. Sint tempore et possimus sunt in. Officiis laboriosam facere consequatur nobis est aperiam sit quas ullam. Soluta qui eum et odit voluptatem et dicta.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(6630),
                            IsDeleted = false,
                            Name = "Isabell Lakin"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Omnis nostrum dolorem quis porro sequi laboriosam. Nihil soluta dolorem id quia praesentium aut sed repellat eum. Veniam minus aspernatur accusantium distinctio sint sed sed. Enim omnis quis. Minima necessitatibus ipsam voluptatum qui aliquid doloremque. Et laborum necessitatibus et aperiam earum nostrum et repudiandae.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(6774),
                            IsDeleted = false,
                            Name = "Duncan Bailey"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Porro harum facere unde et consectetur saepe quia. Dicta molestias dignissimos doloremque. Eos ex voluptatibus magni eos dignissimos quasi qui magnam.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(6916),
                            IsDeleted = false,
                            Name = "Virginie Howell"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Nam officiis nisi ab deserunt. Placeat laboriosam dolor voluptatem nisi exercitationem ullam possimus alias. Quos ipsa laboriosam itaque nostrum.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(7016),
                            IsDeleted = false,
                            Name = "Lilla Trantow"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Quaerat dolores corrupti et ducimus velit. Repellendus rem id molestias molestiae quisquam qui recusandae. Dignissimos magni fugit non sapiente sed.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(7081),
                            IsDeleted = false,
                            Name = "Clifton McCullough"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Voluptas voluptatem voluptatem dolore quos et ipsa quisquam ab. Soluta quos eum voluptate sit omnis in ab in. Distinctio qui voluptatem facere unde placeat maiores. Accusamus neque incidunt molestiae voluptatem assumenda quam eum. Doloremque impedit quo pariatur iure ea temporibus asperiores pariatur. Sit rerum fuga quisquam aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(7168),
                            IsDeleted = false,
                            Name = "Roselyn Schimmel"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Quia quod molestiae ipsa commodi ipsam velit voluptatem consectetur. Incidunt vel blanditiis. Autem eaque reiciendis et. Iure praesentium nostrum ab ex est voluptatem nam cum ab. Voluptas quisquam pariatur minus facilis quo amet aliquid temporibus inventore. Sunt placeat rem.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 146, DateTimeKind.Utc).AddTicks(7301),
                            IsDeleted = false,
                            Name = "Delia Kulas"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(1467),
                            Description = "Ipsam enim voluptas enim cupiditate cum corrupti. Ea ut quo. Sequi adipisci provident ea modi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 34.14m,
                            PrimaryGenreId = 4,
                            PublisherId = 1,
                            Title = "Reiciendis quia rerum."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(3410),
                            Description = "Vel quibusdam ipsa consectetur et. Qui dolor sequi dolore. Nulla voluptas earum assumenda voluptatem deleniti magni quia accusantium. Ratione fugit vel velit maiores ducimus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 48.41m,
                            PrimaryGenreId = 4,
                            PublisherId = 2,
                            Title = "Blanditiis sint omnis."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(3620),
                            Description = "Sit officia laboriosam eveniet aut. Consequatur qui perspiciatis inventore. Est suscipit delectus. Ut ipsum aut ipsam voluptates magnam voluptatem et suscipit.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 77.74m,
                            PrimaryGenreId = 3,
                            PublisherId = 3,
                            Title = "Quisquam maxime tempore."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(3758),
                            Description = "Ea sequi ut eius. Labore facere reiciendis sequi id in laudantium. Saepe nihil sed sunt laboriosam nulla commodi rem. Autem sit et eaque delectus eaque maxime animi quaerat. Sunt est ipsa libero doloribus voluptatem nemo animi repudiandae rem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 29.43m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Cum incidunt ea."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(3900),
                            Description = "In ratione et dolorem dolores ut facilis. Ut est ad praesentium beatae iure. Voluptate ducimus non.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 78.12m,
                            PrimaryGenreId = 2,
                            PublisherId = 2,
                            Title = "Velit placeat velit."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(3985),
                            Description = "Rerum quod dignissimos non consequuntur debitis qui vitae enim. Et neque est quaerat odio ullam temporibus explicabo aliquid modi. Sint qui est aut sit aperiam nostrum. Itaque praesentium qui est accusamus veritatis ut dolor.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 73.22m,
                            PrimaryGenreId = 3,
                            PublisherId = 1,
                            Title = "Provident vero sed."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(4207),
                            Description = "Sint soluta consequatur sed. Aspernatur veniam optio et suscipit reprehenderit temporibus reiciendis autem. Consequatur est in officia pariatur quos vel quo sint.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 52.28m,
                            PrimaryGenreId = 4,
                            PublisherId = 4,
                            Title = "Et sit optio."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(4285),
                            Description = "Pariatur sapiente facere ut id et debitis odio. Et recusandae adipisci quo porro eos exercitationem et consequatur. Non quidem ut dolore alias atque. Accusamus corrupti rerum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 10.94m,
                            PrimaryGenreId = 7,
                            PublisherId = 2,
                            Title = "Tempore soluta magni."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(4455),
                            Description = "Non fugiat tempora voluptatibus perspiciatis non non provident exercitationem molestiae. Inventore qui cum possimus odit. Id at magnam consequatur esse eum aspernatur quaerat.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 27.74m,
                            PrimaryGenreId = 7,
                            PublisherId = 5,
                            Title = "Quidem eos nobis."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(4529),
                            Description = "Aut eum nulla qui dolorum maiores provident quasi eum repellendus. A mollitia enim quia. Et architecto dolorem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 45.41m,
                            PrimaryGenreId = 5,
                            PublisherId = 3,
                            Title = "Quia voluptatum fugiat."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(4631),
                            Description = "Facere ea et perspiciatis voluptas. Quo iure excepturi hic voluptate beatae. Tempora ipsa eum nemo ea adipisci perferendis. Ut ea libero adipisci libero quod ea placeat. Quia nihil aspernatur nam voluptatem rem et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 84.53m,
                            PrimaryGenreId = 4,
                            PublisherId = 5,
                            Title = "Nulla omnis laudantium."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(4759),
                            Description = "Sint aut placeat aliquid minus quisquam iure dolores. Distinctio sequi perspiciatis dolorem nihil earum quia qui ut. Aperiam et corporis placeat id impedit cupiditate ut. Accusamus cumque temporibus id autem fugit alias minima. Doloribus quos voluptas. Sint totam neque vel.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 25.88m,
                            PrimaryGenreId = 1,
                            PublisherId = 4,
                            Title = "Consequuntur adipisci aliquam."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(4869),
                            Description = "Molestiae architecto non esse minus qui qui repellendus corporis. Vero deserunt reiciendis. Officia omnis praesentium ipsa necessitatibus laborum vel repellat maxime. Numquam officiis quasi ex nisi recusandae et. Voluptatem dolores saepe quis in. Sequi aliquid ut et laudantium nam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 37.92m,
                            PrimaryGenreId = 1,
                            PublisherId = 1,
                            Title = "Est itaque eos."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(5008),
                            Description = "Voluptas consequatur dolor. Aliquam eveniet officiis fugiat qui veritatis temporibus. Et hic iusto. Fugit dicta ut quam et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 65.90m,
                            PrimaryGenreId = 7,
                            PublisherId = 3,
                            Title = "Excepturi quia dicta."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(5100),
                            Description = "Dolorum aliquid rerum odio velit sint eum in minus. Consequuntur non suscipit doloribus animi sunt sunt doloribus labore est. Facere consequuntur ut ut nemo consequatur explicabo quia. Qui saepe ut veritatis et alias cumque dolores. Minima rerum non ea iste recusandae rerum possimus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 83.55m,
                            PrimaryGenreId = 3,
                            PublisherId = 2,
                            Title = "Facilis aliquid repellendus."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(5237),
                            Description = "Laborum nemo quia veritatis reprehenderit. Ipsum maiores reprehenderit porro magnam. Fuga est quis est hic libero aspernatur mollitia expedita corporis. Esse maxime dolor animi aut et vel iusto maxime repellat.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 88.48m,
                            PrimaryGenreId = 7,
                            PublisherId = 2,
                            Title = "Ut voluptatibus tenetur."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(5319),
                            Description = "Eos veritatis quo voluptas eveniet aut et. Et nobis quos tenetur necessitatibus dolor quam perferendis neque. Est quo magnam enim non ratione ullam voluptas voluptatem. Cumque alias enim voluptatem consequuntur unde modi. At accusamus ratione. Exercitationem ullam dolore maiores.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 52.69m,
                            PrimaryGenreId = 2,
                            PublisherId = 2,
                            Title = "Placeat sint sunt."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(5439),
                            Description = "Voluptas et nostrum debitis iusto ea est sunt. Alias quas nisi tempora qui et qui hic. Aliquam rerum nesciunt et. Minus quod totam suscipit ut atque. Molestias quam in quasi porro ut. Iste quis suscipit dignissimos magni reprehenderit nobis voluptatem laboriosam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 12.79m,
                            PrimaryGenreId = 5,
                            PublisherId = 1,
                            Title = "Repellendus corrupti sit."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(5612),
                            Description = "Non unde esse temporibus ex consequatur officiis voluptas. Voluptas neque eveniet atque voluptate animi non qui dignissimos eos. Quaerat quia recusandae. Quaerat id voluptatem. Sed aut temporibus quam est consequatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 68.28m,
                            PrimaryGenreId = 5,
                            PublisherId = 3,
                            Title = "Sunt modi id."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 150, DateTimeKind.Utc).AddTicks(5742),
                            Description = "In at et ut doloribus. Similique autem asperiores corporis nobis nisi. Totam ipsam placeat iusto suscipit aut consectetur aliquam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 59.97m,
                            PrimaryGenreId = 7,
                            PublisherId = 3,
                            Title = "Consequatur est ut."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4523),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4525),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4525),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4525),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4526),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4526),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4526),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4526),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4527),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GiftCardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceReduction")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderState")
                        .HasColumnType("integer");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 157, DateTimeKind.Utc).AddTicks(5846),
                            CustomerEmail = "Angie_Johns@yahoo.com",
                            CustomerName = "Angie Johns",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 157, DateTimeKind.Utc).AddTicks(9787),
                            CustomerEmail = "Opal.Denesik51@yahoo.com",
                            CustomerName = "Opal Denesik",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(1029),
                            CustomerEmail = "Rosalie.Gulgowski54@gmail.com",
                            CustomerName = "Rosalie Gulgowski",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(1737),
                            CustomerEmail = "Jay_Ledner32@hotmail.com",
                            CustomerName = "Jay Ledner",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(2295),
                            CustomerEmail = "Patricia_Donnelly@hotmail.com",
                            CustomerName = "Patricia Donnelly",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(2825),
                            CustomerEmail = "Lindsey.Trantow@gmail.com",
                            CustomerName = "Lindsey Trantow",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(3502),
                            CustomerEmail = "Olga_West55@gmail.com",
                            CustomerName = "Olga West",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(4072),
                            CustomerEmail = "Albert_Prosacco42@yahoo.com",
                            CustomerName = "Albert Prosacco",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(4627),
                            CustomerEmail = "Delores.Crona@yahoo.com",
                            CustomerName = "Delores Crona",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(5231),
                            CustomerEmail = "Lynda.Batz@gmail.com",
                            CustomerName = "Lynda Batz",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 9,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(5819),
                            CustomerEmail = "Ross.Feeney@yahoo.com",
                            CustomerName = "Ross Feeney",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(6303),
                            CustomerEmail = "Elvira_Tillman89@yahoo.com",
                            CustomerName = "Elvira Tillman",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(6847),
                            CustomerEmail = "Rita_Runolfsson@hotmail.com",
                            CustomerName = "Rita Runolfsson",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(7371),
                            CustomerEmail = "Yolanda84@yahoo.com",
                            CustomerName = "Yolanda Harber",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 2,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 158, DateTimeKind.Utc).AddTicks(7892),
                            CustomerEmail = "Candice.Denesik@gmail.com",
                            CustomerName = "Candice Denesik",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(2336),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 66.15m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3661),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 16.76m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3880),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 99.20m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3894),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 75.26m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3904),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 25.79m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3912),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 72.38m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3920),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 45.82m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 8,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3928),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 82.22m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3935),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 34.46m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3942),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 85.61m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3951),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 75.93m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 12,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3959),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 86.91m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 13,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3966),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 93.37m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3974),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 40.70m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3982),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 87.91m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 16,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3989),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 47.98m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 17,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(3996),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 48.37m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 18,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4003),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 38.03m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 19,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4011),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 85.20m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 20,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4080),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 68.84m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 21,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4089),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 29.83m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 22,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4096),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 78.38m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 23,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4104),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 58.85m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 24,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4111),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 73.40m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 25,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4119),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 40.71m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4126),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 32.50m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 27,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4133),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 81.89m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 28,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4141),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 15.07m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4148),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 40.18m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 30,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4156),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 55.74m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 31,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4163),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 33.41m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 32,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4171),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 97.10m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 33,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4178),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 85.35m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 34,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4187),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 89.65m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4194),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 15.82m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 36,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4201),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 37.28m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 37,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4209),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 74.26m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 38,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4217),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 58.92m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 39,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4224),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 88.05m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 40,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4231),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 33.64m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 41,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4238),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 24.14m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 42,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4246),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 57.78m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 43,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4253),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 47.11m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 44,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4261),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 82.13m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 45,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4269),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 47.89m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 46,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4278),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 10.97m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 47,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4285),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 30.25m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 48,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4293),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 86.68m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 49,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4300),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 10.98m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 50,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 160, DateTimeKind.Utc).AddTicks(4308),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 48.20m,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Hic magni nemo corporis quam a velit quo. Ab fugiat sunt sit harum dolorum. Cumque iusto voluptatem repudiandae soluta. Dolores beatae qui. Et iure ea reprehenderit quis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 148, DateTimeKind.Utc).AddTicks(1005),
                            IsDeleted = false,
                            Name = "Torp Group"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Nostrum aut et facere sed suscipit est rerum. Iste dolor laborum voluptas veritatis quos alias eius minima error. Qui amet ab neque voluptas ut possimus doloremque magni. Corporis et aliquid labore labore et rem aut blanditiis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 148, DateTimeKind.Utc).AddTicks(1777),
                            IsDeleted = false,
                            Name = "Ondricka LLC"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Quasi non illum. Dolor ex culpa nobis ratione facere. Aut suscipit eum ea unde est impedit sed dolor.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 148, DateTimeKind.Utc).AddTicks(1969),
                            IsDeleted = false,
                            Name = "Kub - Christiansen"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Minus qui necessitatibus repellat ipsum aut. Molestiae quia recusandae eos fugiat. Harum quod et aut repellat quod quos ut quis est.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 148, DateTimeKind.Utc).AddTicks(2167),
                            IsDeleted = false,
                            Name = "White, Upton and Stokes"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Dolorum dolor tempora consequatur quis itaque nihil. Earum nisi sapiente voluptate explicabo enim fugit iste aut. Est sint vitae dolorum et. Velit consectetur odio atque voluptas error aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 148, DateTimeKind.Utc).AddTicks(2384),
                            IsDeleted = false,
                            Name = "Altenwerth - Streich"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 20,
                            Comment = "Laboriosam repellat labore et enim aperiam magnam repellendus omnis perferendis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 151, DateTimeKind.Utc).AddTicks(9319),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 2,
                            BookId = 6,
                            Comment = "Qui nulla iusto corrupti at quidem voluptatem laboriosam.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(489),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            BookId = 18,
                            Comment = "Iure temporibus amet consequuntur accusamus qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(568),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            BookId = 13,
                            Comment = "Velit fugiat aut excepturi perferendis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(593),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            BookId = 8,
                            Comment = "Qui corporis accusantium ipsa.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(612),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BookId = 8,
                            Comment = "Et et cupiditate porro velit cumque omnis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(755),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            BookId = 12,
                            Comment = "Et nulla ut reprehenderit velit ullam animi.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(779),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            BookId = 7,
                            Comment = "Accusantium autem ullam.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(805),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            BookId = 8,
                            Comment = "Deserunt et voluptate qui minima sint quaerat dolores quasi non.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(820),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            BookId = 5,
                            Comment = "Perspiciatis quia distinctio iusto molestiae consectetur aperiam nam et.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(849),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 11,
                            BookId = 13,
                            Comment = "Nihil dolor magnam voluptas qui nesciunt similique suscipit.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(876),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            BookId = 6,
                            Comment = "Quibusdam asperiores molestias nihil.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(900),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 13,
                            BookId = 12,
                            Comment = "Saepe minus odio.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(918),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 14,
                            BookId = 9,
                            Comment = "Sit quia alias.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(973),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 15,
                            BookId = 19,
                            Comment = "Quibusdam saepe voluptatum doloribus ea ut quod consequatur quia quae.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(988),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            BookId = 14,
                            Comment = "Illo illum autem animi aliquid quia eaque.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1021),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 7,
                            Comment = "Reprehenderit qui enim in.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1042),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 16,
                            Comment = "Aut occaecati doloribus ad voluptas est iure.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1062),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 19,
                            BookId = 3,
                            Comment = "Quam ut quasi deleniti vitae nam.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1084),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 20,
                            BookId = 8,
                            Comment = "Aut ducimus molestias aut quam.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1103),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 21,
                            BookId = 1,
                            Comment = "Nihil est sint voluptatem mollitia.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1119),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 22,
                            BookId = 13,
                            Comment = "Perspiciatis quam ratione molestiae.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1136),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 23,
                            BookId = 8,
                            Comment = "Enim numquam ut ut odit officia est.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1218),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            BookId = 12,
                            Comment = "At ducimus voluptate distinctio fuga.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1242),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 25,
                            BookId = 14,
                            Comment = "Corporis et sint eligendi rem aliquam tempore et.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1257),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 26,
                            BookId = 12,
                            Comment = "Pariatur aliquam cum eos.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1280),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            BookId = 17,
                            Comment = "Reprehenderit cumque suscipit ut eos voluptas id quas eligendi.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1296),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 28,
                            BookId = 18,
                            Comment = "Atque ea ut nemo.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1320),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 29,
                            BookId = 8,
                            Comment = "Odit voluptas iure.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1338),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 30,
                            BookId = 8,
                            Comment = "Nobis ut delectus occaecati nemo explicabo maxime.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1352),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 31,
                            BookId = 4,
                            Comment = "Commodi ullam hic error atque ut voluptates id officiis sed.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1406),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 32,
                            BookId = 18,
                            Comment = "Illum molestias quo.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1436),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 33,
                            BookId = 13,
                            Comment = "Impedit vitae ipsam esse ut autem dolorem.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1450),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 34,
                            BookId = 15,
                            Comment = "Aliquam expedita sit saepe quia dolorum nostrum est id et.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1472),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 35,
                            BookId = 2,
                            Comment = "Aliquid amet molestiae.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1496),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 36,
                            BookId = 7,
                            Comment = "Qui sunt eum voluptas dolorum dolor.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1509),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 37,
                            BookId = 13,
                            Comment = "Iure facere non ratione sapiente quae sed sint expedita et.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1526),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 38,
                            BookId = 11,
                            Comment = "Reiciendis occaecati velit voluptas ea et quibusdam odio.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1548),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 39,
                            BookId = 15,
                            Comment = "Sit nulla eum.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1598),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 40,
                            BookId = 10,
                            Comment = "Esse dolores ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1611),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 41,
                            BookId = 15,
                            Comment = "Cumque veniam beatae accusantium autem minus.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1623),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 42,
                            BookId = 5,
                            Comment = "Rerum est sed expedita quod id voluptatem aut error ipsa.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1641),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 43,
                            BookId = 1,
                            Comment = "Earum veniam est facere porro ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1665),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 44,
                            BookId = 2,
                            Comment = "Sit ut est impedit rerum dolore.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1682),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 45,
                            BookId = 12,
                            Comment = "Necessitatibus porro nulla fuga ea dolorem.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1699),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 46,
                            BookId = 1,
                            Comment = "Magni error id rerum qui provident amet esse.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1717),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 47,
                            BookId = 10,
                            Comment = "Vero voluptas sunt animi modi.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1737),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 48,
                            BookId = 20,
                            Comment = "In et architecto.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1789),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 49,
                            BookId = 2,
                            Comment = "Rem placeat debitis recusandae ad pariatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1803),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 50,
                            BookId = 11,
                            Comment = "Voluptatem in sed rerum adipisci error omnis in.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 152, DateTimeKind.Utc).AddTicks(1822),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b690f7cf-ffeb-4b70-816a-62c535911415",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2662518b-a712-4722-8f28-fcd2c0727456",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2aa63d91-2ea1-42da-b33c-9ab8821810d5",
                            Email = "Jayde.Sawayn@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Sunny Kling",
                            PhoneNumber = "540.873.0076",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b2fdd7a8-d7f6-4887-b523-9618c491ffad",
                            TwoFactorEnabled = false,
                            UserName = "Jayde.Sawayn@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "40a5ef2c-9845-4155-b20b-5d05238e1a4e",
                            Email = "Tia_Block@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Karen Mann",
                            PhoneNumber = "405.870.2667 x9967",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "704b9a69-ad9b-4ea7-a2fc-104dcb85b3ad",
                            TwoFactorEnabled = false,
                            UserName = "Tia_Block@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5af37d28-07f7-4e80-bd1f-f0f4a901b919",
                            Email = "Zackery42@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Eloisa Moen",
                            PhoneNumber = "622.849.2908 x600",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ab478d2a-9e3f-4869-b3d1-67f6d5bbd8f4",
                            TwoFactorEnabled = false,
                            UserName = "Zackery42@yahoo.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b6cdaa7d-80a0-47cf-bc7a-2901f0d9b610",
                            Email = "Willow81@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Javonte Bosco",
                            PhoneNumber = "1-317-621-3114 x440",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11083f85-00ca-4b67-a86d-bea43486298e",
                            TwoFactorEnabled = false,
                            UserName = "Willow81@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ce8f592b-ef95-41bd-a20b-938f8f34f496",
                            Email = "Frieda_Brown@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Brennan Barrows",
                            PhoneNumber = "626.264.3291 x77043",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "45df4625-dcd3-4a68-b4c5-716f67697a6a",
                            TwoFactorEnabled = false,
                            UserName = "Frieda_Brown@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3ee1927-d176-496a-a1f6-545892e1a521",
                            Email = "Arno_Runolfsdottir@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Ernestine Hills",
                            PhoneNumber = "1-384-573-6489",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "16a3b0bf-fc1c-4a2d-b384-3299733814e6",
                            TwoFactorEnabled = false,
                            UserName = "Arno_Runolfsdottir@yahoo.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d520960f-527f-4d55-805c-5150d1ef772a",
                            Email = "Llewellyn.McLaughlin58@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Lavinia Watsica",
                            PhoneNumber = "1-728-434-5357 x35969",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e87a95e4-006d-408c-86fc-0d2f4aa3e450",
                            TwoFactorEnabled = false,
                            UserName = "Llewellyn.McLaughlin58@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "078c8461-96fd-45b0-8bd8-6c5ff28f7e9e",
                            Email = "Caterina_Robel7@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Jensen Heller",
                            PhoneNumber = "1-764-322-6580",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "090128a5-1e90-4076-9560-18765d30b78a",
                            TwoFactorEnabled = false,
                            UserName = "Caterina_Robel7@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "60d95153-92d3-4714-ab38-1043cb43fd09",
                            Email = "Cyril.Upton64@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Nat Doyle",
                            PhoneNumber = "699.866.9472 x934",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ab34e8de-0c7a-41d1-ba0c-bf2587db0ad0",
                            TwoFactorEnabled = false,
                            UserName = "Cyril.Upton64@hotmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8035),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 2,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8219),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8226),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8230),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8234),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8238),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8242),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8246),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8250),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8254),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 11,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8262),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8266),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8270),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 14,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8274),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8278),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8281),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8285),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8289),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 19,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8293),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 20,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8297),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 21,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8301),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 22,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8305),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 23,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8309),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 24,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8313),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 25,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8316),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 26,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8320),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 27,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8324),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 28,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8439),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 29,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8443),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 30,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 16, 41, 153, DateTimeKind.Utc).AddTicks(8447),
                            IsDeleted = false,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("Coupons")
                        .HasForeignKey("CartId");

                    b.HasOne("DataAccessLayer.Model.GiftCard", "GiftCard")
                        .WithMany("Coupons")
                        .HasForeignKey("GiftCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("Cart");

                    b.Navigation("GiftCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
