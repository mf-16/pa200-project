// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    [Migration("20241211084004_AddImagePaths")]
    partial class AddImagePaths
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "West Merlin",
                            Country = "Nauru",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(7085),
                            IsDeleted = false,
                            State = "Kentucky",
                            Street = "7245 Johns Haven",
                            ZipCode = "28768"
                        },
                        new
                        {
                            Id = 2,
                            City = "Mitchellhaven",
                            Country = "Saint Lucia",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(7697),
                            IsDeleted = false,
                            State = "Missouri",
                            Street = "598 Blanda Rest",
                            ZipCode = "81603-5344"
                        },
                        new
                        {
                            Id = 3,
                            City = "Creminberg",
                            Country = "Paraguay",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(7857),
                            IsDeleted = false,
                            State = "Texas",
                            Street = "25513 Doyle Estate",
                            ZipCode = "00903-2666"
                        },
                        new
                        {
                            Id = 4,
                            City = "Kosstown",
                            Country = "Japan",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(7995),
                            IsDeleted = false,
                            State = "Minnesota",
                            Street = "652 Geo Creek",
                            ZipCode = "97253-1240"
                        },
                        new
                        {
                            Id = 5,
                            City = "Lake Clark",
                            Country = "Cayman Islands",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(8115),
                            IsDeleted = false,
                            State = "Iowa",
                            Street = "928 Koch Garden",
                            ZipCode = "36518"
                        },
                        new
                        {
                            Id = 6,
                            City = "West Eileen",
                            Country = "Denmark",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(8233),
                            IsDeleted = false,
                            State = "Alabama",
                            Street = "33150 Betty Ridges",
                            ZipCode = "40597"
                        },
                        new
                        {
                            Id = 7,
                            City = "Presleymouth",
                            Country = "Peru",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(8347),
                            IsDeleted = false,
                            State = "Illinois",
                            Street = "45189 Turner Causeway",
                            ZipCode = "48673"
                        },
                        new
                        {
                            Id = 8,
                            City = "Priscillafurt",
                            Country = "Belize",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(8497),
                            IsDeleted = false,
                            State = "Minnesota",
                            Street = "25322 Schiller Land",
                            ZipCode = "68316"
                        },
                        new
                        {
                            Id = 9,
                            City = "West Michel",
                            Country = "India",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(8601),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "9602 Camilla Gardens",
                            ZipCode = "84706"
                        },
                        new
                        {
                            Id = 10,
                            City = "West Chandlermouth",
                            Country = "Kyrgyz Republic",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(8753),
                            IsDeleted = false,
                            State = "Washington",
                            Street = "576 Little Valleys",
                            ZipCode = "84583"
                        },
                        new
                        {
                            Id = 11,
                            City = "West Amiyamouth",
                            Country = "Tunisia",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(8889),
                            IsDeleted = false,
                            State = "Maryland",
                            Street = "623 Victor Alley",
                            ZipCode = "62882-0622"
                        },
                        new
                        {
                            Id = 12,
                            City = "South Maynard",
                            Country = "Malaysia",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(9016),
                            IsDeleted = false,
                            State = "West Virginia",
                            Street = "66253 Cronin Roads",
                            ZipCode = "50634-2684"
                        },
                        new
                        {
                            Id = 13,
                            City = "Mayertstad",
                            Country = "Vietnam",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(9133),
                            IsDeleted = false,
                            State = "Louisiana",
                            Street = "793 Vandervort Spur",
                            ZipCode = "21333"
                        },
                        new
                        {
                            Id = 14,
                            City = "Carletonview",
                            Country = "France",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(9253),
                            IsDeleted = false,
                            State = "Virginia",
                            Street = "9646 Glen Lights",
                            ZipCode = "52310"
                        },
                        new
                        {
                            Id = 15,
                            City = "Brakusview",
                            Country = "Svalbard & Jan Mayen Islands",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 916, DateTimeKind.Utc).AddTicks(9370),
                            IsDeleted = false,
                            State = "Illinois",
                            Street = "4275 Vivienne Mill",
                            ZipCode = "39595-1332"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Temporibus error ad ut omnis rem. Temporibus qui magnam et non modi asperiores praesentium sed. Ducimus ullam officia quo molestias. Et dicta molestiae quia quis sit cum. Illo et dolores sequi sapiente consequatur.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(5788),
                            IsDeleted = false,
                            Name = "Jules Stamm"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Expedita quia occaecati accusantium sed tempore nostrum quo. Neque laudantium fuga ut quae. Et nisi et qui tenetur. Debitis tempora placeat quaerat magnam. Doloribus eos aut quibusdam error fugit vero iste aut sint.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(6230),
                            IsDeleted = false,
                            Name = "Troy Conn"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Odit omnis minima vero ut. Nihil voluptates illo omnis eos perspiciatis ut ut quam praesentium. Sequi qui cumque. Explicabo sunt excepturi aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(6396),
                            IsDeleted = false,
                            Name = "Noble Effertz"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Laboriosam tempore consequatur harum voluptatem est eveniet vel. Aspernatur excepturi ut quo mollitia animi adipisci. Totam reprehenderit ex temporibus inventore deleniti. Culpa inventore eum ut. Exercitationem modi doloremque facilis et quia repellendus eum impedit nostrum.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(6473),
                            IsDeleted = false,
                            Name = "Jessyca Stehr"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Quibusdam consequatur ut praesentium quia. Laudantium omnis itaque aperiam ipsa. Ea eius aut nihil laboriosam in labore saepe non voluptas. Minus et modi quia est odit rerum quod. Ut qui dignissimos rerum qui vitae.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(6619),
                            IsDeleted = false,
                            Name = "Kris Stamm"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Harum dignissimos ut sint alias asperiores ab tempore illo. Odio natus magnam sed velit commodi labore dolorem aut vitae. Minima necessitatibus est hic est sed. Quis dolores id rerum sint dolores velit. In et commodi assumenda similique dolores ipsam.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(6722),
                            IsDeleted = false,
                            Name = "Hardy Douglas"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Eveniet ea ut exercitationem at fugiat vitae suscipit. Sint explicabo enim. Quia voluptatibus praesentium consequatur et. Cupiditate et nostrum deleniti unde quod. Quis eaque aut reiciendis.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(6860),
                            IsDeleted = false,
                            Name = "Maeve Beatty"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Eligendi reiciendis dicta est ad rerum eos earum maxime. Odit maxime non pariatur amet. Quaerat dolores nihil et. Magnam corrupti eos. Laudantium cumque officia aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(6964),
                            IsDeleted = false,
                            Name = "Daija Smith"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Quis necessitatibus laboriosam id quasi. Nemo sed tempora architecto omnis aut delectus qui dolorem. Amet dolorum natus tempora sed. Delectus sint veritatis culpa molestiae non non quam inventore. Sit velit ut recusandae enim enim voluptatem sed.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(7040),
                            IsDeleted = false,
                            Name = "Freda Douglas"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Ducimus et quis non et autem omnis consequatur. Aut ab quam. Assumenda facilis qui voluptates. Dolor nobis consequatur impedit rerum quos.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 907, DateTimeKind.Utc).AddTicks(7186),
                            IsDeleted = false,
                            Name = "Kaley Greenfelder"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(1662),
                            Description = "Voluptatem quod qui. Nulla voluptates sint deleniti. Possimus rerum repellat. Laborum et mollitia cumque necessitatibus. Sint rerum numquam quia.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 19.81m,
                            PrimaryGenreId = 2,
                            PublisherId = 1,
                            Title = "Temporibus quibusdam aliquid."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(3144),
                            Description = "In id similique molestias. Cumque quibusdam dolorum velit ipsa et ab dolores ipsum omnis. Alias vitae a ducimus. Laboriosam ea necessitatibus aliquam commodi. Quibusdam quibusdam dolorem beatae.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 25.23m,
                            PrimaryGenreId = 1,
                            PublisherId = 1,
                            Title = "Blanditiis aliquid itaque."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(3310),
                            Description = "Hic et in. Minus consequatur id harum qui velit est accusantium illo. Nihil error doloribus repellat totam beatae asperiores et voluptates id. Veritatis sit molestias deserunt nam eveniet qui.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 86.20m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Fuga est qui."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(3524),
                            Description = "Facilis vero ipsum molestiae qui omnis et vel. Nulla voluptas sequi nemo non id. Sed commodi quaerat non pariatur nemo architecto commodi provident delectus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 61.41m,
                            PrimaryGenreId = 2,
                            PublisherId = 1,
                            Title = "Aut voluptatum corporis."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(3663),
                            Description = "Accusantium eveniet ut aliquam consequuntur natus quo hic. Dolorum pariatur nostrum quis perferendis in qui dicta quaerat. Consequatur qui aspernatur voluptatibus. Velit tempora rerum quis ex. Nihil natus et accusamus maiores. Itaque sed quam explicabo magnam inventore praesentium tenetur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 59.36m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Iusto dolor dignissimos."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(3801),
                            Description = "Dolor delectus assumenda accusamus ex ipsum. Unde fuga recusandae ipsa facilis dolor velit. Asperiores nemo nobis iure ducimus explicabo maxime modi dolor mollitia. Consequatur ex sit fugit. Rem labore iste consequatur corporis vel provident. Fugiat rerum temporibus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 81.69m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Unde perferendis vero."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(3941),
                            Description = "Autem excepturi est nam iste aut sed est inventore non. Vel sit quo maiores. Consequatur non maxime nihil odio praesentium vel repellat dicta rerum. Et est facilis suscipit eum amet non consequuntur. Enim eum et dolorem quaerat voluptas sapiente officiis et. Dolores qui amet ipsa consequuntur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 31.67m,
                            PrimaryGenreId = 3,
                            PublisherId = 3,
                            Title = "Et est ut."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4101),
                            Description = "Enim omnis eos. Consectetur harum atque sequi quas voluptas enim. Natus earum doloremque aliquam sequi nihil eum quia qui voluptatem. Aspernatur fugit optio cum qui ea. Rerum perferendis nobis. Non recusandae suscipit mollitia mollitia.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 61.27m,
                            PrimaryGenreId = 6,
                            PublisherId = 1,
                            Title = "Ipsa voluptas iusto."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4235),
                            Description = "Provident totam commodi officia nobis eos aut neque id itaque. Nostrum voluptatem quia illo ex eos amet fugit. Non quisquam inventore labore. Molestiae sunt qui aut. Voluptatum dolores et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 45.09m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Eveniet architecto sed."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4387),
                            Description = "Officia velit aspernatur et aut aut quia porro. Autem adipisci voluptates aut reiciendis in sit earum. Sit blanditiis eius eius atque. Totam cumque id ipsum consequatur eos et velit. Aliquid explicabo ipsum dignissimos delectus qui. Pariatur quis sunt nihil provident ratione.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 98.43m,
                            PrimaryGenreId = 3,
                            PublisherId = 1,
                            Title = "Repellendus ut porro."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4501),
                            Description = "Odit sit assumenda incidunt temporibus est quod. Eligendi fuga reprehenderit vero molestiae eos aspernatur ratione non. Sed reprehenderit perspiciatis qui. Blanditiis est at qui totam repellendus et labore et aliquam. Sit porro velit quasi dolorum odio sapiente.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 26.06m,
                            PrimaryGenreId = 2,
                            PublisherId = 5,
                            Title = "Dolorem sed error."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4624),
                            Description = "Placeat molestiae vel dicta nobis in distinctio quaerat exercitationem. Sit qui voluptate minima qui reprehenderit et impedit sapiente quae. Temporibus dolorem sed.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 85.05m,
                            PrimaryGenreId = 1,
                            PublisherId = 4,
                            Title = "Et voluptate itaque."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4711),
                            Description = "Non quae et ducimus quaerat. Qui veniam voluptate aliquid in reprehenderit aut dignissimos ut laborum. Aperiam incidunt autem tempore autem similique ducimus porro ullam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 84.17m,
                            PrimaryGenreId = 4,
                            PublisherId = 4,
                            Title = "Qui quisquam illum."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4782),
                            Description = "Est aut iure et nostrum odio. Nostrum quas quasi unde placeat non. Eum perferendis quia eum est esse. Quod voluptatem consequuntur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 45.29m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Quaerat quia deserunt."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(4888),
                            Description = "Aut similique blanditiis est beatae repudiandae fugiat inventore error. Illo soluta voluptas nesciunt. Saepe et corrupti. Animi non molestias sed provident itaque. Officiis a omnis eius neque expedita molestiae similique non. Cumque molestiae odio ipsum illo aut sint hic.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 57.58m,
                            PrimaryGenreId = 5,
                            PublisherId = 5,
                            Title = "Reiciendis necessitatibus quae."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(5010),
                            Description = "Consequatur quis est quas aspernatur sequi qui minus consectetur voluptas. Est ad id dolorem. Qui praesentium numquam laboriosam ut qui nam enim. Rerum quia vel at in. Vitae qui mollitia et quia ipsam assumenda architecto.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 82.13m,
                            PrimaryGenreId = 1,
                            PublisherId = 4,
                            Title = "Ut accusamus necessitatibus."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(5100),
                            Description = "Deserunt unde dolores suscipit aut cumque quo aut. Est sit exercitationem voluptas repellat est. Ut aut consequatur quis fugiat vel sequi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 56.84m,
                            PrimaryGenreId = 5,
                            PublisherId = 1,
                            Title = "Quis temporibus aut."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(5254),
                            Description = "Similique et vitae reiciendis deserunt dolor aut fugit eum maxime. Recusandae occaecati doloremque. Voluptatibus fugit non. Neque cupiditate explicabo nesciunt similique optio consequatur ut qui.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 51.05m,
                            PrimaryGenreId = 5,
                            PublisherId = 2,
                            Title = "Perspiciatis qui nobis."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(5325),
                            Description = "Fuga et est. Praesentium non deserunt. Ducimus voluptas veniam maxime. Et deserunt esse ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 16.88m,
                            PrimaryGenreId = 5,
                            PublisherId = 3,
                            Title = "Placeat deleniti quis."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 912, DateTimeKind.Utc).AddTicks(5412),
                            Description = "Eos tenetur corrupti inventore sit et. Tenetur sed doloremque qui accusantium. Iure ut iste accusamus minima suscipit magnam sunt minima pariatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 83.95m,
                            PrimaryGenreId = 5,
                            PublisherId = 2,
                            Title = "Aperiam asperiores nisi."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Neque nisi animi."
                        },
                        new
                        {
                            Id = 2,
                            Name = "Quod veritatis blanditiis."
                        },
                        new
                        {
                            Id = 3,
                            Name = "Laudantium suscipit et."
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cumque tempora ad."
                        },
                        new
                        {
                            Id = 5,
                            Name = "In facilis esse."
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ut corporis non."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3310),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3312),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3312),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3312),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3312),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3313),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3313),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3313),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(3313),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(2157),
                            CustomerEmail = "Crystal62@yahoo.com",
                            CustomerName = "Crystal Powlowski",
                            IsDeleted = false,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(5222),
                            CustomerEmail = "Lynette.Considine29@gmail.com",
                            CustomerName = "Lynette Considine",
                            IsDeleted = false,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(6456),
                            CustomerEmail = "Guadalupe.Kassulke@gmail.com",
                            CustomerName = "Guadalupe Kassulke",
                            IsDeleted = false,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(6995),
                            CustomerEmail = "Emily.Koepp24@hotmail.com",
                            CustomerName = "Emily Koepp",
                            IsDeleted = false,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(7476),
                            CustomerEmail = "Bryant80@yahoo.com",
                            CustomerName = "Bryant Bernier",
                            IsDeleted = false,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(8119),
                            CustomerEmail = "Rachel_Cole4@gmail.com",
                            CustomerName = "Rachel Cole",
                            IsDeleted = false,
                            ShippingAddressId = 4,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(8605),
                            CustomerEmail = "Ellen.Sporer@yahoo.com",
                            CustomerName = "Ellen Sporer",
                            IsDeleted = false,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(9148),
                            CustomerEmail = "Alton5@gmail.com",
                            CustomerName = "Alton Nienow",
                            IsDeleted = false,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 918, DateTimeKind.Utc).AddTicks(9691),
                            CustomerEmail = "Joanna_MacGyver0@yahoo.com",
                            CustomerName = "Joanna MacGyver",
                            IsDeleted = false,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 919, DateTimeKind.Utc).AddTicks(304),
                            CustomerEmail = "Pearl60@yahoo.com",
                            CustomerName = "Pearl Shanahan",
                            IsDeleted = false,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 919, DateTimeKind.Utc).AddTicks(795),
                            CustomerEmail = "Marilyn_Nitzsche59@yahoo.com",
                            CustomerName = "Marilyn Nitzsche",
                            IsDeleted = false,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 919, DateTimeKind.Utc).AddTicks(1353),
                            CustomerEmail = "Jennie63@hotmail.com",
                            CustomerName = "Jennie Hammes",
                            IsDeleted = false,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 919, DateTimeKind.Utc).AddTicks(1829),
                            CustomerEmail = "Doreen.Goodwin@yahoo.com",
                            CustomerName = "Doreen Goodwin",
                            IsDeleted = false,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 919, DateTimeKind.Utc).AddTicks(2679),
                            CustomerEmail = "Jeannie.Renner@yahoo.com",
                            CustomerName = "Jeannie Renner",
                            IsDeleted = false,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 919, DateTimeKind.Utc).AddTicks(3237),
                            CustomerEmail = "Kirk_Parker@hotmail.com",
                            CustomerName = "Kirk Parker",
                            IsDeleted = false,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(1132),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 27.74m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2532),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 26.26m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2587),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 12.83m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2597),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 80.20m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2605),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 76.78m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2612),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 38.21m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 7,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2619),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 79.04m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2626),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 33.13m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2632),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 58.82m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2638),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 76.05m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2645),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 43.27m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 12,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2651),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 98.59m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2659),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 31.34m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2665),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 41.07m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 15,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2671),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 26.39m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 16,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2678),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 88.43m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2684),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 33.53m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2691),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 36.82m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2697),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 20.44m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 20,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2704),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 65.10m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 21,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2766),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 94.64m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 22,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2773),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 71.86m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 23,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2780),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 31.74m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 24,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2787),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 61.77m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 25,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2793),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 48.82m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2800),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 82.45m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 27,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2806),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 30.24m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 28,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2813),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 41.37m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 29,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2819),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 87.29m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 30,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2826),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 31.73m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 31,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2833),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 93.73m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2839),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 48.96m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 33,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2845),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 24.76m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 34,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2852),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 20.76m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 35,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2859),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 42.29m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 36,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2865),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 80.11m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 37,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2871),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 70.25m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 38,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2877),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 10.12m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 39,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2883),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 40.21m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 40,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2889),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 57.44m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 41,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2896),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 64.87m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 42,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2903),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 85.37m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 43,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2909),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 72.95m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 44,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2915),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 47.17m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 45,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2922),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 31.04m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 46,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2928),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 37.18m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2934),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 99.62m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 48,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2941),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 92.65m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 49,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2947),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 68.75m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 50,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 921, DateTimeKind.Utc).AddTicks(2954),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 97.17m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Voluptas aut consequatur velit alias et vel. Enim repellendus itaque incidunt sunt totam suscipit cum harum. Iure unde quis odit officiis. Molestiae et ipsum iusto facere labore quasi officiis ut voluptates. Error officia sequi.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 909, DateTimeKind.Utc).AddTicks(1986),
                            IsDeleted = false,
                            Name = "Schneider - Greenfelder"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Dolorem nobis vero ipsam. Omnis dolorem quia consequuntur vero. Facilis laudantium occaecati officia ipsa corrupti aut est tenetur esse.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 909, DateTimeKind.Utc).AddTicks(2675),
                            IsDeleted = false,
                            Name = "Feeney - Bashirian"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Et cumque quam. Reiciendis sapiente molestiae nostrum sequi quas ipsa et iure. Natus nulla qui.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 909, DateTimeKind.Utc).AddTicks(2823),
                            IsDeleted = false,
                            Name = "O'Kon LLC"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Sed sed ut eos. Voluptas qui omnis. Porro quia dicta accusantium. Dolorum dolorem tempora deserunt veniam. Sit vel voluptates eaque perferendis et voluptatem. Fuga nemo fugit magni accusantium.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 909, DateTimeKind.Utc).AddTicks(3033),
                            IsDeleted = false,
                            Name = "Durgan, Ferry and Cummerata"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Optio a sequi. Dolorem iusto dignissimos. Qui similique est minus aperiam totam minima. Provident ut quam. Quidem cum non incidunt.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 909, DateTimeKind.Utc).AddTicks(3366),
                            IsDeleted = false,
                            Name = "Grimes Inc"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 15,
                            Comment = "Dicta illo vitae suscipit quasi quia tempora unde dolorum.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 913, DateTimeKind.Utc).AddTicks(9360),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 2,
                            BookId = 14,
                            Comment = "Et aspernatur autem est explicabo aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(322),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 3,
                            BookId = 4,
                            Comment = "Est inventore dolore ut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(390),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 4,
                            BookId = 6,
                            Comment = "Qui repellendus praesentium eos.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(413),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            BookId = 20,
                            Comment = "Ut velit recusandae voluptatem sunt sed omnis aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(483),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            Comment = "Vel in quia rerum maxime consequatur itaque eius autem.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(514),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            BookId = 18,
                            Comment = "Veniam modi voluptas quos aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(544),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            BookId = 11,
                            Comment = "Sint nostrum voluptatem vero rerum culpa.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(564),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            BookId = 20,
                            Comment = "Aut voluptatem repellendus hic.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(586),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            BookId = 17,
                            Comment = "Quia veniam aliquid.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(600),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            BookId = 18,
                            Comment = "Eaque harum voluptates fugiat consequatur consequuntur.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(613),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            BookId = 19,
                            Comment = "Natus totam in omnis.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(634),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 13,
                            BookId = 3,
                            Comment = "Debitis quia veritatis nihil sapiente voluptas ut velit.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(650),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 14,
                            BookId = 9,
                            Comment = "Reiciendis nam dolore totam commodi amet.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(710),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            BookId = 16,
                            Comment = "Qui sint nesciunt quasi ut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(730),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 16,
                            BookId = 9,
                            Comment = "Id ratione laborum ut est at.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(748),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 5,
                            Comment = "Laboriosam amet ab quia dolores minima.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(769),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 18,
                            BookId = 3,
                            Comment = "Eveniet dolores sit ipsum.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(789),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 18,
                            Comment = "Libero facere iste nemo neque rerum maxime.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(806),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 20,
                            BookId = 17,
                            Comment = "Temporibus culpa eaque doloremque alias corporis.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(828),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 21,
                            BookId = 15,
                            Comment = "Perspiciatis sapiente provident blanditiis ipsa beatae nisi ea placeat doloribus.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(849),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 22,
                            BookId = 4,
                            Comment = "Voluptas rerum consequatur est debitis.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(921),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 23,
                            BookId = 9,
                            Comment = "Unde sint unde numquam occaecati.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(937),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 24,
                            BookId = 7,
                            Comment = "Harum totam repudiandae reiciendis voluptas cupiditate quia iure sapiente voluptas.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(953),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 25,
                            BookId = 3,
                            Comment = "Voluptate porro perferendis magni et vel enim aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(979),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 26,
                            BookId = 18,
                            Comment = "Sit eos perferendis earum qui pariatur est et qui ut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1008),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            BookId = 2,
                            Comment = "Ab et rem molestias qui itaque iste.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1038),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 28,
                            BookId = 15,
                            Comment = "Esse laborum et voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1058),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 29,
                            BookId = 3,
                            Comment = "Quaerat in molestias dolore rerum inventore et vitae consequatur.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1073),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 30,
                            BookId = 15,
                            Comment = "Sint laboriosam molestiae esse doloremque dignissimos doloremque.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1129),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 31,
                            BookId = 3,
                            Comment = "Dolorum corrupti ipsa sunt beatae.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1150),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 32,
                            BookId = 12,
                            Comment = "Autem nesciunt quod ipsam illo sit autem et occaecati.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1168),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 33,
                            BookId = 13,
                            Comment = "Quisquam dignissimos eos esse repudiandae.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1194),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 34,
                            BookId = 12,
                            Comment = "Aut tenetur quis et quia eaque repellendus ut.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1209),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 35,
                            BookId = 20,
                            Comment = "Totam aut doloribus sunt culpa veniam ipsam ducimus.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1231),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 36,
                            BookId = 14,
                            Comment = "Earum nobis dolor nobis non voluptatem voluptatem nihil sequi.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1250),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 37,
                            BookId = 18,
                            Comment = "Hic aut ex sed aut eaque amet quaerat voluptatum.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1302),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 38,
                            BookId = 12,
                            Comment = "Qui est ut molestiae impedit.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1326),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 39,
                            BookId = 11,
                            Comment = "Dolorum iure non.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1340),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 40,
                            BookId = 14,
                            Comment = "Quaerat enim est in ut sapiente sapiente et.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1352),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 41,
                            BookId = 12,
                            Comment = "Suscipit rem culpa cupiditate qui maiores doloribus quibusdam ab dolorem.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1373),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 42,
                            BookId = 12,
                            Comment = "Velit quia quis quod cupiditate a.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1399),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 43,
                            BookId = 14,
                            Comment = "Nihil debitis ut accusantium nihil sit distinctio.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1418),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 44,
                            BookId = 18,
                            Comment = "Suscipit corrupti at est itaque.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1440),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 45,
                            BookId = 5,
                            Comment = "Tenetur eveniet pariatur itaque libero hic omnis.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1470),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 46,
                            BookId = 18,
                            Comment = "Voluptatem eos ut omnis odit.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1488),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 47,
                            BookId = 8,
                            Comment = "Natus doloremque voluptatum autem.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1505),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 48,
                            BookId = 14,
                            Comment = "Nostrum error dolore sapiente occaecati est dignissimos.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1518),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 49,
                            BookId = 12,
                            Comment = "Exercitationem quidem in vel optio quaerat repudiandae sunt molestiae doloremque.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1536),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 50,
                            BookId = 8,
                            Comment = "Quasi sed qui molestias optio.",
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 914, DateTimeKind.Utc).AddTicks(1562),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c030ceea-9f17-4209-9510-99bf4a3fdf38",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c8154148-5168-4485-a280-ab2b7cf8dad7",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6f77b168-eedb-4619-a1f7-81112fe7a22b",
                            Email = "Carmela34@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Sadye Durgan",
                            PhoneNumber = "618-896-2994",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "285739b3-7667-4b79-98ae-661e431e87e8",
                            TwoFactorEnabled = false,
                            UserName = "Carmela34@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f9ac9ec9-1d8b-4b1b-852e-9a3efd74cb58",
                            Email = "Donald_Fritsch16@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Jessie Kovacek",
                            PhoneNumber = "(414) 413-5297",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b495e0a3-15c2-4968-9c11-303676acf18d",
                            TwoFactorEnabled = false,
                            UserName = "Donald_Fritsch16@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a1b49833-be02-4de0-9f4c-ea0af38c4765",
                            Email = "Mortimer36@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Hector Schoen",
                            PhoneNumber = "1-930-464-7629 x6713",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4eeafa8d-fccc-40b1-9f49-c021dc1db8de",
                            TwoFactorEnabled = false,
                            UserName = "Mortimer36@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "67d2791f-855b-4bae-a411-5fec031b9be4",
                            Email = "Mireya1@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Matilda Larson",
                            PhoneNumber = "(317) 992-0106 x7440",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b07e5b1c-7e34-4e08-ba6f-a84d785480d8",
                            TwoFactorEnabled = false,
                            UserName = "Mireya1@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e2f1991d-5a43-4afb-b26d-b95e75743dfa",
                            Email = "Sanford66@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Nyah O'Hara",
                            PhoneNumber = "388.786.7228 x949",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fd10c8be-2533-43e4-b384-fef3e3a0296a",
                            TwoFactorEnabled = false,
                            UserName = "Sanford66@hotmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8bab4f15-678a-480f-ab06-44c8c12f9402",
                            Email = "Kaya.Leannon@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Abagail DuBuque",
                            PhoneNumber = "(921) 383-0565",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d750ff0b-6950-4b31-9cc6-acb0e0c21bbc",
                            TwoFactorEnabled = false,
                            UserName = "Kaya.Leannon@yahoo.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "687ad8d8-a6ca-4ff1-adc9-740c9d50f69d",
                            Email = "Ethan.Luettgen@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Timmy Romaguera",
                            PhoneNumber = "503.607.4606 x19855",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "acfd016d-7714-45c9-8557-f5f82bb1aca3",
                            TwoFactorEnabled = false,
                            UserName = "Ethan.Luettgen@yahoo.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ba0514d1-f8a5-4d16-8640-d13c79b069ab",
                            Email = "Sedrick.Kiehn@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Brent Funk",
                            PhoneNumber = "(318) 923-5614 x43648",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f25e94b2-075c-4ec4-b550-806c2957b0cc",
                            TwoFactorEnabled = false,
                            UserName = "Sedrick.Kiehn@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3ba2eaea-3ae6-4d9e-b8b5-5ae72366a31f",
                            Email = "Elaina.Gerhold@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Danyka Raynor",
                            PhoneNumber = "1-798-501-6880 x29406",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5ad02aad-8c05-4a0c-805c-924e00f4f486",
                            TwoFactorEnabled = false,
                            UserName = "Elaina.Gerhold@hotmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5172),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 2,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5322),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 3,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5327),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5330),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 5,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5332),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 6,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5335),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5338),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5341),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 9,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5344),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5347),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 11,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5349),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5352),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 13,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5355),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 14,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5358),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5360),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5363),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5366),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 18,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5369),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 19,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5372),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 20,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5374),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 21,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5377),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 22,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5380),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 23,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5382),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 24,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5385),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 25,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5388),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 26,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5391),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 27,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5393),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 28,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5396),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5399),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 30,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 8, 40, 3, 915, DateTimeKind.Utc).AddTicks(5401),
                            IsDeleted = false,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
