// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    [Migration("20241231160553_AddCouponsToOrder")]
    partial class AddCouponsToOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "East Rey",
                            Country = "Taiwan",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 808, DateTimeKind.Utc).AddTicks(8919),
                            IsDeleted = false,
                            State = "North Carolina",
                            Street = "4539 Angela Branch",
                            ZipCode = "34549"
                        },
                        new
                        {
                            Id = 2,
                            City = "Swiftborough",
                            Country = "Equatorial Guinea",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 808, DateTimeKind.Utc).AddTicks(9544),
                            IsDeleted = false,
                            State = "Maine",
                            Street = "90835 Zoey Expressway",
                            ZipCode = "05210"
                        },
                        new
                        {
                            Id = 3,
                            City = "East Mandyborough",
                            Country = "Aruba",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 808, DateTimeKind.Utc).AddTicks(9706),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "4801 Schoen Meadow",
                            ZipCode = "34236-1217"
                        },
                        new
                        {
                            Id = 4,
                            City = "Konopelskiton",
                            Country = "Fiji",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 808, DateTimeKind.Utc).AddTicks(9867),
                            IsDeleted = false,
                            State = "Indiana",
                            Street = "16944 Johnson Locks",
                            ZipCode = "35192"
                        },
                        new
                        {
                            Id = 5,
                            City = "Sabrynahaven",
                            Country = "Tokelau",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(3),
                            IsDeleted = false,
                            State = "Kentucky",
                            Street = "8639 Torp Centers",
                            ZipCode = "64516"
                        },
                        new
                        {
                            Id = 6,
                            City = "East Javier",
                            Country = "Christmas Island",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(137),
                            IsDeleted = false,
                            State = "South Dakota",
                            Street = "09329 Lora Village",
                            ZipCode = "76038-9652"
                        },
                        new
                        {
                            Id = 7,
                            City = "West Haven",
                            Country = "Central African Republic",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(260),
                            IsDeleted = false,
                            State = "New Mexico",
                            Street = "157 Herman Ports",
                            ZipCode = "30621"
                        },
                        new
                        {
                            Id = 8,
                            City = "Keeblershire",
                            Country = "Solomon Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(435),
                            IsDeleted = false,
                            State = "Oklahoma",
                            Street = "14015 Hosea Brooks",
                            ZipCode = "42175-8359"
                        },
                        new
                        {
                            Id = 9,
                            City = "West Ludwigville",
                            Country = "Faroe Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(575),
                            IsDeleted = false,
                            State = "South Carolina",
                            Street = "9690 Floy Station",
                            ZipCode = "91850"
                        },
                        new
                        {
                            Id = 10,
                            City = "West Layla",
                            Country = "Haiti",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(713),
                            IsDeleted = false,
                            State = "Arizona",
                            Street = "6062 Wayne Groves",
                            ZipCode = "57610"
                        },
                        new
                        {
                            Id = 11,
                            City = "Astridtown",
                            Country = "Cayman Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(848),
                            IsDeleted = false,
                            State = "Mississippi",
                            Street = "554 Waters Fields",
                            ZipCode = "02980"
                        },
                        new
                        {
                            Id = 12,
                            City = "Coyport",
                            Country = "Iceland",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(975),
                            IsDeleted = false,
                            State = "Montana",
                            Street = "4225 Gina Cliffs",
                            ZipCode = "45189"
                        },
                        new
                        {
                            Id = 13,
                            City = "Quintonview",
                            Country = "Jordan",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(1098),
                            IsDeleted = false,
                            State = "Arizona",
                            Street = "5029 Hansen Groves",
                            ZipCode = "58277"
                        },
                        new
                        {
                            Id = 14,
                            City = "Lake Shanna",
                            Country = "Senegal",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(1252),
                            IsDeleted = false,
                            State = "Texas",
                            Street = "84534 Torphy Grove",
                            ZipCode = "38611-2534"
                        },
                        new
                        {
                            Id = 15,
                            City = "Doylebury",
                            Country = "Cook Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 809, DateTimeKind.Utc).AddTicks(1370),
                            IsDeleted = false,
                            State = "Tennessee",
                            Street = "991 Nils Squares",
                            ZipCode = "07728"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Iste dicta ipsum odit eaque voluptatum et. Dolorem ad est odio ipsum sint odit sed est. Et quidem eos minima perspiciatis placeat dignissimos deserunt doloremque. Et doloremque culpa quia ut eum. Illo rerum libero et et voluptas animi qui. Aliquid est adipisci maxime similique.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(1742),
                            IsDeleted = false,
                            Name = "Tremaine Zboncak"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Pariatur quidem modi sapiente et vel hic et. Voluptatibus repellat recusandae magnam. Est et est enim tempora illo est molestias sed quo.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(2208),
                            IsDeleted = false,
                            Name = "Brian Schaden"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Voluptatem ea ea neque. Quia rem quia cum. Atque at neque.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(2400),
                            IsDeleted = false,
                            Name = "Lillie Stehr"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Odio fugiat molestiae quia reiciendis fugiat qui. Nisi hic vel neque eius. Quas ut aut. Qui eaque possimus ut cum sint suscipit. Voluptate enim necessitatibus eos inventore nisi quos asperiores.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(2458),
                            IsDeleted = false,
                            Name = "Cyrus Schaden"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Ut libero enim quia voluptatibus nam. Optio quas minima nihil ad id dolore. Laboriosam aut aut vel placeat aut et atque saepe. Esse similique expedita assumenda dolore ullam.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(2561),
                            IsDeleted = false,
                            Name = "Thea Stroman"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Amet corporis exercitationem fugit. Quas quia dolor dicta et. Blanditiis ratione distinctio enim et asperiores maxime qui voluptatem et. Velit consequuntur deserunt dolor eveniet ipsam nostrum atque tenetur. Asperiores rerum libero nesciunt. Occaecati aut accusamus ea aut quos quam non praesentium.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(2689),
                            IsDeleted = false,
                            Name = "Nyasia Rowe"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Qui quo sapiente fugit tempora sint praesentium quod commodi. Quis molestiae suscipit libero. Dignissimos rerum officiis ex officia exercitationem. Dolores natus sapiente. Reiciendis numquam et ipsam vero et autem ipsum totam. Voluptatem nam accusantium et.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(2849),
                            IsDeleted = false,
                            Name = "Damon Fritsch"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Voluptate nobis quas. Aspernatur sunt est ea dolor impedit. Quae blanditiis ab. Suscipit doloribus qui quae et omnis repellendus.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(2954),
                            IsDeleted = false,
                            Name = "Edwardo Strosin"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Tempora molestiae velit aliquam modi. Ad impedit officia est fugit optio atque. Sed est aperiam atque commodi. Est possimus aliquid omnis qui et doloribus atque. Eaque sit quo quia qui et reiciendis. Molestiae totam expedita ullam ducimus cupiditate rerum odit.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(3049),
                            IsDeleted = false,
                            Name = "Parker Shanahan"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Cumque excepturi doloribus earum. Quia libero aut exercitationem maiores iste ad quo sint. Laborum sint iusto et dolorem aut repellendus placeat necessitatibus. Velit doloremque aut qui dolores quo explicabo quia. Facere quas voluptatibus optio occaecati omnis rerum dicta.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 800, DateTimeKind.Utc).AddTicks(3178),
                            IsDeleted = false,
                            Name = "Norwood Deckow"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 803, DateTimeKind.Utc).AddTicks(7289),
                            Description = "Enim dolores veritatis voluptas voluptas optio excepturi. Atque asperiores facilis rem non beatae quis aliquid exercitationem. Dolores voluptatibus est harum molestias tempore quasi possimus alias neque. Quo culpa aliquid vitae atque amet quod totam. Consectetur pariatur culpa. Sed ex omnis aspernatur voluptates vel.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 13.86m,
                            PrimaryGenreId = 3,
                            PublisherId = 2,
                            Title = "Hic in beatae."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 803, DateTimeKind.Utc).AddTicks(9420),
                            Description = "Voluptatem occaecati sapiente voluptatum amet distinctio fugiat dolor consequuntur. Repellendus odio fugit ea. Esse autem dolores consectetur sit voluptate debitis. Aliquam explicabo voluptas sapiente repellat sint ut qui quo. Occaecati accusamus occaecati. Minima sequi sed numquam placeat.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 71.48m,
                            PrimaryGenreId = 5,
                            PublisherId = 5,
                            Title = "Doloribus pariatur nulla."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 803, DateTimeKind.Utc).AddTicks(9631),
                            Description = "Quia et suscipit dolore voluptates et unde voluptas perspiciatis aut. Voluptas ut et maxime. Libero error ut quasi. Deserunt non sed ipsam velit beatae cupiditate nobis eveniet. Porro quo id veniam deserunt.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 43.41m,
                            PrimaryGenreId = 7,
                            PublisherId = 3,
                            Title = "Dolorem blanditiis ut."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 803, DateTimeKind.Utc).AddTicks(9854),
                            Description = "Aperiam modi alias omnis officiis deserunt vel dolores ea. Quibusdam qui facere iure illo praesentium saepe quo. Architecto libero suscipit illum quos at temporibus voluptatem qui quis. Provident id quisquam earum voluptas cumque amet. Eius rerum et repellendus non quaerat culpa molestiae ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 87.18m,
                            PrimaryGenreId = 4,
                            PublisherId = 1,
                            Title = "Eligendi ea omnis."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(66),
                            Description = "Non natus tenetur tempore fuga fuga dignissimos. Quasi nesciunt ratione nostrum aut eos. Reprehenderit nam blanditiis consequuntur minus tenetur qui neque quia. Tempore voluptatem sunt quas voluptas. Reprehenderit nihil quasi culpa minus praesentium earum praesentium cupiditate quia. Totam maxime et est dolor et repellat voluptatem perferendis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 11.83m,
                            PrimaryGenreId = 4,
                            PublisherId = 3,
                            Title = "Dolorem non dicta."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(238),
                            Description = "Accusamus ipsa consectetur. Doloribus omnis tempore unde quia voluptatem est sapiente consequatur veritatis. Eos dignissimos ut eos aut quasi consequatur. Doloremque veniam voluptatum accusamus reiciendis cum odit aut expedita.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 98.46m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Cupiditate qui dicta."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(339),
                            Description = "Et iste ipsum blanditiis perspiciatis libero qui totam rerum voluptas. Qui ipsum omnis cum corrupti quia architecto aperiam reiciendis non. Aut voluptatem rerum itaque vero qui asperiores saepe sequi. Neque molestiae consequatur fuga sit.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 58.30m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Tempora ut est."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(475),
                            Description = "Veniam quia quibusdam et non voluptatum. Adipisci est aut voluptatem placeat. Quis blanditiis omnis voluptas rem dolores voluptas voluptas unde. Dolorem a voluptates voluptate. At sit distinctio et error.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 82.02m,
                            PrimaryGenreId = 7,
                            PublisherId = 2,
                            Title = "Placeat dolorum ex."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(599),
                            Description = "Doloribus aspernatur suscipit cupiditate tempore aut dolore. Molestias rerum architecto consectetur omnis est dolores. Placeat cum quasi maxime officiis dolor ea rerum voluptatem. Nulla laudantium perspiciatis architecto sunt repellendus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 95.70m,
                            PrimaryGenreId = 5,
                            PublisherId = 5,
                            Title = "Officia corporis perspiciatis."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(685),
                            Description = "Quaerat quo tempore. Quas enim voluptas. Velit ut sed alias nulla alias voluptatem voluptatem sequi possimus. Aliquam molestiae quo natus rem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 98.27m,
                            PrimaryGenreId = 2,
                            PublisherId = 5,
                            Title = "Laborum maiores labore."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(783),
                            Description = "Ut placeat deserunt exercitationem. Sit ad debitis omnis sint. Doloribus laboriosam non officiis et quisquam nihil.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 45.89m,
                            PrimaryGenreId = 6,
                            PublisherId = 4,
                            Title = "Aut impedit illum."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(845),
                            Description = "Minus hic autem repellat. Qui qui inventore enim recusandae est neque qui et molestias. Numquam aliquid asperiores velit doloribus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 35.83m,
                            PrimaryGenreId = 7,
                            PublisherId = 1,
                            Title = "Autem corrupti optio."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(940),
                            Description = "Voluptatibus nostrum fugit culpa. Ex minima accusamus porro distinctio corrupti ea tempora voluptatem quae. Vel odio voluptatem similique libero delectus consequatur. Fugit consequatur reiciendis aut neque voluptatem sint architecto voluptates. Ut voluptatem neque voluptatem cum nisi assumenda quo.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 96.49m,
                            PrimaryGenreId = 3,
                            PublisherId = 3,
                            Title = "Accusamus ipsam blanditiis."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(1062),
                            Description = "Exercitationem quia doloremque sed. In nam alias. Officia voluptatem molestias doloribus quia qui sed a aut. Quisquam sit hic enim voluptatibus sunt alias qui non beatae. Nisi sapiente dolor eveniet.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 61.35m,
                            PrimaryGenreId = 6,
                            PublisherId = 3,
                            Title = "Deleniti laboriosam dicta."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(1148),
                            Description = "Quam eum omnis totam. Occaecati mollitia dignissimos possimus vel autem voluptas natus fuga. Veniam sint enim dolor amet ea officiis. Error quis nihil reprehenderit ullam error et qui sit. Ut eos eligendi blanditiis. Rem totam dolor deserunt doloribus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 38.22m,
                            PrimaryGenreId = 3,
                            PublisherId = 2,
                            Title = "A consectetur illo."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(1366),
                            Description = "Delectus qui expedita aut. Velit aut velit dolorum dolores vel. Provident exercitationem id eum aut optio eius ipsa. Aut voluptatem provident dolor. Minima voluptates doloremque enim dolorum rerum est et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 37.01m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Ducimus aliquid optio."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(1496),
                            Description = "Omnis explicabo maxime est ut. Reprehenderit reiciendis eligendi facere quia nihil non accusantium aliquid delectus. Est earum illum voluptates aut officia sit.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 33.54m,
                            PrimaryGenreId = 4,
                            PublisherId = 4,
                            Title = "Enim tempora aliquam."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(1563),
                            Description = "Aliquam et sed sint aut. Et id corporis voluptatum odit esse provident nihil est dolorum. Commodi doloremque voluptatum eum. Sapiente debitis nisi unde suscipit eos aspernatur ea molestiae voluptatem. Est deserunt odit dicta distinctio quia odit libero ut molestias.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 37.22m,
                            PrimaryGenreId = 7,
                            PublisherId = 3,
                            Title = "Eos officia similique."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(1690),
                            Description = "Voluptatem quia non velit corrupti nihil aut ipsa qui quis. Aut quam natus soluta odio qui consequatur dolorem tempore repellendus. Quos beatae aspernatur error ipsa est laborum quas omnis. Impedit voluptatem voluptatem commodi nobis rem nam et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 87.62m,
                            PrimaryGenreId = 4,
                            PublisherId = 2,
                            Title = "Asperiores nihil velit."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 804, DateTimeKind.Utc).AddTicks(1814),
                            Description = "Deleniti ad accusantium ducimus voluptatibus. Maiores consequuntur doloribus eos aut repellendus delectus quam officiis iste. Beatae dolores repellendus dolores aliquam provident quia. Sit dolore quaerat voluptatem magni esse doloremque. Nam dolorem ipsam consequuntur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 81.51m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Quo nemo qui."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2421),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2422),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2423),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2423),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2423),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2424),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2424),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2424),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2425),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GiftCardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceReduction")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderState")
                        .HasColumnType("integer");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 810, DateTimeKind.Utc).AddTicks(5940),
                            CustomerEmail = "Richard_Funk@yahoo.com",
                            CustomerName = "Richard Funk",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(342),
                            CustomerEmail = "Terrence.Steuber@gmail.com",
                            CustomerName = "Terrence Steuber",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(2047),
                            CustomerEmail = "Darlene_Reilly@hotmail.com",
                            CustomerName = "Darlene Reilly",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(2823),
                            CustomerEmail = "Lydia.Carroll78@hotmail.com",
                            CustomerName = "Lydia Carroll",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(3636),
                            CustomerEmail = "Peggy85@gmail.com",
                            CustomerName = "Peggy Jerde",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 9,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(4272),
                            CustomerEmail = "Mildred_Pacocha@yahoo.com",
                            CustomerName = "Mildred Pacocha",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(4812),
                            CustomerEmail = "Saul_Schaefer29@hotmail.com",
                            CustomerName = "Saul Schaefer",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(5411),
                            CustomerEmail = "Nicole_White@hotmail.com",
                            CustomerName = "Nicole White",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(5948),
                            CustomerEmail = "Ivan0@yahoo.com",
                            CustomerName = "Ivan Schaefer",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(6441),
                            CustomerEmail = "Sheila_McCullough86@hotmail.com",
                            CustomerName = "Sheila McCullough",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(7011),
                            CustomerEmail = "Shari.Toy43@gmail.com",
                            CustomerName = "Shari Toy",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(7501),
                            CustomerEmail = "Rafael.Littel@gmail.com",
                            CustomerName = "Rafael Littel",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(8008),
                            CustomerEmail = "Terrance49@hotmail.com",
                            CustomerName = "Terrance Hilpert",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 2,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(8526),
                            CustomerEmail = "Alberta78@gmail.com",
                            CustomerName = "Alberta Hamill",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 811, DateTimeKind.Utc).AddTicks(9103),
                            CustomerEmail = "Cecelia.DAmore95@hotmail.com",
                            CustomerName = "Cecelia D'Amore",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(283),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 92.45m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1696),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 60.69m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1745),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 63.07m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1757),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 19.51m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1766),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 71.60m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1775),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 26.51m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1783),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 12.56m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1791),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 88.36m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 9,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1800),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 56.64m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1809),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 27.80m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1817),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 54.38m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1825),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 29.22m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 13,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1833),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 56.73m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 14,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1840),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 24.93m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1849),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 65.87m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 16,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1857),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 47.52m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 17,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1866),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 10.01m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 18,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1875),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 34.51m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 19,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1883),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 88.98m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 20,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1963),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 59.95m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 21,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1972),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 63.46m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 22,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1980),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 62.89m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 23,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1988),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 84.86m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 24,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(1995),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 89.22m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 25,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2004),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 41.69m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 26,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2012),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 96.39m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 27,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2020),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 31.07m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 28,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2028),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 29.66m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 29,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2037),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 33.58m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 30,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2045),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 66.42m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 31,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2053),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 98.94m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2061),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 99.04m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 33,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2069),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 52.55m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 34,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2077),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 70.42m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2085),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 89.15m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 36,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2093),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 17.34m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 37,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2101),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 48.00m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 38,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2110),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 23.45m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 39,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2118),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 85.70m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 40,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2125),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 35.72m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 41,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2133),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 90.86m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 42,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2141),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 97.44m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 43,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2149),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 31.57m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 44,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2157),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 48.61m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 45,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2164),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 82.28m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 46,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2172),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 74.11m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2180),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 91.27m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 48,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2188),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 89.12m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 49,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2196),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 14.74m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 50,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 815, DateTimeKind.Utc).AddTicks(2204),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 99.47m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Quis cupiditate tempore omnis aut esse quia debitis. Fugit ipsum et omnis aut nostrum doloribus. Tempore veniam et quis. Voluptatem voluptatum commodi dicta omnis ipsam reprehenderit eos id.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 801, DateTimeKind.Utc).AddTicks(9871),
                            IsDeleted = false,
                            Name = "Reilly Inc"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Doloremque modi beatae ratione voluptatem soluta fugit dicta quis qui. Delectus et id quasi vitae dignissimos inventore pariatur. Sequi corrupti est maxime qui amet omnis et placeat ab. Minima maxime voluptatibus et aut sit. Ut quisquam possimus voluptatem hic facere eius. Optio blanditiis tenetur vero.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 802, DateTimeKind.Utc).AddTicks(697),
                            IsDeleted = false,
                            Name = "Ebert, Kuvalis and Kunde"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Et impedit fugiat nesciunt officia dolorum laudantium nam nobis. Sunt explicabo sunt dolor. Repellat in perferendis rerum unde fugiat quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 802, DateTimeKind.Utc).AddTicks(1001),
                            IsDeleted = false,
                            Name = "Mayer - Prosacco"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Omnis doloribus libero est ut quis. Non consectetur aliquam et ut. Id fugiat assumenda excepturi. Quaerat fugiat debitis expedita fugiat aut sunt porro. Eum quia maiores.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 802, DateTimeKind.Utc).AddTicks(1147),
                            IsDeleted = false,
                            Name = "Witting, Pfannerstill and Stanton"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Consectetur delectus maiores nisi consectetur aspernatur ducimus saepe ut libero. Ut et pariatur ex. Placeat ex exercitationem et. Repellendus molestiae quis nobis eligendi sint voluptas eos aspernatur nemo. Ipsa velit aut quis veniam occaecati. Ea asperiores consequatur natus aut nam explicabo autem exercitationem.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 802, DateTimeKind.Utc).AddTicks(1361),
                            IsDeleted = false,
                            Name = "Lind - Kautzer"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 8,
                            Comment = "Cum quia accusantium asperiores nostrum ut dolorem.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(8489),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            Comment = "Cumque eos quidem maxime ipsam cum aliquam rerum.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9648),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 3,
                            BookId = 10,
                            Comment = "Sed quis ea facere qui doloribus qui sit aliquam architecto.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9735),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            BookId = 10,
                            Comment = "Quis dignissimos consequatur cum omnis illum consequatur ut dolores.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9773),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            Comment = "Quos ullam corporis quaerat at at et quis.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9803),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 6,
                            BookId = 18,
                            Comment = "Neque facere iusto tenetur aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9832),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            BookId = 14,
                            Comment = "Non et fugiat eum delectus.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9854),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 8,
                            BookId = 10,
                            Comment = "Voluptatum sit esse omnis libero est praesentium.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9875),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 9,
                            BookId = 16,
                            Comment = "Libero in delectus aliquid voluptatum quas fugiat et placeat.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9961),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BookId = 18,
                            Comment = "Quia omnis eveniet beatae itaque eius nemo necessitatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 805, DateTimeKind.Utc).AddTicks(9988),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 14,
                            Comment = "Voluptatem voluptatibus repellat ut omnis odio quis.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(16),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            BookId = 1,
                            Comment = "Illo qui ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(39),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            BookId = 7,
                            Comment = "Velit aut fugiat aut quod.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(57),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 2,
                            Comment = "Suscipit fugit dolor totam iste rerum illo et.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(75),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            BookId = 4,
                            Comment = "Placeat autem esse excepturi hic.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(101),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            BookId = 12,
                            Comment = "Id vel veniam exercitationem recusandae beatae saepe cumque.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(119),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            BookId = 16,
                            Comment = "Sequi autem modi quod.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(174),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 18,
                            BookId = 17,
                            Comment = "Maxime sed error voluptas sed commodi voluptatem laboriosam.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(189),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 19,
                            BookId = 4,
                            Comment = "Sunt tenetur quae.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(218),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 20,
                            BookId = 16,
                            Comment = "Ipsam excepturi est alias consequatur ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(234),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 21,
                            BookId = 16,
                            Comment = "Esse vitae id aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(253),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 22,
                            BookId = 5,
                            Comment = "Harum maxime magni quaerat quod.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(270),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 23,
                            BookId = 17,
                            Comment = "Accusamus molestias rerum velit atque nostrum explicabo fugit.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(288),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 24,
                            BookId = 11,
                            Comment = "Voluptatem eveniet sed fuga qui non atque adipisci in quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(314),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 25,
                            BookId = 11,
                            Comment = "Sit quidem quam et perferendis aperiam perspiciatis distinctio.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(340),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 26,
                            BookId = 13,
                            Comment = "Voluptate et dolores impedit illo doloribus quos consectetur voluptatem sunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(396),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 27,
                            BookId = 3,
                            Comment = "Fugiat fugit ipsa doloribus corrupti saepe.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(427),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 28,
                            BookId = 8,
                            Comment = "Expedita sit et porro minus dolorem et eveniet sunt voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(448),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 6,
                            Comment = "Minus qui et amet et aut est velit ea.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(475),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 30,
                            BookId = 16,
                            Comment = "Sit dolores molestiae odit.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(502),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 31,
                            BookId = 4,
                            Comment = "Et tenetur et odio recusandae non maxime impedit ea voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(518),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 32,
                            BookId = 13,
                            Comment = "Dolorem tempore enim.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(542),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 33,
                            BookId = 10,
                            Comment = "Temporibus error voluptatem repellendus explicabo doloremque omnis sapiente repellendus.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(586),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 34,
                            BookId = 8,
                            Comment = "Quia molestias laudantium nihil asperiores rerum laborum.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(614),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 35,
                            BookId = 11,
                            Comment = "Sunt soluta qui eveniet blanditiis laborum nisi voluptatem placeat ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(640),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 36,
                            BookId = 3,
                            Comment = "Quae quisquam ea ut dignissimos.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(667),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 37,
                            BookId = 17,
                            Comment = "Vel dolores dolorem odit earum quam et corrupti amet quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(684),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 38,
                            BookId = 6,
                            Comment = "Qui deserunt neque sed culpa dolorem pariatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(709),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 39,
                            BookId = 1,
                            Comment = "Optio enim quis laborum consequatur voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(730),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 40,
                            BookId = 2,
                            Comment = "Mollitia ab et laborum esse corrupti.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(766),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 41,
                            BookId = 20,
                            Comment = "In fuga perferendis inventore eum est laborum vitae et.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(785),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 42,
                            BookId = 18,
                            Comment = "Ipsum at voluptatibus atque accusamus.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(809),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 43,
                            BookId = 3,
                            Comment = "Ad ut sed culpa voluptatibus sunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(826),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 44,
                            BookId = 1,
                            Comment = "Nam ipsam atque eum velit omnis ipsa fugiat perferendis assumenda.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(844),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 45,
                            BookId = 1,
                            Comment = "Necessitatibus veniam qui reprehenderit in et.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(868),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 46,
                            BookId = 7,
                            Comment = "Nihil natus earum.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(886),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 47,
                            BookId = 2,
                            Comment = "Veniam veritatis quia quae vero doloribus id excepturi nemo earum.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(900),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 48,
                            BookId = 20,
                            Comment = "Incidunt consequatur dolorem voluptas perspiciatis non necessitatibus quia voluptatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(1022),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 49,
                            BookId = 7,
                            Comment = "Ipsum similique autem repudiandae.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(1046),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 50,
                            BookId = 14,
                            Comment = "Nam laborum quis fugit libero totam.",
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 806, DateTimeKind.Utc).AddTicks(1066),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ee16a7f-157d-4654-b929-4587f61d4530",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0ee536f6-121b-4649-ae0f-429419ebb7f1",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2d85fd13-c2ab-4e12-bca2-351bc611b782",
                            Email = "Ewell86@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Moshe Schuppe",
                            PhoneNumber = "(755) 561-1356",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "05232e17-cb97-4bcb-977b-f45df2f28c55",
                            TwoFactorEnabled = false,
                            UserName = "Ewell86@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e9866e20-b10a-4578-ba9c-1e7ea1603a3b",
                            Email = "Trey4@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Treva Mitchell",
                            PhoneNumber = "827.431.4181 x14365",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eacfb3f8-9d67-4412-a8d1-16639db58ada",
                            TwoFactorEnabled = false,
                            UserName = "Trey4@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1eeec576-758b-4431-abb3-1ab05b858604",
                            Email = "Retha_OHara94@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Christ Heaney",
                            PhoneNumber = "1-751-914-6343 x1339",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e2af5278-2017-4dcf-b867-55a0e6c1dbe3",
                            TwoFactorEnabled = false,
                            UserName = "Retha_OHara94@hotmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c32a1abe-3eee-414f-888e-52c1948c5edc",
                            Email = "Tristin_Reichel@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Kennedy Fadel",
                            PhoneNumber = "(430) 541-1355",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "113b6fa9-7f15-40f5-8eaf-e7a3e35cc50a",
                            TwoFactorEnabled = false,
                            UserName = "Tristin_Reichel@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "378dbe6b-b784-45a4-9096-3f0e3f1ef13c",
                            Email = "Jany.Kreiger68@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Ewell Jacobs",
                            PhoneNumber = "1-535-603-9863 x5389",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "41e9f400-b244-4fb6-ac63-bf203f5ee9b0",
                            TwoFactorEnabled = false,
                            UserName = "Jany.Kreiger68@hotmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "31390a34-afdf-4dd9-ac24-1945af6f0106",
                            Email = "Burnice51@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Melisa Moore",
                            PhoneNumber = "(866) 554-5138",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ab5f194f-16b9-43c4-9368-7708c536b0ac",
                            TwoFactorEnabled = false,
                            UserName = "Burnice51@yahoo.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "13c09a6c-102a-417d-8087-6e946f43643b",
                            Email = "Damien87@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Manley Kassulke",
                            PhoneNumber = "(473) 977-6017",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9ad762b3-d134-4814-aaa3-5be2ffce50d5",
                            TwoFactorEnabled = false,
                            UserName = "Damien87@yahoo.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4fd4441b-a9c9-4e52-a596-65da73162d25",
                            Email = "Eleanore.Schuster97@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Myron Roob",
                            PhoneNumber = "388-506-8018 x34952",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7e4934ea-f359-40b0-bd4d-0f49c599ac08",
                            TwoFactorEnabled = false,
                            UserName = "Eleanore.Schuster97@hotmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "669ed16d-e249-4072-a3ad-76ab22a8fe14",
                            Email = "Jasen25@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Torrey Runolfsson",
                            PhoneNumber = "404-344-2984",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "43007d7e-d960-4e0b-a4af-12b9ba7677a6",
                            TwoFactorEnabled = false,
                            UserName = "Jasen25@hotmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(4987),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 2,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5142),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5148),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 4,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5152),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5155),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5158),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5161),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5164),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 9,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5168),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5171),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5174),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5177),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 13,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5180),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 14,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5183),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 15,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5186),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 16,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5189),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 17,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5192),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5195),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 19,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5199),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 20,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5201),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 21,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5205),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 22,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5208),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 23,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5211),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 24,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5214),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 25,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5217),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 26,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5220),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 27,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5223),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 28,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5226),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 29,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5229),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 30,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 16, 5, 52, 807, DateTimeKind.Utc).AddTicks(5232),
                            IsDeleted = false,
                            UserId = 9
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("Coupons")
                        .HasForeignKey("CartId");

                    b.HasOne("DataAccessLayer.Model.GiftCard", "GiftCard")
                        .WithMany("Coupons")
                        .HasForeignKey("GiftCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("Coupons")
                        .HasForeignKey("OrderId");

                    b.Navigation("Cart");

                    b.Navigation("GiftCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("Coupons");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
