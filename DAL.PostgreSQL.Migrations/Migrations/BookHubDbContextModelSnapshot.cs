// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    partial class BookHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Lylaside",
                            Country = "Pitcairn Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 316, DateTimeKind.Utc).AddTicks(8734),
                            IsDeleted = false,
                            State = "Delaware",
                            Street = "573 Reilly Fort",
                            ZipCode = "49227"
                        },
                        new
                        {
                            Id = 2,
                            City = "Lake Monserratchester",
                            Country = "Guadeloupe",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 316, DateTimeKind.Utc).AddTicks(9380),
                            IsDeleted = false,
                            State = "Delaware",
                            Street = "118 Cindy Circles",
                            ZipCode = "10359"
                        },
                        new
                        {
                            Id = 3,
                            City = "Yesseniabury",
                            Country = "Jordan",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 316, DateTimeKind.Utc).AddTicks(9559),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "9347 Stacy Dam",
                            ZipCode = "08927"
                        },
                        new
                        {
                            Id = 4,
                            City = "Lake Rae",
                            Country = "Myanmar",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 316, DateTimeKind.Utc).AddTicks(9703),
                            IsDeleted = false,
                            State = "South Carolina",
                            Street = "48713 Kertzmann Junctions",
                            ZipCode = "82126"
                        },
                        new
                        {
                            Id = 5,
                            City = "Port Lenore",
                            Country = "Aruba",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 316, DateTimeKind.Utc).AddTicks(9851),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "225 Predovic Motorway",
                            ZipCode = "57087"
                        },
                        new
                        {
                            Id = 6,
                            City = "West Jerrod",
                            Country = "Ethiopia",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 316, DateTimeKind.Utc).AddTicks(9991),
                            IsDeleted = false,
                            State = "North Dakota",
                            Street = "3836 Morar Street",
                            ZipCode = "35400-2307"
                        },
                        new
                        {
                            Id = 7,
                            City = "West Wilfridfort",
                            Country = "Zambia",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(143),
                            IsDeleted = false,
                            State = "North Dakota",
                            Street = "50919 Dietrich Point",
                            ZipCode = "13721"
                        },
                        new
                        {
                            Id = 8,
                            City = "Madisentown",
                            Country = "Peru",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(287),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "6982 Johanna Throughway",
                            ZipCode = "63055-9443"
                        },
                        new
                        {
                            Id = 9,
                            City = "Dachview",
                            Country = "Afghanistan",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(427),
                            IsDeleted = false,
                            State = "Delaware",
                            Street = "876 Wolff Court",
                            ZipCode = "26442"
                        },
                        new
                        {
                            Id = 10,
                            City = "West Brennan",
                            Country = "Mali",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(557),
                            IsDeleted = false,
                            State = "Massachusetts",
                            Street = "74751 Dorthy Rest",
                            ZipCode = "56869-7537"
                        },
                        new
                        {
                            Id = 11,
                            City = "Carolineborough",
                            Country = "Indonesia",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(697),
                            IsDeleted = false,
                            State = "Indiana",
                            Street = "08696 Marquardt Groves",
                            ZipCode = "82408"
                        },
                        new
                        {
                            Id = 12,
                            City = "New Mortimer",
                            Country = "Ghana",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(839),
                            IsDeleted = false,
                            State = "Illinois",
                            Street = "5964 Conn Plains",
                            ZipCode = "60565"
                        },
                        new
                        {
                            Id = 13,
                            City = "Wildermanstad",
                            Country = "Taiwan",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(971),
                            IsDeleted = false,
                            State = "Tennessee",
                            Street = "7137 Gaylord Creek",
                            ZipCode = "52697"
                        },
                        new
                        {
                            Id = 14,
                            City = "South Rudymouth",
                            Country = "Myanmar",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(1140),
                            IsDeleted = false,
                            State = "Ohio",
                            Street = "2949 Tracey Stream",
                            ZipCode = "22073"
                        },
                        new
                        {
                            Id = 15,
                            City = "New Rowan",
                            Country = "Saint Vincent and the Grenadines",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 317, DateTimeKind.Utc).AddTicks(1311),
                            IsDeleted = false,
                            State = "Arizona",
                            Street = "21642 Volkman Hills",
                            ZipCode = "28988-7958"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Et pariatur possimus ut. Mollitia nihil tenetur totam labore aut et iure illo. Et in optio nam voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(1735),
                            IsDeleted = false,
                            Name = "Jonathan Murray"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Ipsam deleniti officiis asperiores ad. Hic ut aut quasi recusandae dolorum ipsa molestiae laboriosam et. Numquam sint ea deleniti est voluptatem at voluptates aut. Et minima autem voluptatem sequi animi quo quae. Voluptas distinctio qui repellendus.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(2174),
                            IsDeleted = false,
                            Name = "Jeramie Bruen"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Explicabo molestiae sapiente temporibus. Non quis quia quia ducimus exercitationem consequatur atque unde. Nemo dolores et reprehenderit non et inventore voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(2334),
                            IsDeleted = false,
                            Name = "Kayley Roberts"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Praesentium consequatur odit praesentium necessitatibus dicta molestiae. Ut vel dolorum dolorum consequatur repudiandae et minus ratione aut. Consectetur voluptatem rerum sit perspiciatis quia vitae ut vel.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(2460),
                            IsDeleted = false,
                            Name = "Valerie Heathcote"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Consequuntur qui omnis. Minus animi fugiat. Ullam aspernatur veritatis aut neque ipsum dignissimos dolores sint. Ut facilis placeat.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(2621),
                            IsDeleted = false,
                            Name = "Alycia Rosenbaum"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Eaque cupiditate qui voluptatem quis aut illum delectus cupiditate. Sed temporibus sint. Numquam voluptate quidem id illum dolorum ut sed dicta totam. Inventore provident ad. Ea voluptas autem iste. Fuga eaque suscipit.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(2731),
                            IsDeleted = false,
                            Name = "Christopher Abernathy"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Minus iste autem. At sapiente nisi. Nemo aspernatur qui fugiat nihil doloremque recusandae quia. Voluptates pariatur ut. Eos consequatur eos ut aut voluptate non.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(2851),
                            IsDeleted = false,
                            Name = "Samantha Swaniawski"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Facilis molestiae adipisci porro neque cupiditate omnis. Doloremque ut delectus quis ut quasi quisquam repellendus ea. Temporibus nobis est delectus. Aut unde ut perspiciatis possimus nihil eum praesentium. Dolore eligendi mollitia iure molestiae et dolor.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(2952),
                            IsDeleted = false,
                            Name = "Lonie Ortiz"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Et blanditiis ullam dolorum iure voluptates. Et quaerat distinctio repellendus. Quos iusto autem consequuntur. Repudiandae iusto numquam repudiandae asperiores voluptate tenetur rerum amet eum. Iste porro nisi. Praesentium eveniet ut accusamus delectus veniam quas sint.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(3128),
                            IsDeleted = false,
                            Name = "Amina Cummings"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Dolores consequuntur est sequi repudiandae optio laborum officia quia quo. Assumenda totam ipsam deleniti neque eveniet. Cum est non atque voluptatum. Similique quae commodi necessitatibus optio in voluptate dolorem ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 308, DateTimeKind.Utc).AddTicks(3247),
                            IsDeleted = false,
                            Name = "Orie Weber"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(6201),
                            Description = "Omnis reprehenderit eius doloribus unde inventore. Sint maxime nihil quam molestias. Et doloribus fuga similique. Sunt ullam neque.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 27.14m,
                            PrimaryGenreId = 4,
                            PublisherId = 1,
                            Title = "Nulla est enim."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(8297),
                            Description = "Non velit nam libero fugiat ut incidunt inventore quos. Debitis earum provident nesciunt velit. Veritatis qui nemo id provident perspiciatis vitae earum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 39.84m,
                            PrimaryGenreId = 1,
                            PublisherId = 1,
                            Title = "Fuga adipisci voluptatem."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(8449),
                            Description = "Corrupti qui porro laboriosam et optio ad aspernatur ea. Libero totam aliquam eos quia nam esse sed excepturi quaerat. Quibusdam ut quibusdam maxime quam cupiditate ut officia.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 87.21m,
                            PrimaryGenreId = 3,
                            PublisherId = 3,
                            Title = "Eum voluptatem nemo."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(8623),
                            Description = "Ratione ab ipsum placeat doloribus. Ut unde voluptates. Libero sint et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 23.29m,
                            PrimaryGenreId = 6,
                            PublisherId = 1,
                            Title = "Repellat occaecati aspernatur."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(8715),
                            Description = "Aut ratione quidem eveniet. Nihil voluptas cupiditate vitae nemo facere. Dolor culpa illo aut voluptas autem et eos. Dicta incidunt sunt ut enim veritatis. Omnis doloremque voluptas rem provident dicta repellat praesentium magnam odio. Et dicta vitae illo dicta laborum reiciendis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 14.72m,
                            PrimaryGenreId = 2,
                            PublisherId = 4,
                            Title = "Rerum et excepturi."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(8989),
                            Description = "Accusantium accusamus in architecto. Enim eos sint nobis at beatae impedit. Nesciunt et sit corporis temporibus nam accusamus ipsum ullam. Ducimus magnam est sunt. Et qui architecto accusamus voluptatem maiores dolorem architecto perspiciatis. Aut voluptate rerum quidem voluptates quasi facere adipisci hic aut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 27.79m,
                            PrimaryGenreId = 3,
                            PublisherId = 4,
                            Title = "Praesentium laudantium officia."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(9245),
                            Description = "Sint est animi repellendus ipsum mollitia voluptatem. Cumque nostrum consequuntur vero quidem facilis dolorem omnis dolor. In consequuntur earum esse odio eum ut sit et. Laboriosam quod eum at. Qui ea doloribus iusto voluptas.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 95.51m,
                            PrimaryGenreId = 7,
                            PublisherId = 5,
                            Title = "Deleniti nostrum a."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(9466),
                            Description = "Ut ad quis occaecati et quos. Culpa voluptatem voluptas atque sit. Dignissimos debitis a nam non earum quis libero est optio. Quaerat sunt veritatis quis repellat voluptas. Doloribus cupiditate excepturi nam. Alias accusamus dignissimos et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 49.86m,
                            PrimaryGenreId = 2,
                            PublisherId = 4,
                            Title = "Autem quae et."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(9675),
                            Description = "Sequi vel delectus beatae. Expedita deserunt quos quos aspernatur. Similique fuga culpa sit eum illo. Expedita qui accusantium dolores. Maiores harum doloribus aliquam maiores ratione in expedita sint.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 20.92m,
                            PrimaryGenreId = 6,
                            PublisherId = 5,
                            Title = "Culpa id illum."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 311, DateTimeKind.Utc).AddTicks(9833),
                            Description = "Aspernatur sit aspernatur rem est cumque porro omnis. Fuga autem aut deserunt velit sint reprehenderit soluta cumque. Velit et quis sit quia est corrupti in quibusdam. Itaque quis corporis quasi. Quisquam sunt autem recusandae maxime. Dolorem harum quasi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 83.95m,
                            PrimaryGenreId = 1,
                            PublisherId = 3,
                            Title = "Nisi accusamus blanditiis."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(9),
                            Description = "Aut iste error impedit tenetur non deserunt est velit. At vitae cum est. Quasi et eos. Maxime quisquam eligendi consectetur quo ab. Autem debitis consectetur cumque adipisci voluptas aperiam accusamus nulla. Alias sit itaque quia quibusdam quaerat iure quo.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 54.02m,
                            PrimaryGenreId = 3,
                            PublisherId = 4,
                            Title = "Qui in suscipit."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(205),
                            Description = "Illo magnam dicta et esse amet necessitatibus aut alias. Officiis ex rem cum optio quia vel est. Officia nisi aliquid provident accusamus recusandae vel incidunt dicta. Ut suscipit cumque veritatis deserunt non ullam sint hic. Est saepe nesciunt molestiae est qui mollitia perspiciatis. Quis quo aliquam quas molestias aut magnam quisquam nesciunt.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 50.08m,
                            PrimaryGenreId = 3,
                            PublisherId = 2,
                            Title = "Molestiae iste totam."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(426),
                            Description = "Voluptas veniam odio dolorem. Eius soluta aut fuga temporibus. Doloremque quis et aut. Quos nihil enim quis nemo tempora aut et qui et. Fugiat sint sit possimus quia et mollitia doloribus rerum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 89.33m,
                            PrimaryGenreId = 4,
                            PublisherId = 4,
                            Title = "Architecto quod qui."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(540),
                            Description = "Accusamus sunt numquam et possimus nihil deserunt est. Minima ea quo nemo dignissimos praesentium. Sed suscipit et ea exercitationem vero nemo ipsa. Dolorem non veritatis ratione occaecati non omnis quas quisquam voluptates. Non excepturi id cupiditate sunt. Magni nesciunt perspiciatis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 12.94m,
                            PrimaryGenreId = 3,
                            PublisherId = 4,
                            Title = "Exercitationem esse molestiae."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(719),
                            Description = "Neque amet odit dolorem ut aut. Labore perspiciatis occaecati in est rerum ex. Quia sint et. Consequatur eaque ea non voluptatem dolores rerum dolores qui. Dolorem vel animi occaecati magnam sit fuga quisquam. Et iste possimus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 13.03m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Et animi molestiae."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(862),
                            Description = "Eligendi expedita odit quis recusandae doloribus est quia voluptatem rerum. Optio fugit incidunt qui. Ex rerum quasi consequatur quod facere.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 13.90m,
                            PrimaryGenreId = 7,
                            PublisherId = 5,
                            Title = "Autem ut commodi."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(938),
                            Description = "Odit placeat beatae occaecati. Quis delectus et laboriosam et sint. Esse quia nihil dolorem. Velit sequi ut minima aspernatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 84.82m,
                            PrimaryGenreId = 7,
                            PublisherId = 4,
                            Title = "Delectus nemo asperiores."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(1050),
                            Description = "Qui architecto explicabo illum est aut voluptas. Cumque perferendis atque. Incidunt sit at ducimus quidem quos delectus aperiam. Sapiente maxime ipsa perferendis facilis est repudiandae. Quaerat natus ea ut a. Deleniti eos asperiores.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 42.26m,
                            PrimaryGenreId = 3,
                            PublisherId = 3,
                            Title = "Quia sed quis."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(1188),
                            Description = "Vel odio repellendus tempora recusandae velit. Ut voluptas eum soluta qui. Ut ducimus eius omnis sed mollitia optio. Ut consequatur rerum est amet minus aut necessitatibus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 16.60m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Explicabo dolore ut."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 312, DateTimeKind.Utc).AddTicks(1277),
                            Description = "Ea aut quo sit. Consequatur qui non et ex et delectus nostrum. Impedit dolores aut. Molestiae et ipsa aperiam. Corrupti hic nostrum dolore in itaque inventore quia ut dolores.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 97.32m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Pariatur delectus consequatur."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7919),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7922),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7922),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7922),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7923),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7923),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7923),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7923),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7924),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GiftCardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceReduction")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderState")
                        .HasColumnType("integer");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 318, DateTimeKind.Utc).AddTicks(5899),
                            CustomerEmail = "Audrey_Kessler@gmail.com",
                            CustomerName = "Audrey Kessler",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 318, DateTimeKind.Utc).AddTicks(9645),
                            CustomerEmail = "Vanessa6@hotmail.com",
                            CustomerName = "Vanessa Vandervort",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(984),
                            CustomerEmail = "Teresa_Torp@gmail.com",
                            CustomerName = "Teresa Torp",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(1859),
                            CustomerEmail = "Susie_Denesik@hotmail.com",
                            CustomerName = "Susie Denesik",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(2665),
                            CustomerEmail = "Jeffrey_Monahan@hotmail.com",
                            CustomerName = "Jeffrey Monahan",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(3383),
                            CustomerEmail = "Felix_McGlynn@gmail.com",
                            CustomerName = "Felix McGlynn",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 4,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(4194),
                            CustomerEmail = "Elmer46@gmail.com",
                            CustomerName = "Elmer Lindgren",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(4928),
                            CustomerEmail = "Wanda.Langworth@gmail.com",
                            CustomerName = "Wanda Langworth",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(5616),
                            CustomerEmail = "Margarita64@yahoo.com",
                            CustomerName = "Margarita Schuppe",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(6396),
                            CustomerEmail = "Bernice.Schultz7@gmail.com",
                            CustomerName = "Bernice Schultz",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 2,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(7080),
                            CustomerEmail = "Darla_Durgan75@hotmail.com",
                            CustomerName = "Darla Durgan",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(7761),
                            CustomerEmail = "Gregg.McClure49@gmail.com",
                            CustomerName = "Gregg McClure",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(8475),
                            CustomerEmail = "Sandra58@hotmail.com",
                            CustomerName = "Sandra Pfeffer",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(9171),
                            CustomerEmail = "Stuart_Dickinson@gmail.com",
                            CustomerName = "Stuart Dickinson",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 319, DateTimeKind.Utc).AddTicks(9875),
                            CustomerEmail = "Michael.Kerluke61@gmail.com",
                            CustomerName = "Michael Kerluke",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(5955),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 70.45m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7233),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 46.12m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7293),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 69.26m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7307),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 89.57m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7317),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 65.90m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7325),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 98.35m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7334),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 84.08m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7343),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 21.10m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 9,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7350),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 73.39m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7358),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 71.79m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7366),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 57.36m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7373),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 16.06m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7380),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 17.20m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 14,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7438),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 59.29m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 15,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7446),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 38.30m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 16,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7454),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 55.66m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 17,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7462),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 78.33m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 18,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7470),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 99.79m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 19,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7477),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 29.47m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 20,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7486),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 45.72m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 21,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7493),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 74.85m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 22,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7501),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 70.16m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 23,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7508),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 28.83m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 24,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7516),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 25.04m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 25,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7524),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 26.04m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7531),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 11.03m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 27,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7539),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 30.51m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 28,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7547),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 44.54m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 29,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7555),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 52.90m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 30,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7562),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 55.92m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 31,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7569),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 37.16m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7577),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 25.90m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 33,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7585),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 12.20m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 34,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7592),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 51.34m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7600),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 27.43m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 36,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7607),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 85.03m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 37,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7615),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 15.42m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 38,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7623),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 83.38m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 39,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7631),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 48.98m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 40,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7638),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 58.84m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 41,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7646),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 63.75m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 42,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7654),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 24.06m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 43,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7662),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 70.10m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 44,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7670),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 58.26m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 45,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7677),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 38.60m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7719),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 48.38m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 47,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7727),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 36.25m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 48,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7734),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 62.57m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 49,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7742),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 64.30m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 50,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 321, DateTimeKind.Utc).AddTicks(7750),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 77.37m,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Hic ipsa accusamus fuga corporis minus et minus. Explicabo voluptatibus et. Ea qui amet. Consequatur ea et nemo.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 309, DateTimeKind.Utc).AddTicks(9605),
                            IsDeleted = false,
                            Name = "Wilderman, Reichert and O'Connell"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Reprehenderit ratione omnis tempore doloremque cumque dicta at facilis. Cumque alias odit et sed amet architecto odit eum dicta. Natus aut et sed perspiciatis modi labore placeat quam fugiat. Dolor iste nulla ratione non iste deserunt aspernatur ab. Facere reprehenderit ad ipsum voluptatum sint provident aut repudiandae. Consequuntur dignissimos eos tempore omnis temporibus aut fugit.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 310, DateTimeKind.Utc).AddTicks(349),
                            IsDeleted = false,
                            Name = "Schumm and Sons"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Esse eius fugit earum. Occaecati iure aut dignissimos quaerat sed et commodi et. Tempora saepe quis animi qui et omnis error in. Eum perferendis sit accusantium et harum nesciunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 310, DateTimeKind.Utc).AddTicks(743),
                            IsDeleted = false,
                            Name = "Windler - Zieme"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Aliquid et aut veniam ullam omnis. Rerum voluptas dolores tempora sint consequatur ab laboriosam. Natus ex labore quia repellendus. Id corporis veritatis.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 310, DateTimeKind.Utc).AddTicks(957),
                            IsDeleted = false,
                            Name = "Zemlak Group"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Neque in odit repellendus dicta maiores. Doloremque ad dolor quia sapiente fugit minima aliquid quo. Ullam adipisci odit amet culpa asperiores nostrum. Suscipit qui eum est aut cum officiis iste doloremque. Est enim commodi quia nihil eaque similique laboriosam. A voluptate dolorem perspiciatis.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 310, DateTimeKind.Utc).AddTicks(1138),
                            IsDeleted = false,
                            Name = "Wisozk - Jenkins"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 5,
                            Comment = "Ipsam dignissimos dolorem et delectus.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(7301),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BookId = 1,
                            Comment = "Rem et id officiis.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(8766),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 3,
                            BookId = 9,
                            Comment = "Culpa ducimus nostrum sapiente quisquam adipisci consequuntur.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(8858),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BookId = 9,
                            Comment = "Quaerat debitis omnis voluptatem delectus ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(8971),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 4,
                            Comment = "Ut ea tempora eos assumenda qui quas dolorem praesentium.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9018),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 6,
                            BookId = 15,
                            Comment = "Sapiente quis voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9077),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 7,
                            BookId = 16,
                            Comment = "Quo aliquam omnis quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9107),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            BookId = 19,
                            Comment = "Assumenda ratione sequi aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9131),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 9,
                            BookId = 12,
                            Comment = "Cumque aut aliquid qui error eum aut asperiores sit inventore.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9147),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            BookId = 3,
                            Comment = "Ut recusandae impedit sint sunt et odit et consequatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9179),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            BookId = 14,
                            Comment = "Et eligendi harum eum quibusdam saepe cumque doloremque.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9212),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 12,
                            BookId = 3,
                            Comment = "Reiciendis natus est qui sunt qui rerum qui omnis.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9269),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 13,
                            BookId = 2,
                            Comment = "Consequatur eos possimus sed dicta odit maiores explicabo ducimus praesentium.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9298),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 14,
                            BookId = 16,
                            Comment = "Laborum magnam enim quo nulla aperiam et dicta sed voluptatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9327),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            BookId = 11,
                            Comment = "Officia quidem officiis molestiae quae.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9358),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            BookId = 4,
                            Comment = "Aut doloremque ut ducimus aut non quasi et eaque cumque.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9376),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 17,
                            BookId = 17,
                            Comment = "Aut neque maxime voluptas sint unde et.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9409),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 18,
                            BookId = 15,
                            Comment = "Maiores sunt quibusdam ab autem voluptas nulla.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9433),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 7,
                            Comment = "Id maxime qui autem dolore.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9488),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 20,
                            BookId = 1,
                            Comment = "Quis aliquam aspernatur blanditiis dolor voluptas optio et odit.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9509),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 21,
                            BookId = 5,
                            Comment = "Nemo voluptates odit cupiditate vel nihil.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9536),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 22,
                            BookId = 9,
                            Comment = "Provident eligendi quo quis aut eligendi voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9558),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 23,
                            BookId = 5,
                            Comment = "Commodi illum ducimus eligendi optio distinctio qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9579),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 24,
                            BookId = 3,
                            Comment = "Consequatur incidunt tenetur totam.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9602),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 25,
                            BookId = 11,
                            Comment = "Omnis temporibus non corporis cum sit fuga architecto.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9618),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 26,
                            BookId = 3,
                            Comment = "Doloribus ratione eaque.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9642),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 27,
                            BookId = 3,
                            Comment = "Quis veritatis soluta tempora rerum soluta rerum et suscipit.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9658),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 28,
                            BookId = 7,
                            Comment = "Eum corrupti aut quia ut perspiciatis dicta deserunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9701),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 29,
                            BookId = 9,
                            Comment = "Distinctio a et omnis officia culpa error.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9726),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 30,
                            BookId = 18,
                            Comment = "Deleniti quo non vel ea sint tempora.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9749),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 31,
                            BookId = 9,
                            Comment = "Consequatur odio dolor autem optio corporis omnis autem.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9772),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 32,
                            BookId = 8,
                            Comment = "Quaerat sapiente ipsum saepe id sed ad non in.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9795),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 33,
                            BookId = 3,
                            Comment = "Ab nesciunt perferendis recusandae.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9822),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 34,
                            BookId = 10,
                            Comment = "Voluptatibus voluptatem voluptatem qui cupiditate voluptas delectus dolor.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9837),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 35,
                            BookId = 1,
                            Comment = "Consequuntur asperiores minus fugit.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9946),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 36,
                            BookId = 12,
                            Comment = "Velit accusantium et et.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9963),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 37,
                            BookId = 16,
                            Comment = "Cumque autem consequatur molestias esse.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9979),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 38,
                            BookId = 12,
                            Comment = "Voluptates odit odio enim aut et et sit.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 313, DateTimeKind.Utc).AddTicks(9998),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 39,
                            BookId = 20,
                            Comment = "Ipsam velit aut voluptas qui repellat rerum atque soluta.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(21),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 40,
                            BookId = 9,
                            Comment = "Quibusdam dolores autem itaque aut qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(47),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 41,
                            BookId = 12,
                            Comment = "Delectus vel dignissimos.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(67),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 42,
                            BookId = 8,
                            Comment = "Vel dolores maxime aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(80),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 43,
                            BookId = 6,
                            Comment = "Molestias libero eaque voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(136),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 44,
                            BookId = 11,
                            Comment = "Aperiam eveniet nam illo nulla autem.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(154),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 45,
                            BookId = 3,
                            Comment = "Illum ut ab ipsam deserunt necessitatibus sed consequuntur.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(175),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 13,
                            Comment = "Ipsam error voluptatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(202),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 47,
                            BookId = 17,
                            Comment = "Error ea vel dignissimos porro est harum velit.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(214),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 48,
                            BookId = 11,
                            Comment = "Quia laboriosam officiis fugiat animi assumenda suscipit similique placeat dolorem.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(237),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 49,
                            BookId = 1,
                            Comment = "Debitis enim ea adipisci repellendus voluptate vel aut esse consequatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(263),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 50,
                            BookId = 8,
                            Comment = "Ea natus sit et.",
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 314, DateTimeKind.Utc).AddTicks(290),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b9c3be38-82d1-488e-b809-94116487359b",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "279f6bf1-473a-4bb9-a299-1d42ed17aab3",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e26b9886-3a64-4ae4-9537-62556e874c37",
                            Email = "Price_Leannon26@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Orion Marks",
                            PhoneNumber = "(943) 237-3763 x6647",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0962ea58-f8b5-43f1-9c72-76e7dd30f18c",
                            TwoFactorEnabled = false,
                            UserName = "Price_Leannon26@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "62549ae6-6e00-4944-a66c-7cff204cec45",
                            Email = "Amie57@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Richie Rice",
                            PhoneNumber = "637.421.0048",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "de290619-08b5-4d08-9096-ae333b6ab060",
                            TwoFactorEnabled = false,
                            UserName = "Amie57@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "55d7046e-6d76-4275-b0c4-88c3651bdf65",
                            Email = "Samanta.Bruen61@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Emmy Wintheiser",
                            PhoneNumber = "782-255-1625 x539",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0faba5f1-0bd6-4cd8-9b97-1ef714e739b1",
                            TwoFactorEnabled = false,
                            UserName = "Samanta.Bruen61@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "daed7a6b-972e-4b16-9e2c-2e1296ba0cf4",
                            Email = "Friedrich_Robel@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Wanda Ledner",
                            PhoneNumber = "409-766-6109",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a75b9401-8e02-48c5-b4d5-d61c05c4bc3c",
                            TwoFactorEnabled = false,
                            UserName = "Friedrich_Robel@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1b5a1f37-ed0e-4c73-9aa3-16ae5a2e31f2",
                            Email = "Stephon55@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Mina MacGyver",
                            PhoneNumber = "850-733-1704 x451",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e5f9f044-a69a-4fa4-b555-3bf31fb7dafd",
                            TwoFactorEnabled = false,
                            UserName = "Stephon55@hotmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "767c930b-3d73-414c-a31b-d7700cfb1e5a",
                            Email = "Rylan14@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Golden Lind",
                            PhoneNumber = "436.963.4479 x9238",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a3d4d19-0812-4c13-a412-d2a1e8b0156c",
                            TwoFactorEnabled = false,
                            UserName = "Rylan14@yahoo.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e9c585f7-ca1b-443e-b1ff-0c66ba8b1699",
                            Email = "Jacky65@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Jackson Hyatt",
                            PhoneNumber = "1-601-719-5364",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63d42e57-91a4-4aeb-b478-1ededbe525ca",
                            TwoFactorEnabled = false,
                            UserName = "Jacky65@hotmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d4825e9-530f-4624-84ba-db9b120a57f4",
                            Email = "Janick.Wiegand@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Jody Predovic",
                            PhoneNumber = "(362) 321-7035 x49347",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7fb966f1-c8c8-4547-9233-0b2cd2613fad",
                            TwoFactorEnabled = false,
                            UserName = "Janick.Wiegand@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b28b1c3-b0e1-43b5-9c44-ddf77328b21a",
                            Email = "Arely.Johnson21@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Skyla White",
                            PhoneNumber = "1-632-741-3487",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "02ef7adb-1f9f-48a6-aa35-8e705fc19c8f",
                            TwoFactorEnabled = false,
                            UserName = "Arely.Johnson21@gmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4337),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4525),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4533),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 4,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4536),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 5,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4540),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4543),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4546),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4549),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 9,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4552),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4555),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4558),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4562),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 13,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4565),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 14,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4568),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 15,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4570),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4573),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4576),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 18,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4579),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 19,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4582),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 20,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4585),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 21,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4588),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 22,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4591),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 23,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4594),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 24,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4597),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 25,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4643),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 26,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4646),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 27,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4650),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 28,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4653),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 29,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4656),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 30,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 10, 21, 12, 315, DateTimeKind.Utc).AddTicks(4659),
                            IsDeleted = false,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.HasOne("DataAccessLayer.Model.GiftCard", "GiftCard")
                        .WithMany("Coupons")
                        .HasForeignKey("GiftCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("GiftCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
