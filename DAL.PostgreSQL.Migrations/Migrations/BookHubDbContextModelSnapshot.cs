// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    partial class BookHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Reillyville",
                            Country = "Montenegro",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(1837),
                            IsDeleted = false,
                            State = "Kentucky",
                            Street = "3830 Altenwerth Cliffs",
                            ZipCode = "48046-5234"
                        },
                        new
                        {
                            Id = 2,
                            City = "Port Fayville",
                            Country = "Belize",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(2401),
                            IsDeleted = false,
                            State = "Wyoming",
                            Street = "551 Lehner Union",
                            ZipCode = "51471-9200"
                        },
                        new
                        {
                            Id = 3,
                            City = "East Hulda",
                            Country = "Cameroon",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(2538),
                            IsDeleted = false,
                            State = "Minnesota",
                            Street = "954 Keanu Extension",
                            ZipCode = "44782-2772"
                        },
                        new
                        {
                            Id = 4,
                            City = "South Jazmyn",
                            Country = "Guernsey",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(2720),
                            IsDeleted = false,
                            State = "Wyoming",
                            Street = "48554 Jeremy Ferry",
                            ZipCode = "00882-5335"
                        },
                        new
                        {
                            Id = 5,
                            City = "Port Marjorie",
                            Country = "Ukraine",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(2856),
                            IsDeleted = false,
                            State = "Hawaii",
                            Street = "199 Lisandro Shore",
                            ZipCode = "94889-2246"
                        },
                        new
                        {
                            Id = 6,
                            City = "Adrainville",
                            Country = "Philippines",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(2983),
                            IsDeleted = false,
                            State = "Massachusetts",
                            Street = "186 Helene Tunnel",
                            ZipCode = "06021-1266"
                        },
                        new
                        {
                            Id = 7,
                            City = "West Lydiaton",
                            Country = "Georgia",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(3109),
                            IsDeleted = false,
                            State = "New York",
                            Street = "953 McCullough Gardens",
                            ZipCode = "38250"
                        },
                        new
                        {
                            Id = 8,
                            City = "Port Kylaburgh",
                            Country = "Samoa",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(3289),
                            IsDeleted = false,
                            State = "Louisiana",
                            Street = "923 Weissnat Mission",
                            ZipCode = "63772"
                        },
                        new
                        {
                            Id = 9,
                            City = "Terryview",
                            Country = "Bosnia and Herzegovina",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(3433),
                            IsDeleted = false,
                            State = "North Dakota",
                            Street = "5624 Shanelle Rapids",
                            ZipCode = "52326-5940"
                        },
                        new
                        {
                            Id = 10,
                            City = "South Blairshire",
                            Country = "Panama",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(3555),
                            IsDeleted = false,
                            State = "Hawaii",
                            Street = "313 Torp Spurs",
                            ZipCode = "47668"
                        },
                        new
                        {
                            Id = 11,
                            City = "Nolanchester",
                            Country = "Oman",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(3656),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "12007 Judy Ferry",
                            ZipCode = "35494"
                        },
                        new
                        {
                            Id = 12,
                            City = "Port Rosaliabury",
                            Country = "Greenland",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(3838),
                            IsDeleted = false,
                            State = "Kansas",
                            Street = "7144 Mayer Branch",
                            ZipCode = "93709"
                        },
                        new
                        {
                            Id = 13,
                            City = "Lincolntown",
                            Country = "Nicaragua",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(3991),
                            IsDeleted = false,
                            State = "Nevada",
                            Street = "60544 Dillan Shores",
                            ZipCode = "22298"
                        },
                        new
                        {
                            Id = 14,
                            City = "Cristalville",
                            Country = "Peru",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(4112),
                            IsDeleted = false,
                            State = "Oregon",
                            Street = "65327 Swift Way",
                            ZipCode = "43062"
                        },
                        new
                        {
                            Id = 15,
                            City = "Lake Ernestinaland",
                            Country = "Falkland Islands (Malvinas)",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 680, DateTimeKind.Utc).AddTicks(4244),
                            IsDeleted = false,
                            State = "Florida",
                            Street = "92384 Lauriane Branch",
                            ZipCode = "99470"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Soluta quaerat ad. Maxime voluptates quasi deleniti. Rem iusto explicabo perferendis. Nihil maiores velit aspernatur voluptatum dignissimos vel non voluptates.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(4840),
                            IsDeleted = false,
                            Name = "Jovan Hermann"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Voluptas ipsam omnis praesentium. Nam nihil quod sunt voluptatem ut eligendi voluptas enim. Beatae consectetur illo.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5189),
                            IsDeleted = false,
                            Name = "Leanna Mills"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Sint impedit perspiciatis et qui molestiae et necessitatibus et. Qui saepe possimus deserunt dolor. Modi rerum iure iste et veniam.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5270),
                            IsDeleted = false,
                            Name = "Cory Glover"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Saepe corrupti qui tenetur quia esse doloribus impedit aperiam. Consequatur eum magni laboriosam ea. Voluptas vitae voluptatem. Qui reiciendis incidunt minima harum expedita. Dolorum quis eum ut et rem.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5355),
                            IsDeleted = false,
                            Name = "Liliane Jones"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Non quia repellat sit rerum exercitationem et. Est necessitatibus aliquam ullam dolor et. Rem est necessitatibus omnis sed in.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5548),
                            IsDeleted = false,
                            Name = "Dagmar Casper"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Occaecati quo quis amet enim ex. Non earum mollitia eligendi esse. Adipisci veniam quo pariatur. Ratione et totam iure quia voluptatem ea. Enim blanditiis sapiente. Repudiandae eos eaque deleniti non.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5612),
                            IsDeleted = false,
                            Name = "Johnny Runte"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Soluta sint et qui voluptatem possimus. Enim pariatur perferendis. Excepturi omnis sint illum sunt. Et doloremque dolorum nulla vel modi dolorem libero est. Temporibus et suscipit ad. Vitae alias et dignissimos.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5732),
                            IsDeleted = false,
                            Name = "Korbin Turner"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Aliquam molestias neque architecto. Nesciunt commodi error qui dolores totam. Inventore id omnis culpa.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5846),
                            IsDeleted = false,
                            Name = "Rod Batz"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Quasi omnis laboriosam et quia rerum nisi dolores dicta nemo. Nam ut placeat veritatis eius inventore omnis odit. Illum culpa quaerat non numquam nostrum beatae aliquam voluptatem nemo.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5898),
                            IsDeleted = false,
                            Name = "Samara O'Keefe"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Ipsa itaque sit ratione ratione praesentium debitis. Nobis ut aliquam veniam quo animi voluptatum quisquam. Eos consequatur nobis dignissimos voluptatem voluptatem distinctio.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 673, DateTimeKind.Utc).AddTicks(5970),
                            IsDeleted = false,
                            Name = "Charley Reinger"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(77),
                            Description = "Tenetur ad et voluptas quia. Et asperiores laboriosam aperiam incidunt minima tempore ut. Debitis libero nulla quo sunt et. Nemo est iure necessitatibus consectetur culpa aut qui praesentium. Quia cumque mollitia dicta fuga qui. Eos adipisci exercitationem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 44.94m,
                            PrimaryGenreId = 7,
                            PublisherId = 4,
                            Title = "Totam vel dolorem."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(1621),
                            Description = "Aut eius natus amet qui enim voluptas maxime ullam totam. Quis a et aut inventore qui asperiores eum. Ducimus quae aut natus quae unde pariatur asperiores adipisci quas. Quia fugiat quo qui quisquam aut consequuntur aliquam labore ut. Qui tempora consectetur aut quisquam error sit pariatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 42.65m,
                            PrimaryGenreId = 2,
                            PublisherId = 4,
                            Title = "Voluptatem qui voluptates."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(1829),
                            Description = "Dicta natus libero iure. Earum illo in consequatur temporibus. Deserunt ea minima est impedit.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 70.33m,
                            PrimaryGenreId = 5,
                            PublisherId = 1,
                            Title = "Optio exercitationem voluptas."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(1904),
                            Description = "Voluptates rem quisquam vel voluptates non commodi ipsa. Quas maiores perferendis qui rerum rem maiores illo ipsa. In molestiae error. Autem voluptatem deleniti dolorum repellat velit quod. Accusamus aut perferendis neque sed. Dolore repudiandae ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 57.51m,
                            PrimaryGenreId = 5,
                            PublisherId = 2,
                            Title = "Ut dolorem veniam."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(2002),
                            Description = "Sint sunt incidunt et vel autem corrupti. Ex eligendi error sint est omnis in rerum quisquam. Ipsam commodi recusandae aliquam minima excepturi maxime nulla sapiente doloremque. Et quisquam minima. Ut consequuntur veniam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 23.81m,
                            PrimaryGenreId = 1,
                            PublisherId = 1,
                            Title = "Laudantium est quia."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(2169),
                            Description = "Dolore debitis excepturi quaerat exercitationem nemo officiis est rerum quia. Officia autem nesciunt autem maiores. Sed nihil enim quia et atque et molestias. Quos quia esse culpa aut quisquam natus. Voluptas asperiores doloribus. In officiis modi quia.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 65.77m,
                            PrimaryGenreId = 3,
                            PublisherId = 4,
                            Title = "At deleniti ullam."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(2310),
                            Description = "Sed nisi at. Doloribus aut dolores sapiente. Optio sunt aspernatur laboriosam quos mollitia. Quaerat laborum enim ea explicabo culpa. At est doloribus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 17.52m,
                            PrimaryGenreId = 7,
                            PublisherId = 1,
                            Title = "Voluptatem debitis cum."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(4834),
                            Description = "Voluptas deleniti recusandae cupiditate rem et deserunt delectus et. Eius corporis libero eos eum cumque. Perferendis magnam sit ad ratione quis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 55.76m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Animi et sunt."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(4902),
                            Description = "Laboriosam quos velit reprehenderit inventore aut. Voluptates deleniti aut repudiandae qui impedit ea. Minima quas alias doloribus. Omnis minima sunt quisquam sed vel doloremque. Qui et enim. Aut pariatur quibusdam tempore.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 25.20m,
                            PrimaryGenreId = 3,
                            PublisherId = 5,
                            Title = "Repellat atque nobis."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5018),
                            Description = "Deserunt et architecto recusandae in. Perferendis qui consequuntur voluptas atque. Et culpa cumque voluptas nemo.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 39.12m,
                            PrimaryGenreId = 4,
                            PublisherId = 1,
                            Title = "Blanditiis cum cum."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5068),
                            Description = "Dicta et molestias perspiciatis non repellendus consequuntur reiciendis eum quia. Cum itaque qui deserunt sed ratione impedit eum. Omnis rerum et cum qui ut. Velit est dolores.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 12.14m,
                            PrimaryGenreId = 6,
                            PublisherId = 4,
                            Title = "Temporibus voluptas aliquam."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5167),
                            Description = "Quaerat sequi dicta maiores reiciendis velit quis aut. Et non nobis enim officia distinctio optio. Modi ut est. Eaque vel ut non optio nisi autem hic rerum. Placeat eaque atque et ut animi. Sit omnis est autem eius eius.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 79.53m,
                            PrimaryGenreId = 6,
                            PublisherId = 1,
                            Title = "Ut ipsa ullam."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5281),
                            Description = "Qui pariatur voluptate minima velit. A ab consequuntur tempore ut animi. Maiores fugiat quo et saepe ducimus deserunt qui culpa quibusdam. Sapiente et sit placeat voluptatem ad ex sed culpa.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 24.69m,
                            PrimaryGenreId = 4,
                            PublisherId = 3,
                            Title = "Aliquam repudiandae est."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5364),
                            Description = "Minus at sed tenetur accusamus. Velit assumenda dignissimos laboriosam. Impedit facere itaque.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 17.88m,
                            PrimaryGenreId = 6,
                            PublisherId = 3,
                            Title = "Est sit hic."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5492),
                            Description = "Eius sapiente officia rerum. Dolore quis tenetur minus aut. Voluptatum iste in et voluptas et ipsam. Ullam voluptas fuga. Quis in neque sunt velit ullam ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 54.86m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Natus alias est."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5559),
                            Description = "Hic possimus tempora cum sit consequatur numquam illo eligendi. Sint saepe ex. Doloremque aut excepturi quia voluptatem distinctio. Saepe quas voluptatibus perspiciatis est sit dignissimos aut veritatis incidunt.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 55.23m,
                            PrimaryGenreId = 1,
                            PublisherId = 3,
                            Title = "A ad excepturi."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5647),
                            Description = "Provident corrupti nisi assumenda enim. Adipisci cumque sapiente dicta sed nobis. Dignissimos quia ut sunt delectus quo amet quod optio. Non velit quis non.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 17.87m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Deserunt sunt aut."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5708),
                            Description = "Est ullam exercitationem illo voluptatem voluptatem vitae repellat. Officiis quibusdam optio est quia. Maxime consequatur voluptatum neque ut deserunt voluptatibus deserunt excepturi placeat.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 11.15m,
                            PrimaryGenreId = 3,
                            PublisherId = 1,
                            Title = "Est pariatur suscipit."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5828),
                            Description = "Est nam et odit. Nam nobis et. Qui temporibus in at maiores voluptatem sunt consequatur temporibus sed.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 58.92m,
                            PrimaryGenreId = 2,
                            PublisherId = 4,
                            Title = "Vero aliquid vel."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 676, DateTimeKind.Utc).AddTicks(5880),
                            Description = "Libero minima et necessitatibus harum facilis laudantium molestias. Quia ipsum dolores voluptatem non ut. Iusto incidunt adipisci recusandae hic autem laborum voluptas quia. Est quae et asperiores tempora accusamus enim enim. Quia eos dolor cupiditate autem. Suscipit repellendus magnam deleniti consequuntur corrupti.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 25.08m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Repellat sequi qui."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1233),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1234),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1235),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1235),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1235),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1236),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1236),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1236),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1236),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GiftCardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceReduction")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderState")
                        .HasColumnType("integer");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 681, DateTimeKind.Utc).AddTicks(6262),
                            CustomerEmail = "Edgar35@gmail.com",
                            CustomerName = "Edgar Goldner",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 681, DateTimeKind.Utc).AddTicks(9487),
                            CustomerEmail = "Lisa.Feil@hotmail.com",
                            CustomerName = "Lisa Feil",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(386),
                            CustomerEmail = "Beverly.Carroll@gmail.com",
                            CustomerName = "Beverly Carroll",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(972),
                            CustomerEmail = "Elena_Beer42@hotmail.com",
                            CustomerName = "Elena Beer",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(1494),
                            CustomerEmail = "Lola.Stiedemann26@hotmail.com",
                            CustomerName = "Lola Stiedemann",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(2111),
                            CustomerEmail = "Janie0@yahoo.com",
                            CustomerName = "Janie Pfeffer",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 4,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(2596),
                            CustomerEmail = "Kyle_Deckow81@yahoo.com",
                            CustomerName = "Kyle Deckow",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(3046),
                            CustomerEmail = "Francis52@hotmail.com",
                            CustomerName = "Francis Bechtelar",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(3606),
                            CustomerEmail = "Bridget_Farrell61@yahoo.com",
                            CustomerName = "Bridget Farrell",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(4149),
                            CustomerEmail = "Noel_Ruecker96@hotmail.com",
                            CustomerName = "Noel Ruecker",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(4663),
                            CustomerEmail = "Gilbert.Fay@gmail.com",
                            CustomerName = "Gilbert Fay",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 4,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(5172),
                            CustomerEmail = "Rodolfo.Hahn33@gmail.com",
                            CustomerName = "Rodolfo Hahn",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(6099),
                            CustomerEmail = "Alexandra.Kulas36@gmail.com",
                            CustomerName = "Alexandra Kulas",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(6649),
                            CustomerEmail = "Sophia68@hotmail.com",
                            CustomerName = "Sophia Swift",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 682, DateTimeKind.Utc).AddTicks(7245),
                            CustomerEmail = "Lula.Gleichner@gmail.com",
                            CustomerName = "Lula Gleichner",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 683, DateTimeKind.Utc).AddTicks(9705),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 43.20m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(694),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 88.73m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(732),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 52.19m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(743),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 98.24m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(751),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 68.92m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(759),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 25.33m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 7,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(765),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 45.53m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 8,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(772),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 65.16m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(778),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 48.46m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(785),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 56.93m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(792),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 17.11m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(798),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 51.88m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 13,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(804),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 81.19m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 14,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(811),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 88.22m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(818),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 30.39m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 16,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(826),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 34.91m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(833),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 76.29m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(839),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 59.11m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 19,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(846),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 69.81m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 20,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(852),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 49.49m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 21,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(859),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 74.84m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 22,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(866),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 28.61m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 23,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(872),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 28.35m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 24,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(879),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 73.00m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 25,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(886),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 70.22m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 26,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(893),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 98.98m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 27,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(900),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 97.30m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 28,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(907),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 82.26m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(913),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 88.93m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 30,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(920),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 74.80m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 31,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(925),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 48.60m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(982),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 71.51m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 33,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(990),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 91.65m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 34,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(996),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 17.60m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1003),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 61.09m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 36,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1010),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 19.83m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 37,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1016),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 60.61m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 38,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1022),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 42.25m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1029),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 44.83m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 40,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1035),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 88.21m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 41,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1042),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 29.68m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 42,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1048),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 68.41m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 43,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1054),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 60.95m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 44,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1060),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 90.16m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 45,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1067),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 57.47m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1073),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 10.51m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1079),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 65.87m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 48,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1086),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 84.42m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 49,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1092),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 93.78m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 50,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 684, DateTimeKind.Utc).AddTicks(1098),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 18.33m,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Quam repudiandae porro ipsam. Error consectetur nesciunt odio et sed quia omnis debitis. Sequi sint tempora quia aspernatur quisquam omnis corporis error. Quia et doloremque in nihil illo. Nihil enim nisi dolorum quo. Facilis nesciunt quis debitis.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 674, DateTimeKind.Utc).AddTicks(7546),
                            IsDeleted = false,
                            Name = "Feest - Dickens"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Et quas aut provident facilis eligendi aperiam. Mollitia ullam eius minus eum dolorem sunt commodi laboriosam rerum. Voluptatibus aut inventore aperiam est beatae cum sit nostrum ducimus. Expedita error minima qui et dolorum temporibus cum dolorum.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 674, DateTimeKind.Utc).AddTicks(8116),
                            IsDeleted = false,
                            Name = "Grady Inc"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Qui non magnam qui iure voluptates. Dolores sed et debitis. Quod suscipit iusto molestiae.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 674, DateTimeKind.Utc).AddTicks(8336),
                            IsDeleted = false,
                            Name = "Dare - Schroeder"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Et quibusdam non minus modi tenetur beatae. Quis non ut aut debitis atque explicabo et mollitia ad. Quo nesciunt delectus.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 674, DateTimeKind.Utc).AddTicks(8478),
                            IsDeleted = false,
                            Name = "Boyle and Sons"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Aut accusantium laborum vero. Itaque aut voluptas est assumenda consequatur. Et eum totam eius nobis quam. Iure perspiciatis corporis cumque asperiores. Sequi voluptas et minima tenetur.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 674, DateTimeKind.Utc).AddTicks(8619),
                            IsDeleted = false,
                            Name = "Rogahn - Adams"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 12,
                            Comment = "Laborum culpa nostrum quo cumque necessitatibus est hic quo alias.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(7539),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 2,
                            BookId = 16,
                            Comment = "Minus quaerat voluptatem a ut pariatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8465),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookId = 10,
                            Comment = "Praesentium ipsum consequatur distinctio quae et aut blanditiis.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8595),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            Comment = "Impedit voluptatem quae et et sit.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8620),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            BookId = 18,
                            Comment = "Velit ea natus enim eveniet dolor est.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8637),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 5,
                            Comment = "Iste aut distinctio.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8663),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            BookId = 9,
                            Comment = "Iste est et dolorum rem ullam.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8674),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            BookId = 16,
                            Comment = "Id tempore quia voluptatem veritatis qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8690),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            BookId = 3,
                            Comment = "Repellat voluptatem vero et quia repudiandae maxime earum officiis.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8709),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 10,
                            BookId = 1,
                            Comment = "Quia nihil tenetur suscipit nostrum sint.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8728),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 11,
                            BookId = 2,
                            Comment = "Provident quia aliquid quia incidunt ut ab ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8771),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 12,
                            BookId = 16,
                            Comment = "Sit voluptatem corporis cumque aliquam maxime ut rerum.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8791),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 13,
                            BookId = 19,
                            Comment = "Doloribus explicabo ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8810),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 8,
                            Comment = "Labore eos nisi sequi.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8823),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            BookId = 14,
                            Comment = "Eius et tenetur sit sed qui id maiores et quaerat.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8836),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 16,
                            BookId = 19,
                            Comment = "Maiores ipsam cupiditate.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8856),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 17,
                            BookId = 2,
                            Comment = "Voluptas rerum a vero tempore placeat qui dolores.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8868),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 18,
                            BookId = 19,
                            Comment = "Aut quo occaecati.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8887),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 19,
                            BookId = 12,
                            Comment = "Quaerat quos rerum ipsa culpa tenetur molestias voluptatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8899),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 20,
                            BookId = 8,
                            Comment = "Explicabo ipsa consequatur rem voluptate velit quia amet.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8944),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 21,
                            BookId = 18,
                            Comment = "Quaerat ipsum ex et quo dolor ab natus possimus.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8962),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 22,
                            BookId = 19,
                            Comment = "Consequatur voluptatem similique.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8981),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 23,
                            BookId = 1,
                            Comment = "Totam quis aut accusamus alias iusto voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(8994),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 24,
                            BookId = 17,
                            Comment = "Ea voluptatem illo et quasi ipsum.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9013),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 25,
                            BookId = 8,
                            Comment = "Perspiciatis eius voluptatem minus.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9030),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 26,
                            BookId = 1,
                            Comment = "Sit eveniet enim dolorem et fuga sint excepturi iure.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9044),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 27,
                            BookId = 3,
                            Comment = "Quia ut ipsa voluptatem quae dolorem maiores eos omnis.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9065),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 28,
                            BookId = 8,
                            Comment = "Quo expedita ad consequatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9116),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 29,
                            BookId = 8,
                            Comment = "Optio commodi et modi voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9128),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 30,
                            BookId = 10,
                            Comment = "Dolores deleniti praesentium nam hic vitae.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9143),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 31,
                            BookId = 8,
                            Comment = "Dolore molestiae recusandae possimus a.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9158),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 32,
                            BookId = 7,
                            Comment = "Quisquam eligendi velit culpa maxime.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9172),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 33,
                            BookId = 18,
                            Comment = "Quos ab est.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9186),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 34,
                            BookId = 14,
                            Comment = "Laborum nihil voluptas itaque culpa.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9197),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 35,
                            BookId = 11,
                            Comment = "Deserunt quod nulla cum natus iure at optio.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9211),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 36,
                            BookId = 16,
                            Comment = "Eos numquam tenetur ut rerum et temporibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9256),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 37,
                            BookId = 20,
                            Comment = "Omnis corrupti quas ut in qui dignissimos eos nisi excepturi.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9274),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 38,
                            BookId = 15,
                            Comment = "Dolores consequatur quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9295),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 39,
                            BookId = 8,
                            Comment = "Ut quia earum voluptate nostrum dignissimos corporis.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9306),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 40,
                            BookId = 8,
                            Comment = "At illum exercitationem quam quis commodi assumenda quae ratione.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9323),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 41,
                            BookId = 18,
                            Comment = "Ducimus non nam consequuntur consectetur voluptas maiores ut velit sapiente.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9342),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 42,
                            BookId = 17,
                            Comment = "Necessitatibus et unde fuga odit voluptas eos.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9365),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 43,
                            BookId = 16,
                            Comment = "Qui voluptates ut nam explicabo.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9382),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 44,
                            BookId = 4,
                            Comment = "Impedit ex dolore autem aperiam laborum occaecati officia.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9424),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 45,
                            BookId = 12,
                            Comment = "Velit voluptatem fugit voluptate vel quidem vitae iusto et quo.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9442),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 4,
                            Comment = "Maiores quisquam aut perspiciatis reprehenderit est beatae.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9465),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 47,
                            BookId = 10,
                            Comment = "Id consequuntur distinctio rerum omnis.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9483),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 48,
                            BookId = 5,
                            Comment = "Praesentium voluptatum quia ex.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9498),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 49,
                            BookId = 11,
                            Comment = "Et adipisci deleniti molestias dolorem nesciunt dicta assumenda.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9512),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 50,
                            BookId = 1,
                            Comment = "Aut qui accusantium voluptas delectus ab harum harum dignissimos.",
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 677, DateTimeKind.Utc).AddTicks(9532),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6db05e06-8981-4295-8ab8-170abc846259",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1b25885b-b021-43e6-b82c-656d9edb3ed9",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5a28b120-68d1-4d5d-be1d-df523f0ab997",
                            Email = "Isabel.King0@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Josefina Veum",
                            PhoneNumber = "(873) 441-8515 x558",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4695dd78-a3ab-4d3e-a151-b78e8bb6ab87",
                            TwoFactorEnabled = false,
                            UserName = "Isabel.King0@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e8c3dec3-fd3a-4c97-8a5f-e63c322d4161",
                            Email = "Elody.Renner82@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Stephanie O'Hara",
                            PhoneNumber = "556.941.1701 x72829",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "78c6364f-84ff-47b3-9663-31db4b3c40f8",
                            TwoFactorEnabled = false,
                            UserName = "Elody.Renner82@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "31b6cdbf-80b7-4d84-8d63-b78e4fe3699e",
                            Email = "Will_Tillman@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Monique Jenkins",
                            PhoneNumber = "231.308.7043",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c35d7880-bfbf-4e16-86aa-a4ef2f0b497d",
                            TwoFactorEnabled = false,
                            UserName = "Will_Tillman@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "17574df5-93af-4bfa-8b4a-fd7815617760",
                            Email = "Lauriane.Brown@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Janick Casper",
                            PhoneNumber = "737.424.3836 x20800",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2b7d1c1e-1cfb-4141-b45d-59086027c96d",
                            TwoFactorEnabled = false,
                            UserName = "Lauriane.Brown@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2274625-a08d-421a-beeb-40d5020a5a38",
                            Email = "Kamron.Kovacek50@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Nayeli Bartell",
                            PhoneNumber = "665.394.5736 x230",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ac2cb385-3327-4710-a529-0a124f7da443",
                            TwoFactorEnabled = false,
                            UserName = "Kamron.Kovacek50@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3e9f5086-d84b-44f4-891e-c29f3b74a035",
                            Email = "Sterling_Doyle@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Corine Hayes",
                            PhoneNumber = "(270) 913-5443",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a82118ca-43ce-4d94-82b7-cf642aaf5415",
                            TwoFactorEnabled = false,
                            UserName = "Sterling_Doyle@gmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9c57ce3b-0f47-4841-8ef4-cf6577763997",
                            Email = "Coleman4@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Ethyl Prohaska",
                            PhoneNumber = "1-801-327-3367",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9872f8c3-4fad-4699-b2e5-12332d34b8de",
                            TwoFactorEnabled = false,
                            UserName = "Coleman4@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d117438a-a1d8-4c8b-a7e4-64a3103f5b07",
                            Email = "Haven.Muller73@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Elvis Rolfson",
                            PhoneNumber = "444-648-9508 x7947",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d7575906-08b7-45bd-837d-e0a67cc30386",
                            TwoFactorEnabled = false,
                            UserName = "Haven.Muller73@hotmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cf5a25ab-7bb1-4ff5-a4b1-b23c0caf119d",
                            Email = "Kaycee.Muller86@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Camilla Mante",
                            PhoneNumber = "688.514.6528 x91770",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d00268b4-d961-42a7-8ad6-ab8de76f2726",
                            TwoFactorEnabled = false,
                            UserName = "Kaycee.Muller86@yahoo.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(518),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(647),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 3,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(652),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(655),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(658),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(661),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(663),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(666),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(669),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(671),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(674),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 12,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(677),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(679),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 14,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(682),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 15,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(684),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 16,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(687),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 17,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(689),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 18,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(723),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 19,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(727),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 20,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(730),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 21,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(732),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 22,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(735),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 23,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(737),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(740),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 25,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(742),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 26,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(745),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 27,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(747),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 28,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(749),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 29,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(752),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 30,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 20, 5, 10, 679, DateTimeKind.Utc).AddTicks(755),
                            IsDeleted = false,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("Coupons")
                        .HasForeignKey("CartId");

                    b.HasOne("DataAccessLayer.Model.GiftCard", "GiftCard")
                        .WithMany("Coupons")
                        .HasForeignKey("GiftCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("Coupons")
                        .HasForeignKey("OrderId");

                    b.Navigation("Cart");

                    b.Navigation("GiftCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("Coupons");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
