// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    partial class BookHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "East Sabrynaberg",
                            Country = "Russian Federation",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(8309),
                            IsDeleted = false,
                            State = "North Dakota",
                            Street = "552 Cronin Terrace",
                            ZipCode = "77651-7231"
                        },
                        new
                        {
                            Id = 2,
                            City = "New Veldabury",
                            Country = "Swaziland",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(8954),
                            IsDeleted = false,
                            State = "Hawaii",
                            Street = "230 Wintheiser Field",
                            ZipCode = "25088-2285"
                        },
                        new
                        {
                            Id = 3,
                            City = "Dejamouth",
                            Country = "Cocos (Keeling) Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(9106),
                            IsDeleted = false,
                            State = "Wisconsin",
                            Street = "400 Janae Gardens",
                            ZipCode = "13432"
                        },
                        new
                        {
                            Id = 4,
                            City = "Jenkinstown",
                            Country = "Guinea",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(9276),
                            IsDeleted = false,
                            State = "Nebraska",
                            Street = "204 Laverne Dale",
                            ZipCode = "60631"
                        },
                        new
                        {
                            Id = 5,
                            City = "Vicentachester",
                            Country = "Turkey",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(9418),
                            IsDeleted = false,
                            State = "Michigan",
                            Street = "5002 Jocelyn Spurs",
                            ZipCode = "45589"
                        },
                        new
                        {
                            Id = 6,
                            City = "Opheliafurt",
                            Country = "Syrian Arab Republic",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(9546),
                            IsDeleted = false,
                            State = "Massachusetts",
                            Street = "509 Barton Shoal",
                            ZipCode = "80916"
                        },
                        new
                        {
                            Id = 7,
                            City = "Port Jeramie",
                            Country = "Maldives",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(9646),
                            IsDeleted = false,
                            State = "Wyoming",
                            Street = "50059 Bayer Walk",
                            ZipCode = "69471-4285"
                        },
                        new
                        {
                            Id = 8,
                            City = "Predovicmouth",
                            Country = "Qatar",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(9774),
                            IsDeleted = false,
                            State = "Hawaii",
                            Street = "65472 Predovic Square",
                            ZipCode = "78724"
                        },
                        new
                        {
                            Id = 9,
                            City = "North Hortensebury",
                            Country = "Barbados",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 614, DateTimeKind.Utc).AddTicks(9893),
                            IsDeleted = false,
                            State = "Washington",
                            Street = "41303 Albertha Club",
                            ZipCode = "34373-2161"
                        },
                        new
                        {
                            Id = 10,
                            City = "North Alaina",
                            Country = "Greece",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 615, DateTimeKind.Utc).AddTicks(27),
                            IsDeleted = false,
                            State = "Kentucky",
                            Street = "855 McClure Course",
                            ZipCode = "80747-8066"
                        },
                        new
                        {
                            Id = 11,
                            City = "Nicolasview",
                            Country = "Bosnia and Herzegovina",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 615, DateTimeKind.Utc).AddTicks(154),
                            IsDeleted = false,
                            State = "Delaware",
                            Street = "45178 Brandy Union",
                            ZipCode = "58762"
                        },
                        new
                        {
                            Id = 12,
                            City = "Gaylordhaven",
                            Country = "Nigeria",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 615, DateTimeKind.Utc).AddTicks(295),
                            IsDeleted = false,
                            State = "Indiana",
                            Street = "623 Gus Islands",
                            ZipCode = "55766-5127"
                        },
                        new
                        {
                            Id = 13,
                            City = "Lake Rosemarie",
                            Country = "Pitcairn Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 615, DateTimeKind.Utc).AddTicks(421),
                            IsDeleted = false,
                            State = "Missouri",
                            Street = "8375 Brakus Estate",
                            ZipCode = "27945-9397"
                        },
                        new
                        {
                            Id = 14,
                            City = "Lake Kieran",
                            Country = "Bangladesh",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 615, DateTimeKind.Utc).AddTicks(566),
                            IsDeleted = false,
                            State = "North Carolina",
                            Street = "1170 Citlalli Point",
                            ZipCode = "77345"
                        },
                        new
                        {
                            Id = 15,
                            City = "Anissamouth",
                            Country = "United States Minor Outlying Islands",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 615, DateTimeKind.Utc).AddTicks(689),
                            IsDeleted = false,
                            State = "Vermont",
                            Street = "811 Smith Stravenue",
                            ZipCode = "12763"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Tempore aliquam ratione quibusdam consequatur corporis est eveniet cum. Sunt eligendi animi minus necessitatibus modi deserunt distinctio distinctio. Doloremque delectus fugit reprehenderit nulla explicabo ut atque. Doloribus dolorem vel autem necessitatibus tenetur omnis eveniet. Ipsam accusamus quos aut dolor natus soluta odio.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 606, DateTimeKind.Utc).AddTicks(8535),
                            IsDeleted = false,
                            Name = "Aracely O'Hara"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Quod nesciunt impedit earum doloremque voluptatem. Repudiandae voluptatem odit. Autem deleniti omnis qui adipisci eligendi. Adipisci quidem voluptatem ut ad eligendi dolore. Error ducimus error nihil est aliquid ex doloremque enim.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 606, DateTimeKind.Utc).AddTicks(9358),
                            IsDeleted = false,
                            Name = "Betty Zulauf"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Facere dolor voluptatem aliquid nisi quia quis. Eos animi recusandae ipsam ad deleniti et possimus non. Voluptatem ipsa a recusandae. Tempora quia non. Debitis voluptatem unde est odio. Aut maiores et vero et.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 606, DateTimeKind.Utc).AddTicks(9656),
                            IsDeleted = false,
                            Name = "Emil Howell"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Reprehenderit sint impedit et et reiciendis ea debitis et. Praesentium facilis iure dolore sit suscipit magnam. Dolor corporis dolores et sed adipisci aliquam ullam nemo sed. Quia accusamus adipisci aliquid. Possimus qui aut sint et sit vel dolorum qui doloribus.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 606, DateTimeKind.Utc).AddTicks(9901),
                            IsDeleted = false,
                            Name = "Rogers Kuhn"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Autem maxime itaque voluptatem. Aliquid quam sequi occaecati dignissimos magni eveniet. Aut id praesentium. Reiciendis et atque sapiente temporibus ut a doloribus. Aliquam mollitia laborum deserunt aut ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 607, DateTimeKind.Utc).AddTicks(223),
                            IsDeleted = false,
                            Name = "Alanis Buckridge"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Id sunt aut mollitia suscipit nemo asperiores. Ipsam et sed doloribus iusto ab ipsa voluptates maiores. Est qui vel molestiae. At nobis magnam quis quas reiciendis asperiores itaque. Aspernatur eum quia vitae deleniti qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 607, DateTimeKind.Utc).AddTicks(420),
                            IsDeleted = false,
                            Name = "Brayan Metz"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Commodi cumque dolores. Aspernatur a natus est doloremque occaecati mollitia mollitia ipsum pariatur. Exercitationem quae nisi unde sequi natus dignissimos atque voluptas. Quos eligendi dolor qui veritatis ipsum minus hic at.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 607, DateTimeKind.Utc).AddTicks(667),
                            IsDeleted = false,
                            Name = "Richard Thiel"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Ad necessitatibus voluptas libero tempora. Voluptas et sequi. Et quis voluptate debitis ut dolores a.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 607, DateTimeKind.Utc).AddTicks(996),
                            IsDeleted = false,
                            Name = "Janiya Bruen"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Eos ex natus officia et nihil. Laborum accusamus molestiae beatae velit ea eos in aspernatur rerum. Doloribus non est excepturi qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 607, DateTimeKind.Utc).AddTicks(1115),
                            IsDeleted = false,
                            Name = "Enrique Keeling"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Aliquam doloribus quis maiores et. Unde qui voluptatum. In aliquid dolor consequatur velit. Animi deleniti beatae rerum et magni atque perferendis voluptatem hic.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 607, DateTimeKind.Utc).AddTicks(1258),
                            IsDeleted = false,
                            Name = "Lizeth McDermott"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(2331),
                            Description = "Et dicta tempora voluptatem. Omnis architecto nesciunt ut nihil culpa ratione. Quos in corporis quos dolorum cupiditate nobis facilis maxime. Velit consequatur mollitia corporis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 70.63m,
                            PrimaryGenreId = 4,
                            PublisherId = 1,
                            Title = "Qui possimus aut."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(4146),
                            Description = "Rem et nulla dolorem maxime et laboriosam inventore odio minus. Necessitatibus id iure voluptas ex pariatur et et quo. Soluta voluptatum dignissimos quos nostrum reprehenderit.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 26.11m,
                            PrimaryGenreId = 2,
                            PublisherId = 4,
                            Title = "Facilis veniam aut."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(4274),
                            Description = "Repellendus natus ut dolorem cumque ipsum. Omnis ut ipsam et dolorem. Facere fuga ipsa et id. Ratione eum assumenda doloribus aut enim cumque. Quo atque repellat ipsum sit dolorem est.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 39.76m,
                            PrimaryGenreId = 3,
                            PublisherId = 5,
                            Title = "Cumque debitis doloribus."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(4389),
                            Description = "Debitis nobis assumenda corrupti delectus eaque dolor tenetur saepe. Doloribus vel velit veniam doloremque est dolores sit sit nulla. Qui qui nostrum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 87.58m,
                            PrimaryGenreId = 1,
                            PublisherId = 1,
                            Title = "Quasi temporibus minus."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(4533),
                            Description = "Sit et et voluptatem qui quia aut est. Nobis qui temporibus. Perferendis aspernatur aut suscipit qui porro. Quas recusandae officiis beatae nobis ducimus. Id voluptatibus pariatur sequi nulla alias dignissimos debitis qui.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 19.96m,
                            PrimaryGenreId = 2,
                            PublisherId = 4,
                            Title = "Veniam facere qui."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(4635),
                            Description = "Veritatis voluptatem eligendi. Animi itaque omnis corporis placeat. Ipsa omnis ipsam sit vel laboriosam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 96.76m,
                            PrimaryGenreId = 5,
                            PublisherId = 1,
                            Title = "Voluptatem ex sed."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(4782),
                            Description = "Impedit nihil neque ipsa voluptate temporibus explicabo. Impedit impedit accusantium placeat. Non neque sed et voluptas velit fugiat impedit laudantium quia. Fugiat et voluptates.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 43.32m,
                            PrimaryGenreId = 6,
                            PublisherId = 5,
                            Title = "Suscipit quidem voluptatem."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(4866),
                            Description = "Nesciunt esse tempore aliquam. Ab voluptates non ratione labore tempora nostrum nesciunt molestias voluptas. Rem voluptatibus minima asperiores voluptates veniam odio aspernatur ex nesciunt. Dicta quidem distinctio error quaerat sint. Minus consequatur voluptatem deserunt aperiam sequi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 87.09m,
                            PrimaryGenreId = 3,
                            PublisherId = 2,
                            Title = "Odit dignissimos esse."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5003),
                            Description = "Dolorum veritatis vero. Velit sit autem ad eos corrupti. Voluptas voluptatum eum non. Praesentium ut quos eligendi rerum accusantium voluptatem dicta et harum. Aut fugit voluptatibus qui animi id est mollitia.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 58.71m,
                            PrimaryGenreId = 5,
                            PublisherId = 1,
                            Title = "Perferendis debitis culpa."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5122),
                            Description = "Ipsum vitae natus voluptatem incidunt alias dicta possimus atque. Nesciunt quae magni quis hic asperiores blanditiis sint. Distinctio enim molestiae aperiam omnis nam asperiores omnis vitae. Sunt molestiae dolore expedita. Et quia consectetur in velit eos possimus officiis omnis. Laborum qui voluptatem aspernatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 58.55m,
                            PrimaryGenreId = 7,
                            PublisherId = 1,
                            Title = "Eveniet repellat soluta."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5265),
                            Description = "Non saepe voluptas debitis fugiat eveniet occaecati non. Beatae deserunt eum ea sapiente mollitia quod et. Ut deserunt nesciunt aut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 74.97m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Error voluptatem dolores."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5332),
                            Description = "Id eos quia sequi nulla quis tenetur ea. Totam qui ut expedita. Quisquam et inventore eveniet temporibus nobis officia velit. Consequuntur molestiae excepturi. Voluptas ut impedit porro nesciunt reiciendis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 52.56m,
                            PrimaryGenreId = 1,
                            PublisherId = 3,
                            Title = "Repellendus molestias hic."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5443),
                            Description = "Quia sunt eos quo nam suscipit eos. Aut ab et amet. Voluptatem illum dignissimos. Omnis aut est ut autem et culpa eos explicabo. Ipsum qui id et porro quos non nisi molestiae eos.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 88.85m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Nesciunt vitae odio."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5535),
                            Description = "Consectetur voluptas perspiciatis et ipsum nemo commodi aspernatur quis. Optio et non ratione laudantium. Et et qui iure magni consequatur et laboriosam. Aspernatur quaerat aut rerum. Esse voluptatem dolorum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 71.20m,
                            PrimaryGenreId = 2,
                            PublisherId = 5,
                            Title = "Nihil totam autem."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5653),
                            Description = "Fugit expedita fuga non a autem. Asperiores iusto ipsum aliquid ex quis expedita sunt hic. Porro illo sint voluptatem vero quia dignissimos.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 95.78m,
                            PrimaryGenreId = 7,
                            PublisherId = 3,
                            Title = "Iure placeat rerum."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5734),
                            Description = "Blanditiis voluptatum eos. Provident voluptatem deleniti nisi distinctio. Labore ut et quod expedita sit et magnam dolorem. Qui perspiciatis ducimus perferendis atque dolorem et dolor quis. Illo odio cum cupiditate. Quam fugiat et adipisci architecto quo sunt mollitia.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 50.08m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Est quo tempore."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5838),
                            Description = "Quia et voluptatem. Voluptatum veritatis consequuntur voluptas reprehenderit sit et molestiae deserunt dolor. Suscipit saepe eos illum ea perferendis velit consequatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 67.91m,
                            PrimaryGenreId = 3,
                            PublisherId = 5,
                            Title = "Dolores et libero."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(5962),
                            Description = "Ab dicta est est ex consequuntur. Aut soluta aspernatur ipsum odio explicabo sed doloribus neque ut. Earum sequi itaque vero provident ipsam repudiandae ut. Eum hic blanditiis eum voluptas. At qui recusandae tenetur voluptatum rerum facilis earum aut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 48.29m,
                            PrimaryGenreId = 6,
                            PublisherId = 4,
                            Title = "Velit et ut."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(6100),
                            Description = "Quis aut doloribus porro voluptatem tenetur quia qui. Maiores quidem eos ullam cum laborum omnis blanditiis distinctio. Esse maiores tempora voluptatem. Provident molestiae occaecati esse.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 62.77m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Dolorem quis consectetur."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 610, DateTimeKind.Utc).AddTicks(6175),
                            Description = "Ad quod distinctio quisquam id porro ut dicta. Et repudiandae expedita magnam nulla saepe odit. Id dolorem ut voluptatem quia a enim repudiandae et dolor. Voluptates qui commodi et voluptatum est unde dolorem. Consequatur ipsum sit aperiam ex ut accusantium. Est cumque consequatur iste libero.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 64.40m,
                            PrimaryGenreId = 1,
                            PublisherId = 1,
                            Title = "Nihil a optio."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2056),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2058),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2058),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2058),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2059),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2059),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2059),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2059),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(2060),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GiftCardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceReduction")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderState")
                        .HasColumnType("integer");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 616, DateTimeKind.Utc).AddTicks(3744),
                            CustomerEmail = "Robin37@hotmail.com",
                            CustomerName = "Robin Collins",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 616, DateTimeKind.Utc).AddTicks(7152),
                            CustomerEmail = "Calvin_Nader@yahoo.com",
                            CustomerName = "Calvin Nader",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 9,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 616, DateTimeKind.Utc).AddTicks(8267),
                            CustomerEmail = "Terri.McClure@yahoo.com",
                            CustomerName = "Terri McClure",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 616, DateTimeKind.Utc).AddTicks(8969),
                            CustomerEmail = "Martin_Hahn@yahoo.com",
                            CustomerName = "Martin Hahn",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 616, DateTimeKind.Utc).AddTicks(9698),
                            CustomerEmail = "Cecelia.Hilll@yahoo.com",
                            CustomerName = "Cecelia Hilll",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 4,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(319),
                            CustomerEmail = "Lyle.Kreiger81@hotmail.com",
                            CustomerName = "Lyle Kreiger",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(963),
                            CustomerEmail = "Bryant85@gmail.com",
                            CustomerName = "Bryant Yundt",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(1650),
                            CustomerEmail = "Archie_Kihn90@hotmail.com",
                            CustomerName = "Archie Kihn",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 14,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(2278),
                            CustomerEmail = "Nicolas_Maggio@yahoo.com",
                            CustomerName = "Nicolas Maggio",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 8,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(2923),
                            CustomerEmail = "Gary.Donnelly@yahoo.com",
                            CustomerName = "Gary Donnelly",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(3595),
                            CustomerEmail = "Tommie61@hotmail.com",
                            CustomerName = "Tommie Morissette",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 8,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(4250),
                            CustomerEmail = "Paul36@yahoo.com",
                            CustomerName = "Paul Cassin",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 8,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(4956),
                            CustomerEmail = "Deanna10@yahoo.com",
                            CustomerName = "Deanna Dicki",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(5601),
                            CustomerEmail = "Fred78@gmail.com",
                            CustomerName = "Fred Barton",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 617, DateTimeKind.Utc).AddTicks(6237),
                            CustomerEmail = "Anita_Pfannerstill89@hotmail.com",
                            CustomerName = "Anita Pfannerstill",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(243),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 25.61m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1419),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 31.87m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1467),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 17.42m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1478),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 89.18m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1485),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 45.05m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1493),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 63.01m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1499),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 60.73m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 8,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1507),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 17.04m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1513),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 52.26m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1520),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 61.87m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1527),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 56.56m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1533),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 72.63m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1540),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 71.05m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1546),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 44.84m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1553),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 38.16m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 16,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1559),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 31.58m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1565),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 67.38m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 18,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1658),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 88.56m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 19,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1666),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 69.64m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 20,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1674),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 79.92m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 21,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1681),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 84.15m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 22,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1688),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 13.99m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 23,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1694),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 45.32m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 24,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1702),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 52.16m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 25,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1708),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 52.75m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 26,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1715),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 12.62m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 27,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1721),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 56.07m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 28,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1727),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 26.74m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 29,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1734),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 97.37m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 30,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1740),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 88.53m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 31,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1747),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 64.86m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 32,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1753),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 19.46m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 33,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1759),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 65.79m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 34,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1765),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 47.94m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1772),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 58.61m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 36,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1778),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 40.48m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 37,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1785),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 42.86m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 38,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1791),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 83.11m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 39,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1797),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 26.13m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 40,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1804),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 29.12m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 41,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1810),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 23.02m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 42,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1817),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 24.79m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 43,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1823),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 17.18m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 44,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1830),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 76.76m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 45,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1836),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 57.30m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1843),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 13.14m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1849),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 63.97m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 48,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1855),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 45.84m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 49,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1861),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 91.43m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 50,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 619, DateTimeKind.Utc).AddTicks(1903),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 28.62m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Assumenda maiores asperiores est. Totam repellat porro dolor ipsam. Velit reprehenderit debitis consequatur accusantium alias. Id saepe possimus voluptatibus voluptatem nostrum adipisci ipsam. Alias enim labore eum minima rerum voluptas sunt assumenda.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 608, DateTimeKind.Utc).AddTicks(7260),
                            IsDeleted = false,
                            Name = "Conroy, Lesch and Fritsch"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Quae eveniet qui aut earum quis laboriosam quo quisquam ipsa. Cum saepe velit animi vel nobis molestiae quaerat. Aliquam reiciendis dolor autem at ducimus cum dolorem et nobis. Sunt officia non deleniti qui aut sed voluptas. Dolore aperiam voluptas expedita deserunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 608, DateTimeKind.Utc).AddTicks(7962),
                            IsDeleted = false,
                            Name = "Gerlach LLC"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Aut eum id exercitationem dolorem qui nihil in facilis sit. Cupiditate vel necessitatibus. Commodi quas suscipit magnam repellat tempore. Saepe repellendus nulla soluta consequatur eum nam. Rerum quisquam atque velit. Dolor ab laboriosam perspiciatis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 608, DateTimeKind.Utc).AddTicks(8249),
                            IsDeleted = false,
                            Name = "Brekke LLC"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Eligendi quo ut delectus quis non est et id. Iste id doloremque explicabo quas et. Eos veritatis consequuntur voluptas quam ea saepe at quo sunt. Quo corporis praesentium. Exercitationem dolorem repellat ea. Voluptatem ut necessitatibus unde id expedita esse suscipit.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 608, DateTimeKind.Utc).AddTicks(8472),
                            IsDeleted = false,
                            Name = "Beahan Group"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Ea corporis quibusdam architecto ea dolore. Ab perspiciatis et minus cupiditate dicta voluptatem necessitatibus. Et esse facilis corrupti tenetur consequatur velit. Ipsum cupiditate eos tempora harum velit aperiam quis eaque qui. Vero rem odit autem impedit sed illum numquam culpa unde.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 608, DateTimeKind.Utc).AddTicks(8667),
                            IsDeleted = false,
                            Name = "Kertzmann Group"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 4,
                            Comment = "Adipisci sed recusandae fugiat dolor sunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 611, DateTimeKind.Utc).AddTicks(9725),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            BookId = 10,
                            Comment = "Ullam porro autem dolor quis sint.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(887),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 3,
                            BookId = 13,
                            Comment = "Aut ipsa perferendis facere ut recusandae quaerat voluptatem id quaerat.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(956),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 11,
                            Comment = "Magni ullam iure enim nisi tenetur et ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(986),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 5,
                            BookId = 16,
                            Comment = "Ab tenetur facilis quo.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1009),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 10,
                            Comment = "Hic voluptatem minus odio voluptatem ut laboriosam alias.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1024),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            BookId = 17,
                            Comment = "Pariatur et officiis consequuntur necessitatibus cupiditate autem quia minus.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1088),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            BookId = 11,
                            Comment = "Voluptas fugit odio porro amet fuga et at.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1112),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 20,
                            Comment = "Et qui at ipsa.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1132),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            BookId = 5,
                            Comment = "Veritatis iste reiciendis fuga voluptatum ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1146),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 11,
                            BookId = 17,
                            Comment = "Eaque eveniet enim amet voluptas fuga quam atque et odio.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1163),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            BookId = 15,
                            Comment = "Dicta nostrum quo aut fuga et laboriosam assumenda ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1187),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 13,
                            BookId = 13,
                            Comment = "Voluptas molestias rem expedita rerum quia non suscipit quod.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1210),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 14,
                            BookId = 8,
                            Comment = "Ipsam ex excepturi facere esse.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1251),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 15,
                            BookId = 4,
                            Comment = "Magni omnis veritatis veniam magni in suscipit perspiciatis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1269),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            BookId = 4,
                            Comment = "Aut quo excepturi et quos cumque sit dolores molestiae.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1290),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 17,
                            BookId = 7,
                            Comment = "Accusamus officiis eaque quia maxime voluptate modi sit.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1314),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 18,
                            BookId = 13,
                            Comment = "Expedita est est quibusdam saepe dicta non veritatis.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1334),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 19,
                            BookId = 16,
                            Comment = "Odit ducimus tenetur enim ipsum aut velit.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1355),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 20,
                            BookId = 9,
                            Comment = "Sunt eligendi non qui aut nisi minima ut voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1374),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 21,
                            BookId = 1,
                            Comment = "Facere voluptatem et omnis quod.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1466),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 22,
                            BookId = 12,
                            Comment = "Maxime commodi aut facere magnam voluptate vel voluptas nostrum aspernatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1486),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 23,
                            BookId = 14,
                            Comment = "Dolor quia sequi et eius nihil enim necessitatibus repellat commodi.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1510),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 24,
                            BookId = 19,
                            Comment = "Reprehenderit voluptatibus est repellat fugit voluptatem at natus illum.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1535),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 25,
                            BookId = 14,
                            Comment = "Doloribus quam quo.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1557),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 26,
                            BookId = 6,
                            Comment = "Ex quia fugiat soluta ex.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1570),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            BookId = 2,
                            Comment = "Non pariatur sit aut repellendus ut ipsum dolorem voluptatem fuga.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1586),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 28,
                            BookId = 10,
                            Comment = "Numquam asperiores inventore a molestiae aut eaque error.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1610),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 29,
                            BookId = 14,
                            Comment = "Corrupti voluptas rerum omnis sapiente aut et velit.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1672),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 30,
                            BookId = 8,
                            Comment = "Et doloribus quidem.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1693),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 31,
                            BookId = 15,
                            Comment = "Aut voluptates sit dolor rerum.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1705),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 32,
                            BookId = 8,
                            Comment = "Consequatur non deserunt nesciunt rerum assumenda ex vero.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1721),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 33,
                            BookId = 11,
                            Comment = "Et sit sint id enim at aperiam suscipit.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1741),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 34,
                            BookId = 7,
                            Comment = "Labore laudantium veritatis ipsam aut quibusdam id.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1762),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 35,
                            BookId = 12,
                            Comment = "Minus eveniet est tenetur quam quo maxime.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1782),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 36,
                            BookId = 14,
                            Comment = "Neque culpa harum ut sit ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1801),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 37,
                            BookId = 14,
                            Comment = "Doloremque nostrum vel tempore unde.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1896),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 38,
                            BookId = 10,
                            Comment = "Architecto dolor quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1913),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 39,
                            BookId = 5,
                            Comment = "Ut qui et non.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1926),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 40,
                            BookId = 11,
                            Comment = "Explicabo laborum illum eum ut ad maxime deleniti ducimus doloremque.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1940),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 41,
                            BookId = 3,
                            Comment = "Animi adipisci ullam.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1964),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 42,
                            BookId = 14,
                            Comment = "Laudantium eligendi iure fugiat consequatur sed voluptate quia ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1977),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 43,
                            BookId = 3,
                            Comment = "Adipisci eos sit qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(1999),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 44,
                            BookId = 18,
                            Comment = "Distinctio magni provident expedita temporibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(2013),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 45,
                            BookId = 19,
                            Comment = "Sunt ipsa aspernatur et illum iure doloremque aut alias.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(2064),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 46,
                            BookId = 6,
                            Comment = "Tenetur quibusdam reprehenderit sapiente ipsum porro eum saepe esse.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(2087),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 47,
                            BookId = 18,
                            Comment = "Voluptate explicabo veniam quos a.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(2111),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 48,
                            BookId = 13,
                            Comment = "Aliquam quia autem hic iusto consectetur non necessitatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(2127),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 49,
                            BookId = 3,
                            Comment = "Doloribus pariatur soluta eos voluptate iure nulla quibusdam voluptas voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(2148),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 50,
                            BookId = 15,
                            Comment = "Quos expedita dolores et atque.",
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 612, DateTimeKind.Utc).AddTicks(2172),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "adaf94f6-ce98-48eb-8bf9-cffcc4420e14",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5c25938f-e0c2-4811-beac-331eae0d59de",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fc7d6702-fe83-4cc7-b016-bd819c6fdba1",
                            Email = "Aryanna63@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Noemy Will",
                            PhoneNumber = "281.271.8964 x50312",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "87c99c2b-33c0-46d4-94ff-cbb7eff0c5bc",
                            TwoFactorEnabled = false,
                            UserName = "Aryanna63@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7940706a-bf8c-425a-981a-d799050c4e2e",
                            Email = "Cordelia.Schmeler84@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Neil Denesik",
                            PhoneNumber = "(274) 358-6652 x41642",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "add65ee3-524e-4469-ba4c-87d40e367dd1",
                            TwoFactorEnabled = false,
                            UserName = "Cordelia.Schmeler84@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ac89007-8dea-441f-92c8-0561cd5e31cc",
                            Email = "Millie9@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Annalise Gottlieb",
                            PhoneNumber = "1-986-791-5750",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c2ce2e47-3c87-4689-9449-4045616483d5",
                            TwoFactorEnabled = false,
                            UserName = "Millie9@hotmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "31efec93-af72-466b-86e3-f4d19538da53",
                            Email = "Eleanora_Gibson40@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Tatum Lehner",
                            PhoneNumber = "1-455-766-6903 x69541",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8905e375-6bd9-4028-b606-055b543eac23",
                            TwoFactorEnabled = false,
                            UserName = "Eleanora_Gibson40@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3d5079e3-40ab-487a-a5ca-1fc5a1b59df2",
                            Email = "Randi.Altenwerth@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Molly Lubowitz",
                            PhoneNumber = "894-256-0018 x351",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "442c46f2-40e5-40e4-87ee-e4b701d7171f",
                            TwoFactorEnabled = false,
                            UserName = "Randi.Altenwerth@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f3accbd3-793e-42b0-b983-c7c0905f580d",
                            Email = "Anika.Kunde48@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Rigoberto Cummerata",
                            PhoneNumber = "902.628.6565",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "02d01b84-a997-446e-94bd-15c06d8b46ad",
                            TwoFactorEnabled = false,
                            UserName = "Anika.Kunde48@hotmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "510a335a-51ba-4cea-a6aa-fa40069f3c55",
                            Email = "Zelda_Dibbert33@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Aurelia McDermott",
                            PhoneNumber = "1-435-796-4079",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f75b1b8e-a16e-4c7e-8b77-11e9fd392f23",
                            TwoFactorEnabled = false,
                            UserName = "Zelda_Dibbert33@hotmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "afd0ab1d-8ae7-4475-8ff8-6a8816c351d1",
                            Email = "Clare.Fisher16@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "River Waelchi",
                            PhoneNumber = "275.441.4100 x708",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dce4fd55-5d1d-454b-95bd-572411d021f0",
                            TwoFactorEnabled = false,
                            UserName = "Clare.Fisher16@yahoo.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6b55348a-26a2-487d-b4ac-ba0d08ae0ddf",
                            Email = "Eileen.Thompson6@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Zetta Klein",
                            PhoneNumber = "(963) 985-0831",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "53583bfb-5d88-4f07-94ed-f2789057a659",
                            TwoFactorEnabled = false,
                            UserName = "Eileen.Thompson6@gmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5165),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5341),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5347),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5350),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5353),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5356),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5359),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 8,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5362),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5365),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 10,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5367),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 11,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5370),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5373),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 13,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5375),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 14,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5378),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 15,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5381),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 16,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5384),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 17,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5387),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 18,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5390),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 19,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5392),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 20,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5395),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 21,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5398),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 22,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5400),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 23,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5403),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 24,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5406),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 25,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5409),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 26,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5411),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5414),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 28,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5417),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 29,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5420),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 30,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 14, 26, 51, 613, DateTimeKind.Utc).AddTicks(5423),
                            IsDeleted = false,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.HasOne("DataAccessLayer.Model.GiftCard", "GiftCard")
                        .WithMany("Coupons")
                        .HasForeignKey("GiftCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("GiftCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
