// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    partial class BookHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Gleichnerbury",
                            Country = "Cook Islands",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(582),
                            IsDeleted = false,
                            State = "Nevada",
                            Street = "8203 Isabell Trail",
                            ZipCode = "18617-3823"
                        },
                        new
                        {
                            Id = 2,
                            City = "Carolineport",
                            Country = "Norfolk Island",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(1416),
                            IsDeleted = false,
                            State = "Alabama",
                            Street = "8867 Jones Orchard",
                            ZipCode = "26912-0704"
                        },
                        new
                        {
                            Id = 3,
                            City = "Port Rossietown",
                            Country = "Vietnam",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(1654),
                            IsDeleted = false,
                            State = "Rhode Island",
                            Street = "679 Volkman Skyway",
                            ZipCode = "90525-5223"
                        },
                        new
                        {
                            Id = 4,
                            City = "Emardchester",
                            Country = "Isle of Man",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(1862),
                            IsDeleted = false,
                            State = "New Jersey",
                            Street = "82911 Jacobs Square",
                            ZipCode = "51371-9019"
                        },
                        new
                        {
                            Id = 5,
                            City = "South Carey",
                            Country = "Angola",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(2051),
                            IsDeleted = false,
                            State = "New Hampshire",
                            Street = "302 Jena Ports",
                            ZipCode = "06849"
                        },
                        new
                        {
                            Id = 6,
                            City = "Lake Florencio",
                            Country = "Maldives",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(2229),
                            IsDeleted = false,
                            State = "Vermont",
                            Street = "653 Pouros Lodge",
                            ZipCode = "20264"
                        },
                        new
                        {
                            Id = 7,
                            City = "Rogeliochester",
                            Country = "Yemen",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(2514),
                            IsDeleted = false,
                            State = "New Jersey",
                            Street = "274 Eryn Spring",
                            ZipCode = "86858-7132"
                        },
                        new
                        {
                            Id = 8,
                            City = "New Rubytown",
                            Country = "Colombia",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(2716),
                            IsDeleted = false,
                            State = "Iowa",
                            Street = "52894 Pollich Underpass",
                            ZipCode = "58248"
                        },
                        new
                        {
                            Id = 9,
                            City = "O'Haratown",
                            Country = "China",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(2926),
                            IsDeleted = false,
                            State = "North Carolina",
                            Street = "8232 Rosella Villages",
                            ZipCode = "49844"
                        },
                        new
                        {
                            Id = 10,
                            City = "North Lamont",
                            Country = "Brazil",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(3148),
                            IsDeleted = false,
                            State = "Montana",
                            Street = "8041 Bauch Corners",
                            ZipCode = "45588"
                        },
                        new
                        {
                            Id = 11,
                            City = "Bednarmouth",
                            Country = "Lesotho",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(3337),
                            IsDeleted = false,
                            State = "South Carolina",
                            Street = "161 Joan Square",
                            ZipCode = "27400-0500"
                        },
                        new
                        {
                            Id = 12,
                            City = "West Lillabury",
                            Country = "Sierra Leone",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(3504),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "4242 Bertha Skyway",
                            ZipCode = "66828"
                        },
                        new
                        {
                            Id = 13,
                            City = "Lake Reneefurt",
                            Country = "Mayotte",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(3683),
                            IsDeleted = false,
                            State = "Hawaii",
                            Street = "048 Arielle Burgs",
                            ZipCode = "32712-4344"
                        },
                        new
                        {
                            Id = 14,
                            City = "East Margarettaburgh",
                            Country = "Dominican Republic",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(3865),
                            IsDeleted = false,
                            State = "Wisconsin",
                            Street = "21019 Feeney Loaf",
                            ZipCode = "72406"
                        },
                        new
                        {
                            Id = 15,
                            City = "Dooleybury",
                            Country = "Slovakia (Slovak Republic)",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 336, DateTimeKind.Utc).AddTicks(4046),
                            IsDeleted = false,
                            State = "Virginia",
                            Street = "797 Althea Lake",
                            ZipCode = "02845"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Ut odio accusamus corrupti nisi. Consequuntur repudiandae consequatur ea quisquam voluptas ut quam quis. Rerum non cum quia nam. Perspiciatis asperiores voluptatibus. Et voluptas porro.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(929),
                            IsDeleted = false,
                            Name = "Jeremie Gislason"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Culpa vero quia molestiae earum veniam est tenetur quia. Laboriosam saepe veritatis similique molestiae. Molestias qui repudiandae dolor iusto quia voluptas. Nam veniam qui aperiam asperiores veritatis enim molestias expedita.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(1433),
                            IsDeleted = false,
                            Name = "Mittie Pfannerstill"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Fugiat dicta officiis ex dolores adipisci enim dolor fuga consequuntur. Sint ducimus possimus iure aliquam sit minus voluptatem eos eligendi. Animi ut dolor ratione est ad qui. Est illum vel. Eos accusamus et hic fugit eum impedit impedit vel unde. Quis vitae voluptatem quibusdam iure omnis eos esse dicta quos.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(1615),
                            IsDeleted = false,
                            Name = "Alex Waters"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Ut incidunt labore sunt ducimus. Ea autem non provident aut et inventore. Sunt est qui qui quia.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(1845),
                            IsDeleted = false,
                            Name = "Kelton Hickle"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Fuga porro neque. Odit rerum ea. Et omnis ea et deserunt itaque culpa aliquid. Iusto architecto deleniti quos eveniet fuga odit voluptate. Libero iure placeat saepe ipsum est beatae et.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(1966),
                            IsDeleted = false,
                            Name = "Hadley Deckow"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Omnis hic sed blanditiis laboriosam eos est veritatis. Temporibus libero consectetur autem rerum illo est. Ut id numquam sunt quia qui ipsum minima aut. Voluptas est illum perferendis.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(2096),
                            IsDeleted = false,
                            Name = "Pattie Ruecker"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Recusandae et et qui ut voluptas fugiat. Et sint tempore vel fugit quis totam. Suscipit quos quo ut est quibusdam.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(2229),
                            IsDeleted = false,
                            Name = "Bertram Kuhic"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Explicabo minima doloribus fugit commodi sunt. Magnam itaque modi debitis nam eos. Nihil quia est magnam aut voluptas dolores reiciendis qui eum. Repudiandae maxime et maiores delectus.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(2316),
                            IsDeleted = false,
                            Name = "Margarita Graham"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Ut ipsum earum. Rerum perspiciatis voluptatem non rem. Non aliquam velit id rerum ut sequi distinctio. Laborum nihil et qui molestias.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(2604),
                            IsDeleted = false,
                            Name = "Gordon Wiza"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Ipsum vel perferendis. Quis hic similique non. Quam deleniti qui et neque ex et ut earum. Nostrum quam dolores maxime voluptatum eligendi excepturi. Quo veniam asperiores consequatur aut voluptates sit ut nostrum.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 324, DateTimeKind.Utc).AddTicks(2701),
                            IsDeleted = false,
                            Name = "Jason O'Reilly"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 329, DateTimeKind.Utc).AddTicks(7395),
                            Description = "Error iure vel explicabo nulla. Non reiciendis atque inventore sunt totam vero sed. Similique ex occaecati tempora est. Non consectetur beatae nemo neque. Pariatur repudiandae consequatur quos minima itaque voluptate dolores.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=541",
                            IsDeleted = false,
                            Price = 19.74m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Aut eos optio."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 329, DateTimeKind.Utc).AddTicks(9524),
                            Description = "Fugiat quae iste eveniet. Eos iure itaque accusantium quod amet aut. Error eligendi repellendus possimus nesciunt minima. Aspernatur ut harum mollitia reprehenderit vel qui nobis. Suscipit omnis magnam aut.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=171",
                            IsDeleted = false,
                            Price = 85.92m,
                            PrimaryGenreId = 3,
                            PublisherId = 4,
                            Title = "Maiores iste itaque."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 329, DateTimeKind.Utc).AddTicks(9773),
                            Description = "Aut libero ea totam porro nemo est iusto nostrum. Iusto magnam eum. Veniam voluptas quae perspiciatis optio. Repudiandae iste autem omnis error quis. In rerum repellendus voluptatum fuga deserunt voluptates. Ea repudiandae reprehenderit omnis nihil reiciendis deserunt animi voluptatem maxime.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=33",
                            IsDeleted = false,
                            Price = 95.64m,
                            PrimaryGenreId = 4,
                            PublisherId = 3,
                            Title = "Omnis ullam velit."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 329, DateTimeKind.Utc).AddTicks(9988),
                            Description = "Unde alias aut. Molestiae laborum totam iste. Ut voluptas ipsam molestias officia sit saepe qui. Iusto quibusdam vel nihil. Ut ea cumque voluptas nobis maxime.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=642",
                            IsDeleted = false,
                            Price = 27.98m,
                            PrimaryGenreId = 4,
                            PublisherId = 1,
                            Title = "Est aut ipsam."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(114),
                            Description = "Eveniet ab illo. Quisquam voluptatem ut enim. Dolorem inventore ducimus. Sit debitis vel temporibus. Ut vel non inventore.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=219",
                            IsDeleted = false,
                            Price = 92.19m,
                            PrimaryGenreId = 1,
                            PublisherId = 3,
                            Title = "Aliquid quaerat natus."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(259),
                            Description = "Eveniet quo nam voluptate totam. Sint iste reprehenderit sequi perspiciatis. Ex illo maiores aliquid. In ad id est in voluptatum.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=958",
                            IsDeleted = false,
                            Price = 25.92m,
                            PrimaryGenreId = 3,
                            PublisherId = 1,
                            Title = "Nisi odio autem."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(361),
                            Description = "Consequatur ipsa dolorum eligendi molestias consequatur similique. Fugit in earum in omnis. Accusamus omnis recusandae praesentium aut fuga. Fugiat facilis temporibus autem quidem provident illo libero. Debitis voluptas vero alias quo dolorem.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=240",
                            IsDeleted = false,
                            Price = 33.40m,
                            PrimaryGenreId = 1,
                            PublisherId = 3,
                            Title = "Nihil expedita dolor."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(534),
                            Description = "Hic cupiditate est non fugit fugit voluptatem sit quidem non. Iusto temporibus saepe voluptates fuga. Molestiae quia alias. Tempore fuga excepturi a quia enim ut saepe. Fuga a eligendi eum totam autem velit repellendus incidunt.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=1032",
                            IsDeleted = false,
                            Price = 95.34m,
                            PrimaryGenreId = 1,
                            PublisherId = 4,
                            Title = "Qui quo voluptatem."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(714),
                            Description = "Aut est et rerum a. Dolor enim veniam mollitia excepturi quis consectetur recusandae nam porro. Nihil accusantium aliquam aut adipisci quia blanditiis animi repellendus. Rerum harum vitae enim.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=590",
                            IsDeleted = false,
                            Price = 82.42m,
                            PrimaryGenreId = 4,
                            PublisherId = 3,
                            Title = "Et excepturi similique."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(837),
                            Description = "Laborum non dicta. Magnam quam voluptatem atque in rerum consequatur. Sint voluptatem sit cupiditate sed ut laboriosam recusandae.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=648",
                            IsDeleted = false,
                            Price = 76.19m,
                            PrimaryGenreId = 6,
                            PublisherId = 3,
                            Title = "Non aut quia."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(965),
                            Description = "Eligendi eos tempore velit vel iusto. Qui molestias placeat. Ex incidunt a beatae sapiente ducimus. Est aperiam dolores beatae expedita atque eligendi voluptas dolorem quas. Et deserunt consequuntur.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=70",
                            IsDeleted = false,
                            Price = 76.46m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Ipsam eos quia."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(1101),
                            Description = "Rerum maxime non dolores. Ipsa dignissimos amet aut ut aperiam aut corporis maiores. Aut reiciendis animi voluptates ipsum non. Assumenda quia sed voluptatem dicta sed pariatur ut. Laboriosam voluptas et sed atque.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=606",
                            IsDeleted = false,
                            Price = 67.15m,
                            PrimaryGenreId = 1,
                            PublisherId = 3,
                            Title = "Explicabo libero voluptatum."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(1236),
                            Description = "Provident nostrum perspiciatis. Odit sit dolore. Quam ea iure accusamus aliquam ratione consequatur non. Nemo nemo alias unde voluptatem. Amet sunt omnis perferendis natus sit soluta non dolorem ab.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=563",
                            IsDeleted = false,
                            Price = 97.13m,
                            PrimaryGenreId = 2,
                            PublisherId = 1,
                            Title = "Quam aliquid rem."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(1427),
                            Description = "Ratione earum fugit. Dignissimos cum consectetur aspernatur sapiente dicta cum voluptates autem. Eum nisi assumenda consequatur amet inventore sunt. Animi fuga numquam qui velit sunt. Quas magni temporibus quia quis soluta. Et laboriosam doloremque.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=160",
                            IsDeleted = false,
                            Price = 87.60m,
                            PrimaryGenreId = 6,
                            PublisherId = 4,
                            Title = "Enim et eaque."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(1618),
                            Description = "Fuga autem iusto sunt porro quae sed. Quasi illo pariatur omnis est voluptates similique officiis eius illo. Vitae nemo dolore necessitatibus aut. Quia sit ex sunt. Consectetur eveniet ad ullam sed velit molestias quidem dolorem ex. Voluptatem incidunt qui non earum laboriosam.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=758",
                            IsDeleted = false,
                            Price = 14.55m,
                            PrimaryGenreId = 4,
                            PublisherId = 5,
                            Title = "Molestias nemo illo."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(1841),
                            Description = "Eius quia deserunt eos vel. Possimus error non. Sapiente sequi iusto labore qui ut. Possimus ipsam labore enim.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=1069",
                            IsDeleted = false,
                            Price = 64.96m,
                            PrimaryGenreId = 6,
                            PublisherId = 1,
                            Title = "Doloremque et sapiente."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(1936),
                            Description = "Exercitationem qui quos. Quia dolores at ipsam molestiae consequatur nobis. Consequatur voluptatem aspernatur quia sint sint dolore qui. Libero rerum aliquam quis ut sit.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=584",
                            IsDeleted = false,
                            Price = 97.28m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Nisi tempora nihil."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(2075),
                            Description = "Dolor eaque voluptas temporibus impedit itaque consectetur. Ut possimus assumenda commodi et quisquam voluptas qui debitis. Tempora reprehenderit autem error quidem voluptatem in. Ut facere qui. Aspernatur dolorem nobis. Temporibus quo tenetur illo eos.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=969",
                            IsDeleted = false,
                            Price = 87.69m,
                            PrimaryGenreId = 3,
                            PublisherId = 3,
                            Title = "Ipsam omnis excepturi."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(2243),
                            Description = "Veritatis animi quod. Incidunt reiciendis vitae inventore. Ut et aut qui deserunt culpa molestiae a quisquam.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=512",
                            IsDeleted = false,
                            Price = 12.23m,
                            PrimaryGenreId = 1,
                            PublisherId = 4,
                            Title = "Et architecto enim."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 330, DateTimeKind.Utc).AddTicks(2328),
                            Description = "Cupiditate et expedita quos magni. Architecto voluptas in architecto voluptatem vel. A est dicta quis iusto. Libero delectus pariatur perspiciatis maiores cumque quos omnis cumque.",
                            EditCount = 0,
                            ImagePath = "https://picsum.photos/640/480/?image=85",
                            IsDeleted = false,
                            Price = 84.51m,
                            PrimaryGenreId = 5,
                            PublisherId = 5,
                            Title = "Itaque vel aut."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aut quis dicta."
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sint reprehenderit consequatur."
                        },
                        new
                        {
                            Id = 3,
                            Name = "At error eum."
                        },
                        new
                        {
                            Id = 4,
                            Name = "Eaque aut itaque."
                        },
                        new
                        {
                            Id = 5,
                            Name = "Perferendis ut beatae."
                        },
                        new
                        {
                            Id = 6,
                            Name = "Voluptas deserunt deserunt."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7785),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7788),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7788),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7788),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7789),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7789),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7789),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7790),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7790),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 338, DateTimeKind.Utc).AddTicks(1430),
                            CustomerEmail = "Billy.Schiller82@yahoo.com",
                            CustomerName = "Billy Schiller",
                            IsDeleted = false,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 338, DateTimeKind.Utc).AddTicks(4673),
                            CustomerEmail = "Doreen.Koepp50@hotmail.com",
                            CustomerName = "Doreen Koepp",
                            IsDeleted = false,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 338, DateTimeKind.Utc).AddTicks(6094),
                            CustomerEmail = "Ana45@gmail.com",
                            CustomerName = "Ana Monahan",
                            IsDeleted = false,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 338, DateTimeKind.Utc).AddTicks(7064),
                            CustomerEmail = "Vicki64@gmail.com",
                            CustomerName = "Vicki Ankunding",
                            IsDeleted = false,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 338, DateTimeKind.Utc).AddTicks(7979),
                            CustomerEmail = "Janice92@hotmail.com",
                            CustomerName = "Janice Howell",
                            IsDeleted = false,
                            ShippingAddressId = 9,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 338, DateTimeKind.Utc).AddTicks(8845),
                            CustomerEmail = "Stephen.Stroman@hotmail.com",
                            CustomerName = "Stephen Stroman",
                            IsDeleted = false,
                            ShippingAddressId = 2,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 338, DateTimeKind.Utc).AddTicks(9785),
                            CustomerEmail = "Delia.Smith@hotmail.com",
                            CustomerName = "Delia Smith",
                            IsDeleted = false,
                            ShippingAddressId = 2,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(643),
                            CustomerEmail = "Timmy.Gaylord29@gmail.com",
                            CustomerName = "Timmy Gaylord",
                            IsDeleted = false,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(1490),
                            CustomerEmail = "Morris13@hotmail.com",
                            CustomerName = "Morris Cassin",
                            IsDeleted = false,
                            ShippingAddressId = 4,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(2456),
                            CustomerEmail = "Dixie.Moen24@yahoo.com",
                            CustomerName = "Dixie Moen",
                            IsDeleted = false,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 8,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(3361),
                            CustomerEmail = "Saul86@hotmail.com",
                            CustomerName = "Saul Kuhic",
                            IsDeleted = false,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 12,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(4243),
                            CustomerEmail = "Nina_Bins@hotmail.com",
                            CustomerName = "Nina Bins",
                            IsDeleted = false,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(5257),
                            CustomerEmail = "Connie87@gmail.com",
                            CustomerName = "Connie Green",
                            IsDeleted = false,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(6068),
                            CustomerEmail = "Edgar48@hotmail.com",
                            CustomerName = "Edgar Boyer",
                            IsDeleted = false,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 339, DateTimeKind.Utc).AddTicks(6952),
                            CustomerEmail = "Laverne.Swaniawski52@yahoo.com",
                            CustomerName = "Laverne Swaniawski",
                            IsDeleted = false,
                            ShippingAddressId = 2,
                            TotalAmount = 0m,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(5328),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 21.90m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(6885),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 61.29m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(6954),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 92.97m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(6971),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 87.98m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(6984),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 98.11m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7101),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 66.39m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7111),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 48.92m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7121),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 69.23m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7131),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 44.88m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7141),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 94.46m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7151),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 33.53m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7161),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 57.61m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 13,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7171),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 38.64m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7181),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 40.64m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 15,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7191),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 60.90m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 16,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7202),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 90.39m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7212),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 24.89m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7222),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 57.42m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7232),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 95.78m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 20,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7242),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 66.21m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 21,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7251),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 99.70m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 22,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7261),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 13.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 23,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7271),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 74.35m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 24,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7281),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 66.21m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 25,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7291),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 42.02m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7301),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 30.99m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 27,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7311),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 44.98m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 28,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7320),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 13.54m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 29,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7330),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 22.41m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 30,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7339),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 29.60m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 31,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7349),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 64.34m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7358),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 10.01m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 33,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7368),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 60.92m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 34,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7378),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 12.56m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7387),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 30.75m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 36,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7397),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 55.83m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 37,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7407),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 90.83m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 38,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7463),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 49.71m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7474),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 23.33m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 40,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7483),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 19.06m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 41,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7494),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 92.40m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 42,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7505),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 28.06m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 43,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7515),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 62.21m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 44,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7525),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 76.34m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 45,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7535),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 16.70m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7545),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 21.31m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7554),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 32.54m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 48,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7564),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 52.24m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 49,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7573),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 57.77m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 50,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 341, DateTimeKind.Utc).AddTicks(7583),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 65.74m,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Dolores est facilis esse id facilis. Tenetur maiores nam veniam mollitia delectus quidem nisi. Ea quis provident expedita. Possimus quisquam neque repellendus ullam labore voluptas quo dolores. Commodi ipsam error necessitatibus vero alias explicabo exercitationem labore.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 325, DateTimeKind.Utc).AddTicks(9275),
                            IsDeleted = false,
                            Name = "Williamson - Bartoletti"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Ut ex sed et doloremque omnis rem. Consectetur qui excepturi at provident reprehenderit id et iusto. Ratione earum suscipit voluptas quia natus officia. Facilis adipisci ut autem nobis maiores aut.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 326, DateTimeKind.Utc).AddTicks(66),
                            IsDeleted = false,
                            Name = "Anderson - Feest"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Fugiat id esse aperiam aut. Error doloremque enim rem molestiae dicta maiores voluptatem. Aut voluptatum dolores facere quibusdam nihil cupiditate corporis consectetur magnam.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 326, DateTimeKind.Utc).AddTicks(323),
                            IsDeleted = false,
                            Name = "Kerluke, Halvorson and Lebsack"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Ut laboriosam quis quas ut explicabo repellendus quo sed occaecati. At maiores sed aspernatur id iure consectetur. Corrupti dolores sit quis nostrum. Illo voluptate accusamus odio.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 326, DateTimeKind.Utc).AddTicks(629),
                            IsDeleted = false,
                            Name = "Little, Jenkins and Kuhn"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Explicabo omnis et quas quia eius officiis. Aliquid provident perspiciatis accusantium quam repudiandae sint mollitia. Ut ut qui sed voluptas aut ea. Dignissimos aliquam aut sunt. Provident magnam aut odit corrupti voluptatum earum nulla voluptatem nulla. Eligendi et voluptas placeat nostrum maiores et at voluptas voluptas.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 326, DateTimeKind.Utc).AddTicks(907),
                            IsDeleted = false,
                            Name = "Daniel, Cruickshank and Schowalter"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 11,
                            Comment = "Saepe quia voluptatem temporibus voluptas tempore repudiandae natus rerum.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 331, DateTimeKind.Utc).AddTicks(9740),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 2,
                            BookId = 14,
                            Comment = "Fuga ad eos inventore ab et accusamus consequuntur natus.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1350),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            BookId = 6,
                            Comment = "Consequatur architecto eveniet explicabo ducimus consequatur.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1456),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            BookId = 20,
                            Comment = "Voluptatem autem ipsam amet.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1486),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 5,
                            BookId = 18,
                            Comment = "Similique sapiente hic dolores ut ea est earum.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1572),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 6,
                            BookId = 14,
                            Comment = "Minima qui aut.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1607),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            BookId = 20,
                            Comment = "Quaerat tenetur numquam incidunt nihil eveniet omnis sit neque quaerat.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1625),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            BookId = 10,
                            Comment = "Perspiciatis et repudiandae.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1660),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            BookId = 13,
                            Comment = "Magnam nulla officiis architecto eligendi ducimus harum quasi et.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1680),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            BookId = 5,
                            Comment = "Vitae ut culpa accusamus non.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1712),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 11,
                            BookId = 5,
                            Comment = "Et fugiat sunt in voluptas.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1735),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            BookId = 10,
                            Comment = "Aut aut natus libero enim non qui velit qui molestias.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1758),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 13,
                            BookId = 13,
                            Comment = "Vel unde consequatur qui dignissimos ullam earum necessitatibus eius pariatur.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1827),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 8,
                            Comment = "Voluptatem alias similique nesciunt ea dignissimos quia qui.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1904),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            BookId = 14,
                            Comment = "Fugiat aspernatur atque aut.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1950),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            BookId = 8,
                            Comment = "Non commodi placeat architecto delectus vitae aperiam magni velit possimus.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(1973),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 17,
                            BookId = 10,
                            Comment = "Sed quidem ad nihil vel odio eum.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2007),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 18,
                            BookId = 11,
                            Comment = "A omnis quisquam praesentium voluptas molestiae iure sunt.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2033),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 19,
                            BookId = 6,
                            Comment = "Reprehenderit distinctio ratione voluptatum quo magni.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2063),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 20,
                            BookId = 17,
                            Comment = "Modi quisquam maxime in magnam.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2125),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 21,
                            BookId = 14,
                            Comment = "Sed nam sed culpa a sed totam.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2149),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 22,
                            BookId = 9,
                            Comment = "Et itaque totam nemo tempora est beatae quis nihil et.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2178),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 23,
                            BookId = 3,
                            Comment = "Cupiditate dolor omnis nulla quas maxime nihil delectus est officia.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2214),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            BookId = 12,
                            Comment = "Consequatur sed cum fugit quibusdam perferendis voluptatem mollitia libero laudantium.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2247),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 25,
                            BookId = 17,
                            Comment = "Ad reprehenderit ex voluptas.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2283),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 26,
                            BookId = 5,
                            Comment = "Repellat ut quasi laudantium nostrum excepturi dolores.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2303),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 27,
                            BookId = 2,
                            Comment = "Repellat nostrum dolorum.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2332),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 28,
                            BookId = 7,
                            Comment = "Facere ea nulla consequuntur velit impedit dolorem laborum ducimus voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2473),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 29,
                            BookId = 2,
                            Comment = "Et reprehenderit aperiam in sit quod et nam sed.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2511),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 30,
                            BookId = 3,
                            Comment = "Explicabo eaque quia quia.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2544),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 31,
                            BookId = 4,
                            Comment = "Quia delectus occaecati deserunt quasi.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2564),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 32,
                            BookId = 20,
                            Comment = "Distinctio labore atque totam veritatis ducimus aut in quos tenetur.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2586),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 33,
                            BookId = 16,
                            Comment = "Quam numquam sed nostrum dolorem sapiente autem natus ut.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2619),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 34,
                            BookId = 4,
                            Comment = "Ut ratione beatae ipsa dolore.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2650),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 35,
                            BookId = 9,
                            Comment = "Delectus commodi et qui laudantium voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2672),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 36,
                            BookId = 19,
                            Comment = "Sunt excepturi tempora fuga.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2733),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 37,
                            BookId = 13,
                            Comment = "Ipsum deleniti et aut minima ab id vel reiciendis.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2754),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 38,
                            BookId = 15,
                            Comment = "Provident voluptatem et.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2788),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 39,
                            BookId = 20,
                            Comment = "Consequatur ut et eum qui tempora.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2806),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 40,
                            BookId = 18,
                            Comment = "Quam inventore tempora aut vero a.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2831),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 41,
                            BookId = 5,
                            Comment = "Ad minus reprehenderit voluptatem tempore vel excepturi quia.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2856),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 42,
                            BookId = 9,
                            Comment = "Deserunt quo et quia nisi inventore est.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2887),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 43,
                            BookId = 11,
                            Comment = "Suscipit odit non.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2914),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 44,
                            BookId = 17,
                            Comment = "Tempore qui laborum distinctio qui illum et animi omnis debitis.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(2969),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 45,
                            BookId = 3,
                            Comment = "Quasi at iste quas ea eaque labore.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(3005),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 19,
                            Comment = "Esse accusantium assumenda.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(3032),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 47,
                            BookId = 8,
                            Comment = "Eveniet quis praesentium est consectetur excepturi incidunt vel.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(3050),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 48,
                            BookId = 18,
                            Comment = "Quia sapiente consectetur maxime dolor rem eos quod nobis magnam.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(3079),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 49,
                            BookId = 9,
                            Comment = "Nihil optio qui aliquid aut.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(3113),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 50,
                            BookId = 5,
                            Comment = "Non ad velit iusto esse exercitationem et.",
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 332, DateTimeKind.Utc).AddTicks(3136),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "af4b7fec-064a-424d-b119-f5a345b4a689",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cffa5f06-253b-4316-8764-f26fc8d4c236",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6ecef300-a6f7-443e-bea0-4306bedd0211",
                            Email = "Eve.Stracke@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Annamarie Carroll",
                            PhoneNumber = "492.746.4227 x168",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5865931f-9bd2-475e-89af-9539fb059449",
                            TwoFactorEnabled = false,
                            UserName = "Eve.Stracke@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c6af40b1-a30a-4890-977d-0fc1f1a872f8",
                            Email = "Monte4@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Aniya Graham",
                            PhoneNumber = "462.533.1269",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cf6d424a-bcb5-45ff-be59-da5596f99b95",
                            TwoFactorEnabled = false,
                            UserName = "Monte4@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec21a751-ed33-42a8-ad39-02640132f09d",
                            Email = "Hayley15@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Clarissa Dare",
                            PhoneNumber = "1-896-686-2844 x261",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7f3f6a14-3dde-4fdb-b75f-1c193c3be1ee",
                            TwoFactorEnabled = false,
                            UserName = "Hayley15@hotmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dfde58e8-ce66-4b89-a34f-4fc748531375",
                            Email = "Salma_Kling@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Vickie Kuhic",
                            PhoneNumber = "240.712.9256 x770",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4dcd13b1-9def-4dd3-bd6a-9b87da76f72f",
                            TwoFactorEnabled = false,
                            UserName = "Salma_Kling@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "01e3f9ff-6dd4-473d-a2f9-51d70f5fffea",
                            Email = "Mozell.Schinner42@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Carmen Jast",
                            PhoneNumber = "(893) 347-8042 x0076",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f2f262df-2239-4225-a19e-5c29794a627b",
                            TwoFactorEnabled = false,
                            UserName = "Mozell.Schinner42@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "090e13cf-67ca-4f7d-8bd9-0cd17d0c764e",
                            Email = "Dereck_Crona34@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Chance Cartwright",
                            PhoneNumber = "(642) 876-2912",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7bc895e2-f8f1-45bb-b333-9397fef862d7",
                            TwoFactorEnabled = false,
                            UserName = "Dereck_Crona34@hotmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "954f37b7-9294-47f8-8afc-3161d24d7794",
                            Email = "Delfina.Goodwin@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Jacky Corwin",
                            PhoneNumber = "1-700-618-6358",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "98714ec9-b9df-4a5f-a62e-fbcf9e0ac879",
                            TwoFactorEnabled = false,
                            UserName = "Delfina.Goodwin@hotmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4406bfa4-7934-4054-897f-85359ea2b021",
                            Email = "Sherman.Will50@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Myrtis Frami",
                            PhoneNumber = "(843) 698-2521 x91348",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5ded13d4-f230-4c17-990e-e5620c81796b",
                            TwoFactorEnabled = false,
                            UserName = "Sherman.Will50@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7c1b58d6-5c01-46ed-af55-fbdcfa189adc",
                            Email = "Deondre.Harber77@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Mathias Littel",
                            PhoneNumber = "760.420.5432 x097",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cee0fb00-2b4b-42f9-9c3e-bdbde316d6e0",
                            TwoFactorEnabled = false,
                            UserName = "Deondre.Harber77@yahoo.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(454),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(650),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 3,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(660),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 4,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(665),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(670),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 6,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(674),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(678),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(682),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 9,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(686),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 10,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(690),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 11,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(694),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 12,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(698),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 13,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(703),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 14,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(707),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(711),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(715),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 17,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(719),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 18,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(723),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(727),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 20,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(731),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 21,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(735),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 22,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(739),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 23,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(743),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 24,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(747),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 25,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(752),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 26,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(756),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 27,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(760),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 28,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(764),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 29,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(768),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 30,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 9, 8, 56, 32, 334, DateTimeKind.Utc).AddTicks(773),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
