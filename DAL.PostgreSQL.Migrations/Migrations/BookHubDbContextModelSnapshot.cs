// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    partial class BookHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Hudsonville",
                            Country = "Montenegro",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(8571),
                            IsDeleted = false,
                            State = "Vermont",
                            Street = "4943 Gretchen Orchard",
                            ZipCode = "36383"
                        },
                        new
                        {
                            Id = 2,
                            City = "Leonardoburgh",
                            Country = "Myanmar",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9125),
                            IsDeleted = false,
                            State = "Idaho",
                            Street = "88605 Pouros Neck",
                            ZipCode = "66222"
                        },
                        new
                        {
                            Id = 3,
                            City = "Feilborough",
                            Country = "Lithuania",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9245),
                            IsDeleted = false,
                            State = "North Dakota",
                            Street = "3627 Cremin Ramp",
                            ZipCode = "08391-0799"
                        },
                        new
                        {
                            Id = 4,
                            City = "Priceberg",
                            Country = "Nigeria",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9403),
                            IsDeleted = false,
                            State = "Missouri",
                            Street = "8588 George Street",
                            ZipCode = "86896-7731"
                        },
                        new
                        {
                            Id = 5,
                            City = "South Leone",
                            Country = "Morocco",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9528),
                            IsDeleted = false,
                            State = "Georgia",
                            Street = "8752 Green Burgs",
                            ZipCode = "59223-1982"
                        },
                        new
                        {
                            Id = 6,
                            City = "Lindgrenton",
                            Country = "Tuvalu",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9640),
                            IsDeleted = false,
                            State = "Arkansas",
                            Street = "1760 Crist Drive",
                            ZipCode = "89593-7800"
                        },
                        new
                        {
                            Id = 7,
                            City = "Eltonside",
                            Country = "United States Minor Outlying Islands",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9789),
                            IsDeleted = false,
                            State = "Delaware",
                            Street = "0585 Nolan Ferry",
                            ZipCode = "44239-3010"
                        },
                        new
                        {
                            Id = 8,
                            City = "New Augustus",
                            Country = "Samoa",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9874),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "31356 Karina Circle",
                            ZipCode = "35941-9765"
                        },
                        new
                        {
                            Id = 9,
                            City = "Murrayville",
                            Country = "Ireland",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 312, DateTimeKind.Utc).AddTicks(9990),
                            IsDeleted = false,
                            State = "Louisiana",
                            Street = "854 Jerde Junction",
                            ZipCode = "86907"
                        },
                        new
                        {
                            Id = 10,
                            City = "Jovanmouth",
                            Country = "Aruba",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 313, DateTimeKind.Utc).AddTicks(101),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "6368 Dewayne Isle",
                            ZipCode = "70641"
                        },
                        new
                        {
                            Id = 11,
                            City = "Gerardomouth",
                            Country = "Bahrain",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 313, DateTimeKind.Utc).AddTicks(213),
                            IsDeleted = false,
                            State = "Utah",
                            Street = "873 Leannon Ranch",
                            ZipCode = "19795"
                        },
                        new
                        {
                            Id = 12,
                            City = "Bonitatown",
                            Country = "Cayman Islands",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 313, DateTimeKind.Utc).AddTicks(311),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "37677 Price Island",
                            ZipCode = "06623"
                        },
                        new
                        {
                            Id = 13,
                            City = "North Alberta",
                            Country = "Hong Kong",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 313, DateTimeKind.Utc).AddTicks(460),
                            IsDeleted = false,
                            State = "West Virginia",
                            Street = "756 Mavis Square",
                            ZipCode = "29305-1820"
                        },
                        new
                        {
                            Id = 14,
                            City = "Norahaven",
                            Country = "Russian Federation",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 313, DateTimeKind.Utc).AddTicks(582),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "47395 Glover Squares",
                            ZipCode = "99176-7972"
                        },
                        new
                        {
                            Id = 15,
                            City = "Mayerview",
                            Country = "Armenia",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 313, DateTimeKind.Utc).AddTicks(693),
                            IsDeleted = false,
                            State = "Indiana",
                            Street = "193 Larson Lodge",
                            ZipCode = "27664-6784"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Quo facere iusto occaecati eos quo ipsum consequatur animi. Quod ipsa voluptas quam molestiae mollitia suscipit magnam et aut. Aliquid aut eos voluptas mollitia distinctio inventore aut. Omnis voluptatem explicabo nemo sit. Odio aliquid officiis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(8179),
                            IsDeleted = false,
                            Name = "Sedrick Mayert"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Neque magnam possimus similique dolorum non qui cum qui. Et illum et reprehenderit voluptas est sed cupiditate eos quia. Excepturi iure error. Ea quo et sapiente officiis cum exercitationem illum. Voluptatum voluptatem quasi velit recusandae rem. Mollitia eaque repellat enim rerum necessitatibus fugiat.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(8615),
                            IsDeleted = false,
                            Name = "Sheridan Hand"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Deleniti aut quis asperiores tempore doloribus vel autem veniam. Veniam in quibusdam sit animi est ipsum quia non. Veniam minima quod excepturi libero. Esse aliquid inventore. Qui nisi neque rerum nostrum explicabo iusto natus. Quis pariatur hic iusto porro minima deserunt eveniet alias quis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(8767),
                            IsDeleted = false,
                            Name = "Nathaniel Hackett"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Voluptates nesciunt animi qui. Qui sequi nulla et dolores est asperiores nemo consequatur. Nihil quia tempora impedit laborum sit. Veniam quia eius enim ratione fuga non sed quaerat quia. Explicabo unde non unde.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(8920),
                            IsDeleted = false,
                            Name = "Hanna Bogan"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Nulla labore aspernatur accusantium. Quia laborum perferendis tempore et officiis laborum porro alias illum. Sunt amet quia qui et adipisci esse. Sed consequatur aspernatur sed ducimus ut distinctio.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(9040),
                            IsDeleted = false,
                            Name = "Adolfo Hermann"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Sit nesciunt consequatur. Sunt deserunt numquam aut tempore repudiandae dolore occaecati. Ipsum magnam quis expedita.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(9122),
                            IsDeleted = false,
                            Name = "Lavon Glover"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Nisi ducimus sequi facere labore sed voluptatum rerum. Sint et omnis aut dolor sit ut. Ducimus voluptatem ipsa accusantium autem voluptate ut quaerat possimus.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(9197),
                            IsDeleted = false,
                            Name = "Forest Goodwin"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Veniam ut optio cum deserunt ducimus. Blanditiis hic nemo enim tempora maiores. Itaque porro ducimus corporis magni minus quod odit numquam. Eveniet itaque repellat molestias nemo quia voluptatibus esse. Quaerat reiciendis possimus.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(9259),
                            IsDeleted = false,
                            Name = "Ida Hodkiewicz"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Facilis placeat impedit rem sint. Non at nihil dolorum. Porro sunt veritatis voluptas nam voluptatem ex ut. Facilis dolor aut deleniti quia adipisci molestias non porro vitae.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(9354),
                            IsDeleted = false,
                            Name = "Immanuel Runolfsson"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Id voluptatem quisquam autem sapiente voluptatem. Magni veritatis inventore aliquam culpa non iusto mollitia fugit. Laudantium animi accusantium blanditiis est vel impedit pariatur culpa quaerat. Ut magnam in tenetur ut id delectus vitae. Eum neque sit. Est possimus ducimus.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 305, DateTimeKind.Utc).AddTicks(9421),
                            IsDeleted = false,
                            Name = "Johnnie Lubowitz"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 308, DateTimeKind.Utc).AddTicks(8278),
                            Description = "Nisi vero aut a. Fugiat ipsam recusandae temporibus numquam est odio dicta quo. Eius delectus deleniti et. Vitae et hic voluptatem. Animi est modi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 95.69m,
                            PrimaryGenreId = 7,
                            PublisherId = 3,
                            Title = "Architecto numquam similique."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(83),
                            Description = "Eaque id non ab ut similique. Quam blanditiis quo aut iure ut. Facere et nobis in incidunt et sit. Iusto est sequi nihil vitae et repellendus ratione. Voluptatum cupiditate et tempora dolores.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 60.54m,
                            PrimaryGenreId = 7,
                            PublisherId = 2,
                            Title = "Sapiente quo sequi."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(289),
                            Description = "Pariatur delectus ullam ut. Sed beatae culpa mollitia labore itaque consequatur. Est quasi repellat et illum fuga. Sed omnis harum consectetur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 68.67m,
                            PrimaryGenreId = 7,
                            PublisherId = 2,
                            Title = "Veniam commodi illum."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(424),
                            Description = "Odit consectetur qui rerum omnis aut est ipsam fugit. Rerum omnis illo ut dolor aut. Ea quos cum corrupti dolorem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 69.53m,
                            PrimaryGenreId = 2,
                            PublisherId = 1,
                            Title = "Necessitatibus qui fugit."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(496),
                            Description = "Consequuntur omnis eos ut quos deleniti sequi facere dolores. Praesentium enim aut voluptatem. Ratione est corrupti provident dolorum. Sunt exercitationem et quis sit in animi. Fugit quae ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 33.60m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Dicta consequatur iusto."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(606),
                            Description = "Explicabo quas enim non. Molestiae nostrum esse labore molestiae. Consectetur saepe earum. Beatae quaerat repellat et maxime laborum sit voluptatibus facere assumenda. Ut suscipit magni saepe magnam dolor provident expedita veritatis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 36.48m,
                            PrimaryGenreId = 6,
                            PublisherId = 5,
                            Title = "Vero eum corrupti."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(702),
                            Description = "Eveniet eum voluptate delectus iure a deserunt. Id ullam debitis. Molestias ut sapiente.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 11.43m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Qui dolorum qui."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(775),
                            Description = "Ut id culpa enim necessitatibus aliquam. Maxime omnis veniam est itaque in quisquam reprehenderit. Ea veritatis enim enim. Commodi deserunt dolor voluptatem. Unde ipsa aspernatur consequatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 22.94m,
                            PrimaryGenreId = 2,
                            PublisherId = 4,
                            Title = "Voluptatem incidunt maiores."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(872),
                            Description = "Suscipit esse sit excepturi numquam. Eum deleniti molestias voluptatem et quod aut reprehenderit. Eos est nemo est fugiat quas illo et. Deserunt possimus odio et nulla voluptas et. Voluptas alias qui rem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 20.30m,
                            PrimaryGenreId = 3,
                            PublisherId = 5,
                            Title = "Commodi quaerat dolor."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(957),
                            Description = "Quia vitae sit iusto eum expedita et voluptate voluptatum. Unde ad et dolorem iste fugit non qui explicabo labore. Quo porro et deserunt laborum quibusdam ad. Similique sapiente unde.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 46.06m,
                            PrimaryGenreId = 6,
                            PublisherId = 5,
                            Title = "Blanditiis sed minus."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1059),
                            Description = "Officiis aliquam esse enim beatae. Molestiae at deleniti sunt quibusdam sit soluta. Laborum placeat est dicta sunt omnis natus itaque quibusdam ipsa. Neque quisquam rem quas dolor magnam explicabo dolores aperiam eaque. Nostrum et suscipit aut beatae nihil facilis velit hic. Architecto eos necessitatibus consequatur quasi repellat soluta.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 39.76m,
                            PrimaryGenreId = 4,
                            PublisherId = 5,
                            Title = "Aperiam ipsa architecto."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1184),
                            Description = "Numquam molestias perspiciatis quia expedita quae necessitatibus et suscipit maiores. Velit odio nihil. Ut provident sit. Sint eum perferendis vero fuga eligendi. Vero nulla hic.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 80.05m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Nostrum mollitia reiciendis."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1256),
                            Description = "Sunt corporis id numquam ducimus. Ipsam culpa neque repellendus modi nihil tenetur. Dolorem vel exercitationem explicabo ipsa necessitatibus esse voluptatibus voluptatum provident. Nobis quam delectus. Aut animi quis ut aperiam. Quo et eos ut est eum fugit quidem earum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 14.46m,
                            PrimaryGenreId = 7,
                            PublisherId = 5,
                            Title = "Dolore temporibus et."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1423),
                            Description = "Dolor molestiae et labore deleniti. Sint animi quas tempore numquam aspernatur velit explicabo est est. Cumque veniam repellat. Eos illo non rem laboriosam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 31.40m,
                            PrimaryGenreId = 5,
                            PublisherId = 5,
                            Title = "Et rem rerum."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1522),
                            Description = "Odio dolorum quia fugit incidunt ad cumque totam laboriosam similique. Et omnis ad in voluptate ab ut ex culpa. Voluptatum suscipit rerum deserunt sit totam architecto. Illo quo libero suscipit ut sequi cumque placeat quibusdam similique.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 90.57m,
                            PrimaryGenreId = 7,
                            PublisherId = 3,
                            Title = "Nesciunt et ut."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1603),
                            Description = "Fuga hic doloremque omnis. Tempora expedita ut ea ea blanditiis. Suscipit atque odio asperiores illo earum. Illo tempora est qui.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 50.62m,
                            PrimaryGenreId = 3,
                            PublisherId = 2,
                            Title = "Nobis accusamus omnis."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1687),
                            Description = "Assumenda asperiores voluptatem. Et est error et rem qui. Eius sed reiciendis laboriosam earum fugiat. Facilis dolores nihil facere cumque rerum commodi rem sint cumque. Sit quod vel autem ut laboriosam ut. Ipsam soluta deserunt.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 36.82m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Est aut non."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1798),
                            Description = "Dicta est corrupti culpa facilis et pariatur nesciunt non. Eos ad modi nulla sit saepe ut corporis voluptatem eaque. Laboriosam ea ut corrupti porro delectus ipsum. Eum illo dolores iste consequatur impedit. Qui qui et laboriosam illo iste vel. Odio nostrum eaque.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 43.39m,
                            PrimaryGenreId = 7,
                            PublisherId = 5,
                            Title = "Perferendis deleniti sint."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1910),
                            Description = "Repudiandae corrupti sit. Commodi fuga ipsa est voluptatibus fugit maiores sunt ullam perferendis. Ex et natus facilis beatae occaecati ipsam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 73.97m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Omnis ut incidunt."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 309, DateTimeKind.Utc).AddTicks(1968),
                            Description = "Qui delectus repudiandae aspernatur vitae vitae est nemo ea hic. Odit voluptas vel expedita dolor. Et omnis ex iste libero dolor. Aut laudantium rem quia blanditiis in autem et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 25.42m,
                            PrimaryGenreId = 6,
                            PublisherId = 5,
                            Title = "Natus provident fugit."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5756),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5758),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5758),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5759),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5759),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5759),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5759),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5760),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5760),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(1772),
                            CustomerEmail = "Marco_Brown18@gmail.com",
                            CustomerName = "Marco Brown",
                            IsDeleted = false,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(4167),
                            CustomerEmail = "Dewey77@gmail.com",
                            CustomerName = "Dewey Mayert",
                            IsDeleted = false,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(4953),
                            CustomerEmail = "Karen_Krajcik@yahoo.com",
                            CustomerName = "Karen Krajcik",
                            IsDeleted = false,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(5604),
                            CustomerEmail = "Ernest68@hotmail.com",
                            CustomerName = "Ernest Powlowski",
                            IsDeleted = false,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(6078),
                            CustomerEmail = "Sidney.Schmitt2@yahoo.com",
                            CustomerName = "Sidney Schmitt",
                            IsDeleted = false,
                            ShippingAddressId = 9,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(6471),
                            CustomerEmail = "Juan.Nolan90@yahoo.com",
                            CustomerName = "Juan Nolan",
                            IsDeleted = false,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(6983),
                            CustomerEmail = "Delores.Thiel49@gmail.com",
                            CustomerName = "Delores Thiel",
                            IsDeleted = false,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(7480),
                            CustomerEmail = "Wendell_Ruecker@gmail.com",
                            CustomerName = "Wendell Ruecker",
                            IsDeleted = false,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(7888),
                            CustomerEmail = "Jermaine_Satterfield@gmail.com",
                            CustomerName = "Jermaine Satterfield",
                            IsDeleted = false,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(8364),
                            CustomerEmail = "Margarita7@gmail.com",
                            CustomerName = "Margarita Wehner",
                            IsDeleted = false,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(8885),
                            CustomerEmail = "Jessica50@hotmail.com",
                            CustomerName = "Jessica Schamberger",
                            IsDeleted = false,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(9338),
                            CustomerEmail = "Lyle_Kunde@gmail.com",
                            CustomerName = "Lyle Kunde",
                            IsDeleted = false,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 314, DateTimeKind.Utc).AddTicks(9745),
                            CustomerEmail = "Ruth_Will@hotmail.com",
                            CustomerName = "Ruth Will",
                            IsDeleted = false,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 315, DateTimeKind.Utc).AddTicks(172),
                            CustomerEmail = "Christine41@gmail.com",
                            CustomerName = "Christine Reynolds",
                            IsDeleted = false,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 315, DateTimeKind.Utc).AddTicks(625),
                            CustomerEmail = "Brian84@yahoo.com",
                            CustomerName = "Brian Tillman",
                            IsDeleted = false,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(4089),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 47.43m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5215),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 56.41m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5252),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 10.06m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5263),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 97.23m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5270),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 99.75m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5278),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 65.33m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5285),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 66.70m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5293),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 41.72m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5300),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 82.25m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5308),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 44.04m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5315),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 85.27m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5322),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 99.39m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5329),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 41.14m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5336),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 18.17m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5344),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 28.72m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 16,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5350),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 67.68m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 17,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5357),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 38.64m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 18,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5363),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 13.43m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5370),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 34.92m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 20,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5377),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 60.39m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 21,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5383),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 36.98m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 22,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5390),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 93.31m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 23,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5397),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 82.25m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 24,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5405),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 52.63m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 25,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5411),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 79.03m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5418),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 35.02m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 27,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5424),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 42.61m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 28,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5431),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 53.28m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5438),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 38.53m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 30,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5445),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 96.50m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 31,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5501),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 10.18m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 32,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5509),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 84.24m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 33,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5515),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 45.79m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 34,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5522),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 14.47m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5528),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 44.20m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 36,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5536),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 48.46m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 37,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5542),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 29.03m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 38,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5549),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 49.05m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5557),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 43.50m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 40,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5563),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 33.19m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 41,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5570),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 13.77m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 42,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5576),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 94.45m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 43,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5583),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 53.51m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 44,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5589),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 32.95m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 45,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5596),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 31.36m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 46,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5602),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 65.13m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5609),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 22.68m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 48,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5615),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 49.87m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 49,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5622),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 64.69m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 50,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 316, DateTimeKind.Utc).AddTicks(5628),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 59.25m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "In animi et. Iure quam voluptas autem. Cum id quas et aut doloribus aspernatur. Quasi et esse qui. Enim similique adipisci eveniet vero perspiciatis exercitationem rerum. Autem laudantium rerum aut sunt reiciendis sapiente reiciendis aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 307, DateTimeKind.Utc).AddTicks(3897),
                            IsDeleted = false,
                            Name = "Mohr - Mills"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Ducimus nemo amet recusandae et doloremque natus ut dolor ipsa. Ut placeat eos. Omnis autem eaque voluptatem. Illo iste omnis ut.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 307, DateTimeKind.Utc).AddTicks(4561),
                            IsDeleted = false,
                            Name = "Pfannerstill - O'Reilly"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Voluptatem dicta et. Fuga assumenda dolor assumenda quis animi et beatae aut. Iusto fugiat tenetur placeat ab recusandae possimus. Accusantium consequatur voluptas omnis aut eius architecto. Quas et totam quod placeat sed consequatur.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 307, DateTimeKind.Utc).AddTicks(4721),
                            IsDeleted = false,
                            Name = "Glover - Weissnat"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Libero aut commodi eaque illo. Qui reiciendis deleniti dolorum quasi earum. Architecto sunt quidem sint aut iste exercitationem consequuntur. Iusto mollitia ipsam qui. Eaque vel voluptate rem sed earum et.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 307, DateTimeKind.Utc).AddTicks(4903),
                            IsDeleted = false,
                            Name = "Lowe, Nicolas and Turner"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Eos blanditiis et sed harum aut et at minus libero. Ullam impedit esse ea sapiente eos modi. Quis dolore delectus. Nostrum est vero reiciendis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 307, DateTimeKind.Utc).AddTicks(5080),
                            IsDeleted = false,
                            Name = "Rosenbaum, VonRueden and Dach"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            Comment = "Molestias est est nihil quia.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(4520),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            BookId = 20,
                            Comment = "Vel aut nemo voluptatem veniam ut aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5535),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            BookId = 16,
                            Comment = "Quod qui totam.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5603),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 16,
                            Comment = "Eum consequuntur quia dolorem.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5619),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 11,
                            Comment = "Est molestias et officiis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5638),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 6,
                            BookId = 8,
                            Comment = "Doloremque delectus molestiae numquam saepe optio soluta et expedita ratione.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5653),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            BookId = 11,
                            Comment = "Similique fuga repellat est quod cupiditate.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5681),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            BookId = 19,
                            Comment = "Ullam accusantium quis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5700),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            BookId = 9,
                            Comment = "Voluptatum eos corrupti placeat exercitationem in dolores exercitationem ut.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5762),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            BookId = 16,
                            Comment = "Sapiente quasi recusandae ad dolorem blanditiis quia harum labore nostrum.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5789),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 11,
                            BookId = 16,
                            Comment = "Exercitationem sit maxime iusto illo.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5818),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 12,
                            BookId = 13,
                            Comment = "Voluptates atque neque.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5835),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            BookId = 5,
                            Comment = "Qui et ad ut eveniet perferendis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5848),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 14,
                            BookId = 19,
                            Comment = "Ut enim accusantium.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5866),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 15,
                            BookId = 20,
                            Comment = "Optio velit saepe ab optio expedita.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5877),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 16,
                            BookId = 5,
                            Comment = "Cum illum labore soluta molestiae.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5893),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 17,
                            BookId = 5,
                            Comment = "Voluptate laborum omnis repudiandae eum fuga nisi incidunt et est.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5929),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 18,
                            BookId = 19,
                            Comment = "Delectus sed exercitationem aut ut nostrum aspernatur qui ut sint.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5954),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 19,
                            BookId = 1,
                            Comment = "Saepe totam amet iusto saepe reprehenderit ut iusto culpa aspernatur.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(5978),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 20,
                            BookId = 19,
                            Comment = "Minus laboriosam ab sunt sit quisquam.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6002),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 21,
                            BookId = 12,
                            Comment = "Commodi sequi quis occaecati sunt dolorem aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6021),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 22,
                            BookId = 14,
                            Comment = "Accusantium molestias harum qui quasi iure et accusamus reprehenderit.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6042),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 23,
                            BookId = 17,
                            Comment = "Quo ratione quasi praesentium non.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6062),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 24,
                            BookId = 7,
                            Comment = "Quae ab temporibus voluptatem nihil dolorem placeat.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6167),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 25,
                            BookId = 11,
                            Comment = "Ad voluptatibus labore beatae est est.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6187),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 26,
                            BookId = 7,
                            Comment = "Tempore officiis consequatur.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6204),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 27,
                            BookId = 17,
                            Comment = "In consequatur tempora itaque nam occaecati reiciendis et qui.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6217),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 28,
                            BookId = 1,
                            Comment = "Consequuntur distinctio illum error rerum perspiciatis fugit omnis impedit dolorem.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6242),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 11,
                            Comment = "At ex doloremque nihil culpa enim odio sit.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6268),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 30,
                            BookId = 2,
                            Comment = "Nisi totam dolor.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6286),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 31,
                            BookId = 6,
                            Comment = "Sunt repellat aliquam.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6298),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 32,
                            BookId = 16,
                            Comment = "Facilis consequuntur sed repellat.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6340),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 33,
                            BookId = 14,
                            Comment = "Aut saepe perferendis perspiciatis perferendis voluptas et numquam placeat maxime.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6352),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 34,
                            BookId = 7,
                            Comment = "Voluptas minus asperiores provident maxime odit dolores sed earum.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6376),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 35,
                            BookId = 12,
                            Comment = "Quam saepe debitis necessitatibus ut id quisquam at reiciendis voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6402),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 36,
                            BookId = 1,
                            Comment = "Cum commodi eum asperiores et ut asperiores nobis illum at.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6428),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 37,
                            BookId = 9,
                            Comment = "Inventore fugit sed sit ipsum quo quia ipsa quo facilis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6450),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 38,
                            BookId = 19,
                            Comment = "Et enim dolorum dicta sapiente.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6475),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 39,
                            BookId = 16,
                            Comment = "Placeat aspernatur adipisci qui ex et perferendis aliquid rerum deleniti.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6507),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 40,
                            BookId = 6,
                            Comment = "Eos odit non.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6534),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 41,
                            BookId = 15,
                            Comment = "Iure iste dolor.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6546),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 42,
                            BookId = 6,
                            Comment = "Aut atque quas cupiditate.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6557),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 43,
                            BookId = 19,
                            Comment = "Aut eos aut.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6570),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 44,
                            BookId = 1,
                            Comment = "Omnis sequi officia rerum quasi ducimus labore et aut corrupti.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6581),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 45,
                            BookId = 16,
                            Comment = "Sed sit recusandae possimus illum et omnis dolor quis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6665),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 46,
                            BookId = 9,
                            Comment = "Ea voluptate soluta cumque beatae necessitatibus inventore.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6684),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 8
                        },
                        new
                        {
                            Id = 47,
                            BookId = 11,
                            Comment = "Dolores fuga ipsa quis.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6703),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 48,
                            BookId = 1,
                            Comment = "Fuga inventore et.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6715),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 49,
                            BookId = 8,
                            Comment = "Quos animi nihil repellat consequatur.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6727),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 50,
                            BookId = 15,
                            Comment = "Voluptas velit omnis consectetur est.",
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 310, DateTimeKind.Utc).AddTicks(6742),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9d7cf6e6-339d-47e4-9f3a-9705318029df",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6c9cbbca-970a-4f21-9d92-9ff7788c19ff",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2eb72fa8-eb6b-4666-a48d-90b793d67460",
                            Email = "Vella.Kozey@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Dwight Considine",
                            PhoneNumber = "891.696.7718",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "51ff2db4-9776-433b-8af7-5200b36ff34e",
                            TwoFactorEnabled = false,
                            UserName = "Vella.Kozey@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2581bbd-9698-4930-9b07-5295ca502751",
                            Email = "Mya.Schmitt76@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Eva Morissette",
                            PhoneNumber = "747-537-6709 x16943",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3996e9f-ec60-46c2-94bf-d8eee2551272",
                            TwoFactorEnabled = false,
                            UserName = "Mya.Schmitt76@hotmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a9196a24-81fb-4251-a3d1-77d2888705cb",
                            Email = "Blaze_Schuster36@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Ramiro Cormier",
                            PhoneNumber = "(450) 362-3959",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "688fa992-5d60-4527-bda6-b2c1b3e900cd",
                            TwoFactorEnabled = false,
                            UserName = "Blaze_Schuster36@hotmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0bc4241f-4524-4144-aacf-5ef235b7b3eb",
                            Email = "Geovanni72@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Dustin Gutkowski",
                            PhoneNumber = "(964) 214-2124 x472",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2ce47774-5946-4acb-bbf8-c96e04deed31",
                            TwoFactorEnabled = false,
                            UserName = "Geovanni72@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9529d757-7d32-4c8a-ad75-80c8016ddaf0",
                            Email = "Savion.Jacobi@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Katarina Sanford",
                            PhoneNumber = "311-545-2157 x7094",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0ccf0104-606a-4c42-bca9-5dea04324188",
                            TwoFactorEnabled = false,
                            UserName = "Savion.Jacobi@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "be88f3f8-68b7-4d1f-8b87-bdd952a0e0ca",
                            Email = "Corine.DuBuque6@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Brando Mertz",
                            PhoneNumber = "1-516-503-4451",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b02ffc91-0701-4b57-ad1c-bcc2e4e3a5a7",
                            TwoFactorEnabled = false,
                            UserName = "Corine.DuBuque6@hotmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "25139ef5-03d0-4518-b2cc-57a583f85573",
                            Email = "Jaren_Leannon@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Raymond Schulist",
                            PhoneNumber = "209.653.2355 x501",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "029fdcdf-1fe4-4647-ab22-168cd96cdc84",
                            TwoFactorEnabled = false,
                            UserName = "Jaren_Leannon@yahoo.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "70db9879-e52f-4a83-8849-b90633457e9e",
                            Email = "Grayce.Willms3@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Ova Bayer",
                            PhoneNumber = "581.621.4560",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "390e05a1-2d26-4bd1-8612-c0faaf50b0a0",
                            TwoFactorEnabled = false,
                            UserName = "Grayce.Willms3@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6e85690-f782-4a1f-9256-5e62591ee5f9",
                            Email = "Zakary23@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Marlene Prosacco",
                            PhoneNumber = "728.616.3312",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "47e2a451-ec05-4b46-9c95-80b6a86d2a2e",
                            TwoFactorEnabled = false,
                            UserName = "Zakary23@hotmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(7958),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8077),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8082),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8085),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8087),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 6,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8090),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8093),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8095),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8098),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8101),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 11,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8104),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 12,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8106),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8109),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 14,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8112),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 15,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8115),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8117),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8150),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 18,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8153),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 19,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8156),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 20,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8159),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 21,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8162),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 22,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8164),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 23,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8167),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8170),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 25,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8173),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 26,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8176),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 27,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8179),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 28,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8181),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 29,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8184),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 30,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 11, 10, 37, 15, 311, DateTimeKind.Utc).AddTicks(8187),
                            IsDeleted = false,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
