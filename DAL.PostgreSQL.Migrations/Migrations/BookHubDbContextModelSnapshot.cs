// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    partial class BookHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New Jamar",
                            Country = "Canada",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 328, DateTimeKind.Utc).AddTicks(8910),
                            IsDeleted = false,
                            State = "Kentucky",
                            Street = "3056 Rebekah Village",
                            ZipCode = "29845-4086"
                        },
                        new
                        {
                            Id = 2,
                            City = "Isadorefort",
                            Country = "Puerto Rico",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 328, DateTimeKind.Utc).AddTicks(9523),
                            IsDeleted = false,
                            State = "Michigan",
                            Street = "583 Schmidt Mill",
                            ZipCode = "36528"
                        },
                        new
                        {
                            Id = 3,
                            City = "Angelmouth",
                            Country = "New Caledonia",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 328, DateTimeKind.Utc).AddTicks(9733),
                            IsDeleted = false,
                            State = "Kansas",
                            Street = "576 Erdman Islands",
                            ZipCode = "36181"
                        },
                        new
                        {
                            Id = 4,
                            City = "Elmerton",
                            Country = "Sierra Leone",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 328, DateTimeKind.Utc).AddTicks(9879),
                            IsDeleted = false,
                            State = "Mississippi",
                            Street = "15808 Barbara Camp",
                            ZipCode = "33210-9336"
                        },
                        new
                        {
                            Id = 5,
                            City = "Port Magali",
                            Country = "Puerto Rico",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(15),
                            IsDeleted = false,
                            State = "Rhode Island",
                            Street = "91770 Konopelski Locks",
                            ZipCode = "55705-4571"
                        },
                        new
                        {
                            Id = 6,
                            City = "Olaport",
                            Country = "Mayotte",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(151),
                            IsDeleted = false,
                            State = "Rhode Island",
                            Street = "700 Bessie Junctions",
                            ZipCode = "77845-2773"
                        },
                        new
                        {
                            Id = 7,
                            City = "West Kamilleview",
                            Country = "Luxembourg",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(280),
                            IsDeleted = false,
                            State = "Alabama",
                            Street = "9631 Hickle Station",
                            ZipCode = "31812"
                        },
                        new
                        {
                            Id = 8,
                            City = "Boehmtown",
                            Country = "Armenia",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(423),
                            IsDeleted = false,
                            State = "Hawaii",
                            Street = "37967 Delores Court",
                            ZipCode = "41290-5621"
                        },
                        new
                        {
                            Id = 9,
                            City = "New Linwood",
                            Country = "Bahrain",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(572),
                            IsDeleted = false,
                            State = "Mississippi",
                            Street = "77885 Sydni Cape",
                            ZipCode = "61144-4711"
                        },
                        new
                        {
                            Id = 10,
                            City = "West Bella",
                            Country = "Norfolk Island",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(671),
                            IsDeleted = false,
                            State = "Kentucky",
                            Street = "7870 Eleonore Inlet",
                            ZipCode = "79721-6837"
                        },
                        new
                        {
                            Id = 11,
                            City = "Prestonmouth",
                            Country = "Panama",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(784),
                            IsDeleted = false,
                            State = "South Carolina",
                            Street = "1813 Farrell Trail",
                            ZipCode = "59671"
                        },
                        new
                        {
                            Id = 12,
                            City = "North Chelsie",
                            Country = "Azerbaijan",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(940),
                            IsDeleted = false,
                            State = "Indiana",
                            Street = "0365 King Tunnel",
                            ZipCode = "96087-7173"
                        },
                        new
                        {
                            Id = 13,
                            City = "Port Moisesshire",
                            Country = "Belize",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(1073),
                            IsDeleted = false,
                            State = "Rhode Island",
                            Street = "1607 Samson Walk",
                            ZipCode = "44786-3159"
                        },
                        new
                        {
                            Id = 14,
                            City = "Port Giuseppebury",
                            Country = "Norfolk Island",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(1203),
                            IsDeleted = false,
                            State = "Rhode Island",
                            Street = "897 Myra Ferry",
                            ZipCode = "42368"
                        },
                        new
                        {
                            Id = 15,
                            City = "Majorstad",
                            Country = "Japan",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 329, DateTimeKind.Utc).AddTicks(1357),
                            IsDeleted = false,
                            State = "Massachusetts",
                            Street = "7680 Zoe Plains",
                            ZipCode = "31405-2167"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Ipsa qui non in asperiores. Illo sed neque sit. Nemo quam non voluptatibus dolorem animi. Ab voluptatem aut earum sed eum cum. Qui quo debitis maxime quis accusamus optio. Ullam reprehenderit qui et consequatur illum voluptas ullam.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(7968),
                            IsDeleted = false,
                            Name = "Braulio Kerluke"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Aut occaecati laboriosam culpa. Inventore accusantium iure eum. Aut minus ea unde eius numquam. Asperiores aut in tenetur aut non sint. Eum esse iure.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(8378),
                            IsDeleted = false,
                            Name = "Darrin Schuppe"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Consequuntur ut excepturi alias nobis sed sit. Quo voluptas fugiat expedita animi beatae molestiae accusamus hic quis. Exercitationem quis qui adipisci.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(8480),
                            IsDeleted = false,
                            Name = "Erna Parker"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Id laboriosam ea. Repellat a adipisci molestias. Ad numquam eum aperiam quia quisquam expedita. Amet sed quasi neque ut iusto omnis. Accusantium quibusdam voluptatem quisquam dignissimos sunt fuga eveniet labore itaque.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(8594),
                            IsDeleted = false,
                            Name = "Ceasar Homenick"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Repellat inventore expedita. Qui et inventore sed repudiandae inventore eos commodi delectus nam. Praesentium facilis qui numquam fugit incidunt quam. Distinctio odit delectus atque nihil.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(8697),
                            IsDeleted = false,
                            Name = "Laverne Miller"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Et qui magnam repellat sunt laboriosam quos et. Iste laboriosam neque odit amet explicabo ut. In nobis quia impedit natus accusantium.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(8806),
                            IsDeleted = false,
                            Name = "Gayle Cummerata"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Nemo qui eius est. Ut tenetur beatae et doloribus voluptas sunt. Deleniti magni iure aut voluptatem. Ut perspiciatis in doloremque. Hic rem sapiente ea voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(8868),
                            IsDeleted = false,
                            Name = "Leatha Gulgowski"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Esse sint illo tenetur delectus voluptatem officiis modi illum voluptatem. Sit quaerat officia. Vel id velit soluta molestiae libero sint sint. Animi sint cupiditate et omnis. Modi quos soluta est omnis ea consequuntur aut. Eaque molestiae libero optio perferendis corrupti sit aut iusto.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(8976),
                            IsDeleted = false,
                            Name = "Francisca Heathcote"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Accusantium dolore ad cupiditate blanditiis impedit. Ipsam quo id dolorum sint accusamus. Sit ducimus praesentium quia fugiat expedita est quos dolorum dolor. Quibusdam nostrum rem ut earum doloremque repellat qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(9104),
                            IsDeleted = false,
                            Name = "Candelario Tremblay"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Voluptatum ducimus nostrum unde tenetur illo doloribus. Voluptatem repellendus quia nihil illum enim ad harum. Reprehenderit facere voluptas nihil. Est placeat explicabo sunt in. Aut sed dicta ut ipsa sed numquam qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 320, DateTimeKind.Utc).AddTicks(9186),
                            IsDeleted = false,
                            Name = "Arden Keebler"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(871),
                            Description = "Enim quis et voluptas non laudantium eos. Iure aut sint doloribus tenetur aut. Nobis qui autem illum optio dicta quia blanditiis earum sed. Voluptas modi delectus rerum. Natus possimus eveniet libero ipsa facere iusto labore. Inventore earum sit blanditiis numquam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 88.94m,
                            PrimaryGenreId = 4,
                            PublisherId = 5,
                            Title = "Perferendis nemo sit."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(2814),
                            Description = "Rem non quaerat voluptatum aut consequuntur aut error. Qui voluptas autem sit ad non possimus labore tempore. Facere id porro. Laudantium sunt dolor rem explicabo aut asperiores dolores. Quisquam ea est facilis. Sit et eum quia ad.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 77.36m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Praesentium alias eum."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3009),
                            Description = "Deserunt exercitationem et minima possimus repellat deleniti quam et. Numquam ut delectus sed aliquam. Quaerat suscipit debitis. Non laboriosam omnis libero exercitationem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 49.54m,
                            PrimaryGenreId = 6,
                            PublisherId = 5,
                            Title = "Officia sit optio."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3097),
                            Description = "Recusandae voluptatem exercitationem sit blanditiis eaque cumque fuga. Non voluptates soluta perspiciatis earum aspernatur quam. Ad vel dolor facere reprehenderit quia quis quam dolorum temporibus. Enim repellat ducimus rem harum sint illo. Qui doloremque ut et quasi similique nisi ipsum earum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 41.63m,
                            PrimaryGenreId = 6,
                            PublisherId = 4,
                            Title = "Eum corrupti libero."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3249),
                            Description = "Commodi laboriosam qui. Ut non quaerat voluptas. Nemo nihil accusamus temporibus qui consequatur qui aut exercitationem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 24.11m,
                            PrimaryGenreId = 7,
                            PublisherId = 5,
                            Title = "Accusantium et sit."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3311),
                            Description = "Commodi similique ut quia id et. Soluta illo unde ut. Omnis tempore mollitia eos et ea voluptatem sed aut est. Ducimus et qui in quam unde. Debitis sequi accusamus quod et corrupti beatae voluptatem consequuntur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 16.75m,
                            PrimaryGenreId = 3,
                            PublisherId = 3,
                            Title = "Quam qui ut."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3424),
                            Description = "Nisi alias quibusdam in labore blanditiis quam doloremque. Dolore soluta est tempora qui aut dicta. Sint praesentium odio maxime quae libero praesentium ea. Vitae expedita quod omnis laudantium maiores eaque. Nisi est tempora. Ea id odit sed facere natus illo modi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 50.45m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Sed rerum sunt."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3605),
                            Description = "Quo consectetur aut quia molestiae aperiam quo dicta qui id. Voluptates similique nam accusantium impedit libero optio consequatur nobis fugit. Ad soluta illum enim est earum. Dolores aut et voluptas aspernatur.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 24.16m,
                            PrimaryGenreId = 2,
                            PublisherId = 1,
                            Title = "Et eum est."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3771),
                            Description = "Et cum pariatur optio voluptates ipsa. Quisquam aliquam maxime ducimus neque vel accusantium. Et ut quis nam reprehenderit nostrum ipsum odit qui dolorem. Quis necessitatibus voluptatibus ducimus aspernatur est at sit deleniti. Consequatur perferendis dolorem. Nesciunt architecto quia sed.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 33.89m,
                            PrimaryGenreId = 1,
                            PublisherId = 2,
                            Title = "Sed molestias velit."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(3885),
                            Description = "Laborum sed cum ut voluptatem hic quis sapiente harum. Consequatur officia et qui earum mollitia ea expedita ut voluptatem. Autem voluptas nesciunt officia eum vel culpa odio. Velit quas rem ea eveniet quam qui sint omnis. Et magnam aut dolorem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 93.67m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Consectetur velit voluptatem."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4015),
                            Description = "Pariatur aliquid id dicta iste vel sed accusamus. Eos maxime magnam dolores provident et consectetur accusantium deleniti. Voluptas excepturi id molestiae impedit dignissimos modi officia ducimus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 35.89m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Ad vel cumque."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4113),
                            Description = "Rerum facilis et beatae ut sunt facilis nemo a. Ea ducimus quod placeat consequatur aperiam nisi. Possimus aut aperiam modi voluptas ab nostrum consequatur. Corrupti enim labore vel itaque modi eveniet neque rerum omnis. Totam placeat et nam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 94.76m,
                            PrimaryGenreId = 3,
                            PublisherId = 2,
                            Title = "Nam ipsam et."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4212),
                            Description = "Et blanditiis voluptas voluptatibus est provident quod praesentium id dolore. Eius corrupti magnam autem ea ea. Nostrum quasi deleniti eos possimus. Modi enim labore id sit. Provident impedit rem earum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 52.47m,
                            PrimaryGenreId = 7,
                            PublisherId = 5,
                            Title = "Recusandae at architecto."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4322),
                            Description = "A delectus eos fugiat distinctio veritatis placeat eveniet. Tempora odio quae mollitia a soluta praesentium. Nemo eos ea eligendi molestias odit excepturi accusamus natus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 57.60m,
                            PrimaryGenreId = 3,
                            PublisherId = 4,
                            Title = "Eligendi sit animi."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4418),
                            Description = "Recusandae exercitationem laborum quo est. Saepe sapiente et cumque. Illum excepturi distinctio debitis nisi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 31.22m,
                            PrimaryGenreId = 4,
                            PublisherId = 2,
                            Title = "Qui incidunt quis."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4469),
                            Description = "Molestiae laborum qui. Quis neque qui in et nostrum eum odit non. Corporis accusamus tenetur non commodi eveniet delectus. Labore inventore esse ea ea perspiciatis est. Natus vel eveniet repellendus.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 66.35m,
                            PrimaryGenreId = 1,
                            PublisherId = 4,
                            Title = "Ea et aut."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4578),
                            Description = "Esse vitae qui sit et. A minima quibusdam reprehenderit culpa. Quibusdam ipsum pariatur placeat maiores. Corrupti repudiandae non. Reiciendis est neque vel aliquam ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 39.94m,
                            PrimaryGenreId = 6,
                            PublisherId = 1,
                            Title = "Aut aut explicabo."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4650),
                            Description = "Libero est est a et eos quod sed. Eaque cumque dolor non in ut vitae voluptas doloremque. Quia alias debitis blanditiis autem sed modi.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 95.99m,
                            PrimaryGenreId = 4,
                            PublisherId = 4,
                            Title = "Dolor voluptas praesentium."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4729),
                            Description = "At sint totam perspiciatis. Nobis sapiente repudiandae occaecati atque sit tempore. Eos eveniet vel similique nesciunt consequatur est sunt eum ut. Quia dicta qui iusto quod. Neque perferendis voluptatem.",
                            EditCount = 0,
                            ImagePath = "/images/cover-10.jpg",
                            IsDeleted = false,
                            Price = 13.29m,
                            PrimaryGenreId = 1,
                            PublisherId = 4,
                            Title = "In rem et."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 324, DateTimeKind.Utc).AddTicks(4860),
                            Description = "Dignissimos explicabo dignissimos maiores. Temporibus eum ea rem et voluptatem doloremque. Et perferendis eaque laborum nam quibusdam sint facere vitae et. Optio sapiente ut eum neque.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 32.26m,
                            PrimaryGenreId = 2,
                            PublisherId = 1,
                            Title = "Consequatur eos minus."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2964),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2966),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2966),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2966),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2967),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2967),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2967),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2967),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2968),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GiftCardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceReduction")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderState")
                        .HasColumnType("integer");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 330, DateTimeKind.Utc).AddTicks(4985),
                            CustomerEmail = "Darlene97@yahoo.com",
                            CustomerName = "Darlene O'Connell",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 330, DateTimeKind.Utc).AddTicks(8343),
                            CustomerEmail = "Cristina.Hayes@hotmail.com",
                            CustomerName = "Cristina Hayes",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 330, DateTimeKind.Utc).AddTicks(9579),
                            CustomerEmail = "Archie.Mills@hotmail.com",
                            CustomerName = "Archie Mills",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(199),
                            CustomerEmail = "Caroline29@hotmail.com",
                            CustomerName = "Caroline Johns",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(806),
                            CustomerEmail = "Rex92@hotmail.com",
                            CustomerName = "Rex Bahringer",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(1498),
                            CustomerEmail = "Loretta_Bogisich37@yahoo.com",
                            CustomerName = "Loretta Bogisich",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(2150),
                            CustomerEmail = "Carlos_Kuhic84@hotmail.com",
                            CustomerName = "Carlos Kuhic",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(2807),
                            CustomerEmail = "Jose69@hotmail.com",
                            CustomerName = "Jose Howell",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(3454),
                            CustomerEmail = "Clayton18@hotmail.com",
                            CustomerName = "Clayton Gorczany",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(4068),
                            CustomerEmail = "Latoya30@yahoo.com",
                            CustomerName = "Latoya Wilkinson",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(4632),
                            CustomerEmail = "Nicholas.Hackett@gmail.com",
                            CustomerName = "Nicholas Hackett",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(5302),
                            CustomerEmail = "Earnest.Ebert57@gmail.com",
                            CustomerName = "Earnest Ebert",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(5910),
                            CustomerEmail = "Jack24@gmail.com",
                            CustomerName = "Jack Emmerich",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 4,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(6467),
                            CustomerEmail = "Edith_Johns@gmail.com",
                            CustomerName = "Edith Johns",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 331, DateTimeKind.Utc).AddTicks(7106),
                            CustomerEmail = "Timothy27@gmail.com",
                            CustomerName = "Timothy Becker",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(1082),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 31.42m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2279),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 36.95m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2333),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 77.28m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2345),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 37.20m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2354),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 69.23m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2361),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 85.44m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2369),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 58.86m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2376),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 91.85m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2426),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 47.90m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2435),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 19.28m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2442),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 38.09m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2450),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 44.32m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2457),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 79.65m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 14,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2464),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 94.12m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2471),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 17.87m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 16,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2478),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 18.16m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 17,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2485),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 40.13m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 18,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2492),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 21.66m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 19,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2554),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 12.75m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 20,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2562),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 72.15m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 21,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2569),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 20.98m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 22,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2576),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 24.49m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 23,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2583),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 16.56m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 24,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2590),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 29.07m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 25,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2597),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 69.02m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 26,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2605),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 38.51m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 27,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2611),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 85.12m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 28,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2618),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 96.91m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2625),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 58.81m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 30,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2633),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 17.97m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 31,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2639),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 48.77m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2646),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 64.35m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 33,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2653),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 63.15m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 34,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2660),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 57.14m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2666),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 20.58m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 36,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2673),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 63.48m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 37,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2680),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 50.57m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 38,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2688),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 14.66m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2694),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 67.90m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 40,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2701),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 73.43m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 41,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2738),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 85.73m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 42,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2746),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 65.56m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 43,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2754),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 95.97m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 44,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2761),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 26.21m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 45,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2768),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 57.46m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 46,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2774),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 24.66m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2782),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 42.04m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 48,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2789),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 42.96m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 49,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2796),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 51.90m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 50,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 333, DateTimeKind.Utc).AddTicks(2803),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 38.79m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Eum esse debitis aspernatur eos nihil facilis. Eum laudantium quam. Ab sit nam aut suscipit nam et porro est. Autem rem error ut voluptas.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 322, DateTimeKind.Utc).AddTicks(4471),
                            IsDeleted = false,
                            Name = "Borer and Sons"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Quam rerum doloribus facilis in nulla quod unde qui aut. Eum debitis laudantium ipsa doloremque. Consequatur maiores quo est eius est delectus itaque excepturi ab. Aut voluptate rerum facere et omnis maxime qui animi.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 322, DateTimeKind.Utc).AddTicks(5091),
                            IsDeleted = false,
                            Name = "Dickens - Langworth"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Molestias adipisci est magnam voluptatem. Ut provident cumque molestiae omnis dolore veniam et deleniti. Nisi voluptatem est vero inventore.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 322, DateTimeKind.Utc).AddTicks(5290),
                            IsDeleted = false,
                            Name = "Fadel, Thiel and Ebert"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Soluta doloribus omnis quibusdam non enim dolores. Fugiat optio itaque velit nulla ea voluptatibus voluptatem sunt eum. Harum ex et tempore explicabo deserunt debitis. Ipsam quia quidem voluptatem. Nihil fugiat velit est sint aut autem aut. Fuga aperiam animi aspernatur eveniet eos nihil dolores.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 322, DateTimeKind.Utc).AddTicks(5488),
                            IsDeleted = false,
                            Name = "Schowalter, Rath and Hoppe"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Assumenda et illum. Occaecati dolorum architecto qui est numquam. Cum molestiae itaque saepe maxime.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 322, DateTimeKind.Utc).AddTicks(5751),
                            IsDeleted = false,
                            Name = "Schoen - Botsford"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Comment = "Ut in voluptates sequi.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 325, DateTimeKind.Utc).AddTicks(8943),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            BookId = 5,
                            Comment = "Et nobis nulla placeat est porro sunt accusamus aliquam ullam.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(128),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            BookId = 11,
                            Comment = "Et accusantium ut sed quia temporibus dicta omnis.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(245),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            BookId = 12,
                            Comment = "Odit dolore quidem reiciendis ut qui nam suscipit illum sint.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(272),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            Comment = "Illo voluptatem molestiae sunt quia iure.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(301),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 4,
                            Comment = "Cumque dolores est quibusdam aperiam.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(320),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            BookId = 2,
                            Comment = "Est laboriosam officia.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(334),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            BookId = 13,
                            Comment = "Aut enim ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(348),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            BookId = 11,
                            Comment = "Laudantium laborum hic occaecati similique exercitationem saepe ea.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(360),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 10,
                            BookId = 16,
                            Comment = "Officiis vel in velit.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(385),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 16,
                            Comment = "Ut veniam at quod.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(399),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 12,
                            BookId = 6,
                            Comment = "Eligendi officiis nisi et maiores nihil expedita.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(441),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 13,
                            BookId = 7,
                            Comment = "Minus similique rerum ullam.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(461),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 14,
                            BookId = 15,
                            Comment = "Quibusdam harum commodi.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(475),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 15,
                            BookId = 9,
                            Comment = "Asperiores consequatur corrupti odio.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(486),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 16,
                            BookId = 18,
                            Comment = "Aut in saepe id adipisci ea quod aliquam voluptatem ipsa.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(499),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 17,
                            BookId = 6,
                            Comment = "Adipisci ab quisquam illo.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(523),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 4,
                            Comment = "Quia ipsa consequuntur labore non nesciunt rem quam sint.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(536),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 19,
                            BookId = 17,
                            Comment = "Magnam ex rerum non.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(557),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 20,
                            BookId = 17,
                            Comment = "Officiis debitis esse eum quo enim.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(598),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 21,
                            BookId = 6,
                            Comment = "Minus ut alias nobis.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(616),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 22,
                            BookId = 18,
                            Comment = "Nihil consequatur aperiam recusandae porro magni quibusdam eius in hic.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(630),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 23,
                            BookId = 15,
                            Comment = "Saepe odio voluptatibus hic atque maxime officiis blanditiis omnis.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(654),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 24,
                            BookId = 20,
                            Comment = "Aut non delectus.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(676),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 25,
                            BookId = 3,
                            Comment = "Consectetur necessitatibus corporis voluptates qui eligendi et qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(687),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 26,
                            BookId = 16,
                            Comment = "Et expedita sequi libero.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(708),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 27,
                            BookId = 18,
                            Comment = "Molestiae eos non ea fugit commodi rem.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(721),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 28,
                            BookId = 10,
                            Comment = "Molestiae quas optio temporibus officiis minus numquam veritatis quidem inventore.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(756),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 29,
                            BookId = 11,
                            Comment = "Possimus nihil sint libero nobis ipsum nisi.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(782),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 30,
                            BookId = 18,
                            Comment = "Itaque possimus voluptatibus ut est dolor quae.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(800),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 31,
                            BookId = 3,
                            Comment = "Exercitationem repudiandae dolores molestiae et repellat quos dolore et est.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(817),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 32,
                            BookId = 9,
                            Comment = "Culpa ex fuga debitis dolorum rerum nemo eos beatae.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(841),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 33,
                            BookId = 16,
                            Comment = "Rerum ut molestiae.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(864),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 34,
                            BookId = 15,
                            Comment = "Similique saepe nesciunt modi voluptates nihil tempore quaerat quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(876),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 35,
                            BookId = 18,
                            Comment = "Accusamus fugit sunt quisquam.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(963),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 36,
                            BookId = 18,
                            Comment = "Facere molestias magni hic.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(978),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 37,
                            BookId = 8,
                            Comment = "Quia iusto ullam sapiente vero iste magni possimus.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(991),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 38,
                            BookId = 5,
                            Comment = "Et molestiae quod quos repellat.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1011),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 39,
                            BookId = 6,
                            Comment = "Natus fuga vitae voluptatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1025),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 40,
                            BookId = 12,
                            Comment = "Inventore omnis deleniti perferendis nesciunt et commodi nesciunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1037),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 41,
                            BookId = 1,
                            Comment = "Dolorem blanditiis vel maxime.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1055),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 42,
                            BookId = 18,
                            Comment = "Asperiores consequuntur dolores aliquid ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1069),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 43,
                            BookId = 6,
                            Comment = "Ad culpa pariatur deleniti inventore non hic nihil consequatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1085),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 44,
                            BookId = 9,
                            Comment = "Debitis corporis deserunt id.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1151),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 45,
                            BookId = 13,
                            Comment = "Occaecati aperiam voluptatum error est magnam culpa minima temporibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1165),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 46,
                            BookId = 1,
                            Comment = "Quis libero voluptatibus tempora quia numquam reprehenderit quasi.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1187),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 47,
                            BookId = 12,
                            Comment = "Quas iusto dolorum ab nobis occaecati.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1207),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 48,
                            BookId = 4,
                            Comment = "Perspiciatis ut sed dolorem.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1222),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 49,
                            BookId = 16,
                            Comment = "Saepe similique sint mollitia et aut dolores ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1235),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 50,
                            BookId = 18,
                            Comment = "Maiores unde voluptatem ipsum velit incidunt molestiae deserunt.",
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 326, DateTimeKind.Utc).AddTicks(1254),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4674faa2-a6bf-4729-b826-405dd07557e9",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a1e24f02-dab7-4d54-8814-8ae1991e503b",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fe9aad00-ab55-4f3f-9498-d5892aa75fe6",
                            Email = "Jordan.Kshlerin81@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Kristofer Jones",
                            PhoneNumber = "(651) 242-2896 x51689",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3d8fb9e-44aa-4902-82cd-b7f5d0993517",
                            TwoFactorEnabled = false,
                            UserName = "Jordan.Kshlerin81@yahoo.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d4179361-2190-4ae5-b93d-aedca48983cf",
                            Email = "Gabe93@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Hanna Langworth",
                            PhoneNumber = "1-658-594-4575 x584",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "634ef4d7-461c-41a5-8872-fd25fbfe69f9",
                            TwoFactorEnabled = false,
                            UserName = "Gabe93@yahoo.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0bd07aa9-ac37-4a79-a6ec-9c9fe97565d6",
                            Email = "Iva.Raynor63@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Herminio Dietrich",
                            PhoneNumber = "(878) 743-3537",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "80b16d4d-b439-43bc-95ac-cfd373f30334",
                            TwoFactorEnabled = false,
                            UserName = "Iva.Raynor63@yahoo.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38c211e1-c1ef-4f98-8c40-92f61ff16a54",
                            Email = "Zoie_Schmidt58@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Rosalia Renner",
                            PhoneNumber = "269-574-2258 x67373",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b5e90367-70ed-4817-a806-0bbd07a206e3",
                            TwoFactorEnabled = false,
                            UserName = "Zoie_Schmidt58@yahoo.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e50c9a4-139d-4cd5-8a73-979e08953718",
                            Email = "Rebekah_Dickens55@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Madeline Hessel",
                            PhoneNumber = "401.930.4676",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c70bdc86-07c9-4330-ab30-d030adba447d",
                            TwoFactorEnabled = false,
                            UserName = "Rebekah_Dickens55@yahoo.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "607b87f2-e6ea-419a-bcd4-7216b6666ba9",
                            Email = "Daniela24@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Keyshawn Frami",
                            PhoneNumber = "(262) 594-6482 x62295",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a6ab941b-e0be-4e4e-baf0-ce6837b8224c",
                            TwoFactorEnabled = false,
                            UserName = "Daniela24@yahoo.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ccf5d6ec-583d-4e05-8efa-e4fdd5b618cc",
                            Email = "Dawson.Ankunding20@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Darrick Wuckert",
                            PhoneNumber = "923.481.6881 x43390",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a312ddf4-056b-4e57-aad7-795b7ea26337",
                            TwoFactorEnabled = false,
                            UserName = "Dawson.Ankunding20@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef288d27-f173-4224-8fb2-2d5c7d1a6043",
                            Email = "Joshua.Kunze67@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Felipa Dooley",
                            PhoneNumber = "(614) 887-3019 x2869",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2a400862-8c64-4e05-bdc0-01364c77f140",
                            TwoFactorEnabled = false,
                            UserName = "Joshua.Kunze67@yahoo.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e9ea78e5-f5e1-4a5d-9b1e-b4cbeceeff9b",
                            Email = "Everette_Marquardt@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Chaim Howe",
                            PhoneNumber = "910.691.9185 x16414",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "316be3f8-434d-4b2d-b099-73d2a4730870",
                            TwoFactorEnabled = false,
                            UserName = "Everette_Marquardt@hotmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5225),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5406),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5413),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5416),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5419),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 6,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5422),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5425),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5428),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5431),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5433),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5436),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5439),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 13,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5441),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 14,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5444),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5446),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5449),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 17,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5451),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5454),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 19,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5457),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 20,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5460),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 21,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5462),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 22,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5465),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 23,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5467),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 24,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5470),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 25,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5473),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 26,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5476),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 27,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5478),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 28,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5481),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 29,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5484),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 30,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 9, 21, 36, 327, DateTimeKind.Utc).AddTicks(5486),
                            IsDeleted = false,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.HasOne("DataAccessLayer.Model.GiftCard", "GiftCard")
                        .WithMany("Coupons")
                        .HasForeignKey("GiftCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("GiftCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
