// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.PostgreSQL.Migrations.Migrations
{
    [DbContext(typeof(BookHubDbContext))]
    partial class BookHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Kochburgh",
                            Country = "Sierra Leone",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 735, DateTimeKind.Utc).AddTicks(9506),
                            IsDeleted = false,
                            State = "Arizona",
                            Street = "74656 Gulgowski Valley",
                            ZipCode = "64928"
                        },
                        new
                        {
                            Id = 2,
                            City = "Port Drakeland",
                            Country = "Saint Vincent and the Grenadines",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(186),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "79954 Jayda Shoal",
                            ZipCode = "97892"
                        },
                        new
                        {
                            Id = 3,
                            City = "East Stevieport",
                            Country = "Palau",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(418),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "6640 Ebony Springs",
                            ZipCode = "50349"
                        },
                        new
                        {
                            Id = 4,
                            City = "Lindgrenside",
                            Country = "Uganda",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(582),
                            IsDeleted = false,
                            State = "Colorado",
                            Street = "4329 Lebsack Ridges",
                            ZipCode = "27557"
                        },
                        new
                        {
                            Id = 5,
                            City = "North Iciechester",
                            Country = "Latvia",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(718),
                            IsDeleted = false,
                            State = "Nebraska",
                            Street = "42097 Greenholt Field",
                            ZipCode = "84187"
                        },
                        new
                        {
                            Id = 6,
                            City = "East Royceland",
                            Country = "Myanmar",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(868),
                            IsDeleted = false,
                            State = "Washington",
                            Street = "248 Isidro Courts",
                            ZipCode = "51768"
                        },
                        new
                        {
                            Id = 7,
                            City = "Vladimirbury",
                            Country = "Haiti",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(1014),
                            IsDeleted = false,
                            State = "New Hampshire",
                            Street = "56838 Baron Port",
                            ZipCode = "29814-2530"
                        },
                        new
                        {
                            Id = 8,
                            City = "West Jacques",
                            Country = "Bahamas",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(1184),
                            IsDeleted = false,
                            State = "West Virginia",
                            Street = "60633 West Highway",
                            ZipCode = "07389"
                        },
                        new
                        {
                            Id = 9,
                            City = "East Bailey",
                            Country = "Mozambique",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(1336),
                            IsDeleted = false,
                            State = "Pennsylvania",
                            Street = "69304 Ruecker Island",
                            ZipCode = "90139-0329"
                        },
                        new
                        {
                            Id = 10,
                            City = "Carleefort",
                            Country = "Malaysia",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(1452),
                            IsDeleted = false,
                            State = "West Virginia",
                            Street = "4052 Cassin Square",
                            ZipCode = "02472"
                        },
                        new
                        {
                            Id = 11,
                            City = "West Zena",
                            Country = "French Guiana",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(1618),
                            IsDeleted = false,
                            State = "Alabama",
                            Street = "604 Jones Terrace",
                            ZipCode = "17965"
                        },
                        new
                        {
                            Id = 12,
                            City = "Gutmannhaven",
                            Country = "Guyana",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(1769),
                            IsDeleted = false,
                            State = "Wisconsin",
                            Street = "030 Salvatore Curve",
                            ZipCode = "18267-2160"
                        },
                        new
                        {
                            Id = 13,
                            City = "Mohrhaven",
                            Country = "Dominica",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(1940),
                            IsDeleted = false,
                            State = "Alabama",
                            Street = "43056 Balistreri Ports",
                            ZipCode = "14541-7161"
                        },
                        new
                        {
                            Id = 14,
                            City = "Wilberttown",
                            Country = "Guinea",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(2073),
                            IsDeleted = false,
                            State = "Washington",
                            Street = "6834 Leopoldo Harbor",
                            ZipCode = "70816-0795"
                        },
                        new
                        {
                            Id = 15,
                            City = "West Brisa",
                            Country = "Papua New Guinea",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 736, DateTimeKind.Utc).AddTicks(2204),
                            IsDeleted = false,
                            State = "Oregon",
                            Street = "78418 Regan Curve",
                            ZipCode = "05741-1652"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Magnam error magnam distinctio quae est repudiandae. Est distinctio ut id aliquam sit necessitatibus fugiat quia ipsum. Dolorem neque error est voluptas et.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(8496),
                            IsDeleted = false,
                            Name = "Athena Breitenberg"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Aut quibusdam quo tempore et dolorum omnis est voluptatem vitae. Exercitationem veritatis voluptatem unde inventore. Unde dolorum fuga qui et labore fuga mollitia adipisci excepturi.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(8867),
                            IsDeleted = false,
                            Name = "Glennie Terry"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Facilis in similique quasi perspiciatis officia et possimus. Consequuntur voluptas ea et. Amet autem voluptates doloremque voluptates. Facere nostrum neque minus asperiores velit dolor laboriosam ducimus explicabo.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9011),
                            IsDeleted = false,
                            Name = "Kali Herzog"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Ut at temporibus. Eum maxime facere. Et molestias eveniet incidunt nisi esse aut ut ab. Qui ea voluptas nihil incidunt perferendis saepe dolor labore.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9130),
                            IsDeleted = false,
                            Name = "Colton Durgan"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Atque architecto aut voluptatem neque aut. Sint quaerat aspernatur omnis explicabo. Ea id nesciunt debitis. Dolorem cumque qui atque dolores. Harum doloremque dolores voluptatum eligendi tempora amet.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9254),
                            IsDeleted = false,
                            Name = "Shana Bode"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Culpa et non maxime vel eum. Qui repellendus non dolores eligendi tenetur laborum et. Odio natus dolorem enim numquam ex aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9350),
                            IsDeleted = false,
                            Name = "Kiley Paucek"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Earum libero omnis animi repudiandae. Id mollitia alias rerum ad ratione dicta. Nostrum consequuntur non rerum consequatur aut ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9457),
                            IsDeleted = false,
                            Name = "Boris Schaden"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Voluptatum quia quaerat error voluptatem deserunt quia sed. Corrupti quia excepturi necessitatibus quis reiciendis culpa. Voluptatem optio illo sint. Libero pariatur aut dolorem nemo excepturi. Sunt id aut ut doloremque necessitatibus.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9523),
                            IsDeleted = false,
                            Name = "Murl Lind"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Minus repudiandae unde ad magni sunt corporis earum ratione rerum. Quos culpa magnam minima dolor. Cum aut et quo iste inventore. Voluptas explicabo voluptas. Velit sint repellendus. Repellat fugit in quia.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9636),
                            IsDeleted = false,
                            Name = "Jovani Lynch"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Neque illo non quibusdam vel quidem. Cum rem molestias ut blanditiis temporibus deleniti sunt. Voluptatibus voluptatem unde nemo odio distinctio totam error odit. Magni non accusantium provident et aut hic totam. Et est deleniti.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 726, DateTimeKind.Utc).AddTicks(9739),
                            IsDeleted = false,
                            Name = "Nolan Heidenreich"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditCount")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastEditorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastEditorId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(6202),
                            Description = "Vitae porro consequatur. Officiis veniam excepturi dolor. Similique iste consequatur tempora. Facilis eaque enim libero consequatur ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-7.jpg",
                            IsDeleted = false,
                            Price = 84.31m,
                            PrimaryGenreId = 4,
                            PublisherId = 5,
                            Title = "Hic molestias fugiat."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(8475),
                            Description = "Porro quos ab aut est fuga assumenda. Fuga eaque nisi nihil ut ipsum et quia architecto facilis. In adipisci eaque aut exercitationem et pariatur autem quae voluptate. Delectus distinctio sit expedita possimus officiis necessitatibus molestias dolorem et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 81.50m,
                            PrimaryGenreId = 4,
                            PublisherId = 5,
                            Title = "Quo sequi saepe."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(8741),
                            Description = "Impedit corporis vel dolor nemo iure numquam sunt reiciendis. Aliquid eos qui voluptas recusandae. Possimus optio aut ut quam libero dolores atque. Vero tempore quo qui qui aliquam. Praesentium vel sequi numquam hic corporis illo beatae. Vero non ut commodi impedit expedita officiis sapiente.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 87.92m,
                            PrimaryGenreId = 1,
                            PublisherId = 5,
                            Title = "Non aut dolore."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(8935),
                            Description = "Officiis qui eius. Aperiam ducimus perspiciatis ea corrupti neque veritatis aut aperiam. Fugiat voluptatem veniam aut eum ut. Dolorem cum consequuntur laudantium reiciendis soluta iure.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 36.88m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Aut quod quasi."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9037),
                            Description = "Id explicabo est magni numquam sed id eius. In ut et reprehenderit exercitationem cum et perferendis. Consequatur dolor cupiditate et deleniti.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 74.73m,
                            PrimaryGenreId = 2,
                            PublisherId = 3,
                            Title = "Omnis harum maxime."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9149),
                            Description = "Velit fuga vel voluptate doloremque. Modi ut non harum consequatur omnis. Nisi ut eos voluptatum nihil quam vitae. Quia quia est amet doloremque dolore quia ut.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 75.46m,
                            PrimaryGenreId = 7,
                            PublisherId = 4,
                            Title = "Saepe modi ab."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9237),
                            Description = "Eos quos accusantium et. Ab quidem modi animi quia voluptates eligendi. Adipisci voluptatem sit sed. Pariatur dolorem natus fuga.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 67.10m,
                            PrimaryGenreId = 5,
                            PublisherId = 5,
                            Title = "Enim id voluptas."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9344),
                            Description = "Sapiente quia est reprehenderit nostrum maxime esse dolores. Aliquam accusantium quia ipsam recusandae. Nostrum ratione est sed eum. Beatae eaque aperiam aut non et hic qui nesciunt incidunt. Molestias numquam ut velit accusantium aliquam.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 51.27m,
                            PrimaryGenreId = 5,
                            PublisherId = 3,
                            Title = "Nisi aut temporibus."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9451),
                            Description = "Incidunt ea aliquid commodi et est doloremque. Qui sit suscipit minus rerum totam dolore enim non doloremque. Ipsa dolores facere aliquam non minima sit dolor. Enim sit modi delectus. Asperiores et veniam velit reiciendis exercitationem sed.",
                            EditCount = 0,
                            ImagePath = "/images/cover-3.jpg",
                            IsDeleted = false,
                            Price = 24.44m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Saepe saepe provident."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9595),
                            Description = "Natus ut natus recusandae similique excepturi dolor non itaque ullam. Suscipit qui in. Necessitatibus et quia. Laboriosam dolor et repellendus ratione enim eaque libero et et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-4.jpg",
                            IsDeleted = false,
                            Price = 17.64m,
                            PrimaryGenreId = 7,
                            PublisherId = 2,
                            Title = "Dicta dolorem et."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9707),
                            Description = "Voluptatem et adipisci deleniti. Et a ratione molestias. Est dolorem qui quaerat animi autem dolores laborum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 20.28m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Voluptatibus quisquam minima."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9773),
                            Description = "Ullam ea et quam dignissimos tempore. Iusto nihil non est corporis cum minima ut velit aliquid. Numquam distinctio debitis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-8.jpg",
                            IsDeleted = false,
                            Price = 98.40m,
                            PrimaryGenreId = 5,
                            PublisherId = 3,
                            Title = "Velit quaerat architecto."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9861),
                            Description = "Ab reprehenderit mollitia et sed. Id ipsa aspernatur consectetur voluptate laborum voluptate omnis. Ratione sint eos. Sapiente atque rem cupiditate officiis voluptatem consequatur dolor iure dignissimos.",
                            EditCount = 0,
                            ImagePath = "/images/cover-9.jpg",
                            IsDeleted = false,
                            Price = 42.25m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Magni non dolor."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 730, DateTimeKind.Utc).AddTicks(9945),
                            Description = "Molestiae aspernatur assumenda voluptas ipsum iusto molestiae. Ut illo unde ut sapiente id. Qui ad vel id corporis in. Quaerat magni ab quia cum explicabo doloribus ut et.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 44.85m,
                            PrimaryGenreId = 6,
                            PublisherId = 2,
                            Title = "Excepturi sunt delectus."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 731, DateTimeKind.Utc).AddTicks(109),
                            Description = "Et et et rem atque. Eum et minus ut quia quia officiis molestiae suscipit eum. Rerum ea eum aut alias delectus quia.",
                            EditCount = 0,
                            ImagePath = "/images/cover-1.jpg",
                            IsDeleted = false,
                            Price = 48.12m,
                            PrimaryGenreId = 5,
                            PublisherId = 4,
                            Title = "Voluptatem ipsum et."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 731, DateTimeKind.Utc).AddTicks(176),
                            Description = "Blanditiis aut ab aut minima velit perspiciatis reiciendis. Amet quo ut. Nihil eum tempore dolorum cupiditate placeat ad nostrum.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 12.48m,
                            PrimaryGenreId = 5,
                            PublisherId = 5,
                            Title = "Consequuntur placeat minus."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 731, DateTimeKind.Utc).AddTicks(281),
                            Description = "Rem neque nesciunt qui sunt ducimus error dolorem consectetur. Unde voluptates in ipsam vel. Rerum eos quisquam. Ipsum nihil molestiae reiciendis.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 85.40m,
                            PrimaryGenreId = 5,
                            PublisherId = 3,
                            Title = "Quae inventore quod."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 731, DateTimeKind.Utc).AddTicks(351),
                            Description = "Quo nihil temporibus quis aut velit animi. Dolorem et soluta ipsa. Blanditiis totam sequi est sint. Aut cum totam quibusdam. Rem officia debitis provident repudiandae a at. Quos sequi labore animi at consectetur eius.",
                            EditCount = 0,
                            ImagePath = "/images/cover-5.jpg",
                            IsDeleted = false,
                            Price = 21.27m,
                            PrimaryGenreId = 3,
                            PublisherId = 5,
                            Title = "Commodi dolorum fugit."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 731, DateTimeKind.Utc).AddTicks(484),
                            Description = "Provident voluptatem sit ab enim neque occaecati facere possimus repudiandae. Fugiat explicabo sint alias odio inventore. Dolores ea sunt atque quaerat ea veniam ut reiciendis perferendis. Aut pariatur molestiae.",
                            EditCount = 0,
                            ImagePath = "/images/cover-6.jpg",
                            IsDeleted = false,
                            Price = 71.38m,
                            PrimaryGenreId = 1,
                            PublisherId = 3,
                            Title = "Temporibus dolorem accusamus."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 731, DateTimeKind.Utc).AddTicks(594),
                            Description = "Quibusdam ratione reiciendis. Vero omnis ad suscipit in odio numquam fuga omnis nostrum. Repellat qui quae ipsam totam ut. Quae quas rem culpa ad ea perferendis et. Perspiciatis laborum inventore aut dolorum maiores rem nostrum corrupti.",
                            EditCount = 0,
                            ImagePath = "/images/cover-2.jpg",
                            IsDeleted = false,
                            Price = 40.28m,
                            PrimaryGenreId = 6,
                            PublisherId = 1,
                            Title = "Consequatur qui illum."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical Fiction"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenreLink");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7406),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7408),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7409),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7409),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7409),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7410),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7410),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7410),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7411),
                            IsDeleted = false,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GiftCardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("OrderId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceReduction")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderState")
                        .HasColumnType("integer");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddressId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 737, DateTimeKind.Utc).AddTicks(7587),
                            CustomerEmail = "Jordan.Grant@yahoo.com",
                            CustomerName = "Jordan Grant",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 2,
                            BillingAddressId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(1244),
                            CustomerEmail = "Diana_Halvorson@gmail.com",
                            CustomerName = "Diana Halvorson",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 15,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            BillingAddressId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(2476),
                            CustomerEmail = "Ruben.Paucek@hotmail.com",
                            CustomerName = "Ruben Paucek",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 3,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(3029),
                            CustomerEmail = "Lynda32@yahoo.com",
                            CustomerName = "Lynda Ryan",
                            IsDeleted = false,
                            OrderState = 4,
                            ShippingAddressId = 11,
                            TotalAmount = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(3709),
                            CustomerEmail = "Darrin_Stokes@gmail.com",
                            CustomerName = "Darrin Stokes",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(4244),
                            CustomerEmail = "Josephine_Hirthe5@yahoo.com",
                            CustomerName = "Josephine Hirthe",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 13,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            BillingAddressId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(4746),
                            CustomerEmail = "Jaime.Steuber@hotmail.com",
                            CustomerName = "Jaime Steuber",
                            IsDeleted = false,
                            OrderState = 2,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            BillingAddressId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(5437),
                            CustomerEmail = "Ginger_Mayer@gmail.com",
                            CustomerName = "Ginger Mayer",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 1,
                            TotalAmount = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 9,
                            BillingAddressId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(6080),
                            CustomerEmail = "Julian41@yahoo.com",
                            CustomerName = "Julian Bahringer",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 8,
                            TotalAmount = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            BillingAddressId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(6723),
                            CustomerEmail = "Walter97@gmail.com",
                            CustomerName = "Walter Pouros",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 12,
                            TotalAmount = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            BillingAddressId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(7249),
                            CustomerEmail = "Latoya.Ondricka@yahoo.com",
                            CustomerName = "Latoya Ondricka",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 10,
                            TotalAmount = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            BillingAddressId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(7736),
                            CustomerEmail = "Ignacio_Kautzer@gmail.com",
                            CustomerName = "Ignacio Kautzer",
                            IsDeleted = false,
                            OrderState = 0,
                            ShippingAddressId = 7,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 13,
                            BillingAddressId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(8287),
                            CustomerEmail = "Eula8@gmail.com",
                            CustomerName = "Eula Fritsch",
                            IsDeleted = false,
                            OrderState = 5,
                            ShippingAddressId = 9,
                            TotalAmount = 0m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 14,
                            BillingAddressId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(8814),
                            CustomerEmail = "Fredrick_McLaughlin71@hotmail.com",
                            CustomerName = "Fredrick McLaughlin",
                            IsDeleted = false,
                            OrderState = 1,
                            ShippingAddressId = 5,
                            TotalAmount = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            BillingAddressId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 738, DateTimeKind.Utc).AddTicks(9354),
                            CustomerEmail = "Sammy_Barton30@yahoo.com",
                            CustomerName = "Sammy Barton",
                            IsDeleted = false,
                            OrderState = 3,
                            ShippingAddressId = 6,
                            TotalAmount = 0m,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(4952),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 84.95m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6665),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 90.15m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6718),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 17.82m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6731),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 28.70m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6740),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 79.42m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6749),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 54.61m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6757),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 52.64m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6764),
                            IsDeleted = false,
                            OrderId = 15,
                            Price = 50.72m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6772),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 30.47m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6849),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 24.43m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6858),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 20.20m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6867),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 71.51m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6875),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 29.20m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6883),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 21.35m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 15,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6890),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 87.45m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 16,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6897),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 99.76m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 17,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6905),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 23.05m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6914),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 90.28m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6921),
                            IsDeleted = false,
                            OrderId = 3,
                            Price = 26.38m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 20,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6929),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 53.20m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 21,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6937),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 89.96m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 22,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6945),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 25.17m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 23,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6952),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 90.15m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 24,
                            BookId = 7,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6961),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 83.76m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 25,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6968),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 76.37m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 26,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6976),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 36.32m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 27,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6983),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 11.62m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 28,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6991),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 73.04m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(6999),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 37.58m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 30,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7006),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 11.39m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 31,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7014),
                            IsDeleted = false,
                            OrderId = 4,
                            Price = 10.18m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 32,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7022),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 40.49m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 33,
                            BookId = 8,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7030),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 76.11m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 34,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7037),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 15.95m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 35,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7045),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 17.88m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 36,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7052),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 30.21m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 37,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7060),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 27.37m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 38,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7068),
                            IsDeleted = false,
                            OrderId = 8,
                            Price = 19.08m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7076),
                            IsDeleted = false,
                            OrderId = 7,
                            Price = 14.37m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 40,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7083),
                            IsDeleted = false,
                            OrderId = 11,
                            Price = 34.33m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 41,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7091),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 53.26m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 42,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7144),
                            IsDeleted = false,
                            OrderId = 12,
                            Price = 11.65m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 43,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7153),
                            IsDeleted = false,
                            OrderId = 6,
                            Price = 91.58m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 44,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7160),
                            IsDeleted = false,
                            OrderId = 10,
                            Price = 11.62m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 45,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7168),
                            IsDeleted = false,
                            OrderId = 2,
                            Price = 78.69m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 46,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7175),
                            IsDeleted = false,
                            OrderId = 13,
                            Price = 47.39m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 47,
                            BookId = 5,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7183),
                            IsDeleted = false,
                            OrderId = 1,
                            Price = 14.04m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 48,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7190),
                            IsDeleted = false,
                            OrderId = 9,
                            Price = 96.86m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 49,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7198),
                            IsDeleted = false,
                            OrderId = 5,
                            Price = 83.60m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 50,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 740, DateTimeKind.Utc).AddTicks(7206),
                            IsDeleted = false,
                            OrderId = 14,
                            Price = 42.61m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Neque ut ad exercitationem consectetur. Quidem ea quaerat velit perferendis sed voluptates. Rerum ut eveniet. Earum eum rem enim. Earum ipsam eos consectetur. Sequi natus id aut eum fuga sed consequatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 728, DateTimeKind.Utc).AddTicks(7545),
                            IsDeleted = false,
                            Name = "Leannon, Walker and McKenzie"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Quasi tempora iusto rerum suscipit iste dolores nisi. Nihil qui nisi eveniet illum. Est nam non ab. Est est voluptatem qui odit. Et sunt explicabo id quia perspiciatis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 728, DateTimeKind.Utc).AddTicks(8469),
                            IsDeleted = false,
                            Name = "Berge - Streich"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Magni nemo veritatis corporis voluptatem consequatur est animi eveniet alias. Ipsa exercitationem aliquam ea vero alias quas culpa eum vel. Cum consequatur qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 728, DateTimeKind.Utc).AddTicks(8753),
                            IsDeleted = false,
                            Name = "Bernhard and Sons"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Saepe ea numquam. Quo aut dolorum. Reiciendis quod alias non qui et earum. Quisquam iure beatae. Dolorum dolores et eligendi. Voluptas cum dolorem debitis architecto quia corrupti.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 728, DateTimeKind.Utc).AddTicks(9018),
                            IsDeleted = false,
                            Name = "Hills Inc"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Eos ipsum est dolorem qui voluptates dolores veniam id. Ut dolorum dolores. Voluptates est dignissimos nulla. Assumenda excepturi vero expedita cumque perferendis dolore hic dolorum. Iure aspernatur rem ea.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 728, DateTimeKind.Utc).AddTicks(9191),
                            IsDeleted = false,
                            Name = "Bode - Beahan"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 14,
                            Comment = "Aperiam voluptatem odit error quas exercitationem.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(6139),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            BookId = 1,
                            Comment = "Ratione qui quidem asperiores rerum et officiis dolorum eveniet asperiores.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(7690),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 3,
                            BookId = 20,
                            Comment = "Facilis dolores inventore placeat in qui asperiores ipsum at.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(7777),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 9,
                            Comment = "Ad vel veniam quasi.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(7816),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 10,
                            Comment = "Magni non esse veritatis id sed earum itaque est qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(7968),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 11,
                            Comment = "Quidem minus ea quasi animi voluptatum iste.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8005),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            BookId = 7,
                            Comment = "Quo commodi quis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8032),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            BookId = 20,
                            Comment = "Laborum atque quaerat omnis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8049),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            BookId = 10,
                            Comment = "Accusamus unde rerum nesciunt impedit.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8068),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 4,
                            Comment = "Aut quidem eos nostrum ea.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8091),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            BookId = 4,
                            Comment = "Hic ex qui alias repudiandae molestias optio sit recusandae labore.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8112),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 12,
                            BookId = 14,
                            Comment = "Error quia perferendis laborum distinctio officia inventore voluptatem.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8146),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 9
                        },
                        new
                        {
                            Id = 13,
                            BookId = 18,
                            Comment = "Omnis corrupti neque tenetur aspernatur.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8221),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 6
                        },
                        new
                        {
                            Id = 14,
                            BookId = 18,
                            Comment = "Vero id molestias officiis quia voluptatem pariatur in modi.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8242),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 15,
                            BookId = 7,
                            Comment = "Quia in vero dolorem dolorem qui.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8273),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 16,
                            BookId = 3,
                            Comment = "Et voluptates quae unde minima iusto quo.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8294),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 17,
                            BookId = 9,
                            Comment = "Nobis omnis quasi quidem ipsam est quaerat.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8320),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 7
                        },
                        new
                        {
                            Id = 18,
                            BookId = 12,
                            Comment = "Est quia vel et officia eos magni aspernatur perspiciatis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8345),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 19,
                            BookId = 17,
                            Comment = "Voluptatibus quia dicta pariatur dolore sit.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8374),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 20,
                            BookId = 3,
                            Comment = "Non nostrum distinctio.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8396),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 21,
                            BookId = 9,
                            Comment = "Placeat alias cumque eum perferendis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8442),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 22,
                            BookId = 18,
                            Comment = "Soluta sed eius aut qui ab nihil.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8462),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 5
                        },
                        new
                        {
                            Id = 23,
                            BookId = 11,
                            Comment = "Hic ut laborum maxime impedit non.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8487),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 24,
                            BookId = 5,
                            Comment = "Rerum esse modi pariatur est et numquam perspiciatis ut excepturi.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8506),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 25,
                            BookId = 1,
                            Comment = "Consectetur consectetur quidem ea voluptas officiis molestias porro.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8533),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 26,
                            BookId = 8,
                            Comment = "Velit porro fugiat voluptatem ut rerum.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8557),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 27,
                            BookId = 3,
                            Comment = "Atque sapiente ullam totam et.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8577),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 28,
                            BookId = 6,
                            Comment = "Sint tenetur fuga non omnis sequi hic eum excepturi deleniti.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8596),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 10
                        },
                        new
                        {
                            Id = 29,
                            BookId = 3,
                            Comment = "Aliquam possimus dignissimos animi nisi.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8655),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 30,
                            BookId = 6,
                            Comment = "Officiis doloribus dolore.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8679),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 31,
                            BookId = 7,
                            Comment = "Amet voluptatem quia optio alias enim.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8695),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 32,
                            BookId = 4,
                            Comment = "Aut ut expedita ut mollitia cumque accusantium dolores nihil.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8714),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 33,
                            BookId = 15,
                            Comment = "Officia voluptas at blanditiis sint corporis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8740),
                            IsDeleted = false,
                            Stars = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 34,
                            BookId = 11,
                            Comment = "Aut impedit velit.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8762),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 35,
                            BookId = 20,
                            Comment = "Quod laboriosam molestiae.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8776),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 36,
                            BookId = 9,
                            Comment = "Vel accusantium et dolores aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8794),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 8
                        },
                        new
                        {
                            Id = 37,
                            BookId = 10,
                            Comment = "Quidem ut quis voluptatum aut recusandae aut maiores.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8811),
                            IsDeleted = false,
                            Stars = 4,
                            UserId = 9
                        },
                        new
                        {
                            Id = 38,
                            BookId = 11,
                            Comment = "Accusamus dignissimos explicabo.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8866),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 39,
                            BookId = 2,
                            Comment = "Reiciendis aut amet saepe laboriosam sint.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8879),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 40,
                            BookId = 8,
                            Comment = "Enim iure dolorem fugiat eveniet doloribus maxime voluptatem illo.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8901),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 41,
                            BookId = 17,
                            Comment = "Eligendi ut quia necessitatibus inventore impedit quis blanditiis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8924),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 42,
                            BookId = 17,
                            Comment = "Cumque maxime voluptatibus minus error ipsam voluptatem et sequi aut.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8950),
                            IsDeleted = false,
                            Stars = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 43,
                            BookId = 17,
                            Comment = "Numquam nihil rerum officiis.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8972),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 44,
                            BookId = 15,
                            Comment = "Culpa similique dolore ex eius veniam iure.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(8990),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 45,
                            BookId = 10,
                            Comment = "Mollitia asperiores fuga.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(9043),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 46,
                            BookId = 18,
                            Comment = "Consequatur rerum veniam deleniti qui enim.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(9057),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 47,
                            BookId = 7,
                            Comment = "Rem eum nihil ut.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(9077),
                            IsDeleted = false,
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 48,
                            BookId = 9,
                            Comment = "Consequatur est iste aut ex aliquam.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(9090),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 49,
                            BookId = 3,
                            Comment = "Necessitatibus autem atque.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(9109),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 50,
                            BookId = 4,
                            Comment = "Odio veritatis eaque porro officia architecto.",
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 732, DateTimeKind.Utc).AddTicks(9123),
                            IsDeleted = false,
                            Stars = 1,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b54b442d-7000-449e-a4b8-9ba099564965",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin User",
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "15c5d64b-d583-4c4e-ada9-030a6e3b762a",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a9c1f07b-ebcc-414f-8ffd-045400cd3f8b",
                            Email = "Emelie.Feeney89@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Austen Nader",
                            PhoneNumber = "1-201-649-7323 x78071",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "666ce78e-403c-4d26-97e1-cd4259bbce74",
                            TwoFactorEnabled = false,
                            UserName = "Emelie.Feeney89@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2e3429b7-9905-4aba-a69f-65b8103f76c5",
                            Email = "Norene.Greenholt@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Eveline Hickle",
                            PhoneNumber = "(824) 657-5699",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fedbce84-b434-41ec-8933-286821843c93",
                            TwoFactorEnabled = false,
                            UserName = "Norene.Greenholt@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29b3dca6-3937-4fac-8578-be6eac803703",
                            Email = "Opal12@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Buck Runolfsson",
                            PhoneNumber = "(899) 704-1635 x459",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4825c2c4-ce17-45aa-9dc9-1fa82d7b8e7e",
                            TwoFactorEnabled = false,
                            UserName = "Opal12@yahoo.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4f8416cc-778d-4fdf-834b-3a1fc4e864aa",
                            Email = "Aniya15@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Eulah Beahan",
                            PhoneNumber = "1-966-395-7825 x266",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "62da3b64-b355-4c35-8ca2-57242cb13022",
                            TwoFactorEnabled = false,
                            UserName = "Aniya15@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b983229b-6d29-42a4-a984-bcbcce08539c",
                            Email = "Kris74@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Alisa Mohr",
                            PhoneNumber = "875.989.6538 x6187",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4b06c2fe-a14f-43b9-838f-db9a8416df8a",
                            TwoFactorEnabled = false,
                            UserName = "Kris74@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "112691a3-d64a-41fd-92ec-c5d558e102de",
                            Email = "Brennan.Cremin77@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Eda Keebler",
                            PhoneNumber = "321-741-9566 x928",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c10f1d71-40c5-4708-89c9-b5142b8926ae",
                            TwoFactorEnabled = false,
                            UserName = "Brennan.Cremin77@yahoo.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aca34e37-fabe-4d17-bb90-76bf208140b5",
                            Email = "Brannon87@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Ava Stanton",
                            PhoneNumber = "1-255-340-2201",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a5e6eb29-4d13-4696-ac5d-f84de7339f22",
                            TwoFactorEnabled = false,
                            UserName = "Brannon87@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6ac06bba-9986-4c1e-87ac-2041ce351c73",
                            Email = "Jaylan_Nitzsche29@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Gussie McKenzie",
                            PhoneNumber = "210.877.4402 x802",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3356b421-e8f3-4503-a20a-22474b1abd9a",
                            TwoFactorEnabled = false,
                            UserName = "Jaylan_Nitzsche29@hotmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3faca217-e0c5-4cd0-b885-2dc9940f410a",
                            Email = "Martine10@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Velva Hand",
                            PhoneNumber = "(961) 476-3459 x0753",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "819c97cb-f719-4298-ba65-ab51ffd23363",
                            TwoFactorEnabled = false,
                            UserName = "Martine10@gmail.com"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3630),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 2,
                            BookId = 12,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3781),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3786),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3790),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 5,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3793),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3796),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3799),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3802),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            BookId = 9,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3805),
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3808),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 11,
                            BookId = 14,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3811),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 12,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3835),
                            IsDeleted = false,
                            UserId = 9
                        },
                        new
                        {
                            Id = 13,
                            BookId = 19,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3839),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 10,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3841),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 15,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3844),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 16,
                            BookId = 13,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3847),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 17,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3850),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 18,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3853),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3856),
                            IsDeleted = false,
                            UserId = 10
                        },
                        new
                        {
                            Id = 20,
                            BookId = 20,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3859),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 21,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3861),
                            IsDeleted = false,
                            UserId = 4
                        },
                        new
                        {
                            Id = 22,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3864),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 23,
                            BookId = 6,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3867),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 24,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3870),
                            IsDeleted = false,
                            UserId = 7
                        },
                        new
                        {
                            Id = 25,
                            BookId = 11,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3873),
                            IsDeleted = false,
                            UserId = 8
                        },
                        new
                        {
                            Id = 26,
                            BookId = 16,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3876),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 27,
                            BookId = 18,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3879),
                            IsDeleted = false,
                            UserId = 5
                        },
                        new
                        {
                            Id = 28,
                            BookId = 15,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3881),
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            BookId = 17,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3884),
                            IsDeleted = false,
                            UserId = 6
                        },
                        new
                        {
                            Id = 30,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 12, 31, 18, 51, 29, 734, DateTimeKind.Utc).AddTicks(3887),
                            IsDeleted = false,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "LastEditor")
                        .WithMany()
                        .HasForeignKey("LastEditorId");

                    b.HasOne("DataAccessLayer.Model.BookGenre", "PrimaryGenre")
                        .WithMany("PrimaryBooks")
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("LastEditor");

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenreLink", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("SecondaryGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.BookGenre", "Genre")
                        .WithMany("SecondaryBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("DataAccessLayer.Model.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.CartItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Coupon", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Cart", "Cart")
                        .WithMany("Coupons")
                        .HasForeignKey("CartId");

                    b.HasOne("DataAccessLayer.Model.GiftCard", "GiftCard")
                        .WithMany("Coupons")
                        .HasForeignKey("GiftCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("Coupons")
                        .HasForeignKey("OrderId");

                    b.Navigation("Cart");

                    b.Navigation("GiftCard");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Review", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.WishlistItem", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Book", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SecondaryGenres");
                });

            modelBuilder.Entity("DataAccessLayer.Model.BookGenre", b =>
                {
                    b.Navigation("PrimaryBooks");

                    b.Navigation("SecondaryBooks");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.GiftCard", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Navigation("Coupons");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
